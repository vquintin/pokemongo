// Code generated by protoc-gen-go.
// source: sub.proto
// DO NOT EDIT!

/*
Package sub is a generated protocol buffer package.

It is generated from these files:
	sub.proto

It has these top-level messages:
	GetPlayerResponse
	Profile
	DailyBonus
	Currency
	AvatarDetails
	DownloadSettingsRequest
	GetInventoryResponse
	InventoryDelta
	InventoryItem
	InventoryItemData
	Pokemon
	Item
	PokedexEntry
	PlayerStats
	PlayerCurrency
	PlayerCamera
	InventoryUpgrades
	InventoryUpgrade
	AppliedItems
	AppliedItem
	EggIncubators
	EggIncubator
	PokemonFamily
	GetMapObjectsRequest
	GetMapObjectsResponse
	MapCell
	FortData
	FortLureInfo
	SpawnPoint
	FortSummary
	WildPokemon
	PokemonData
	MapPokemon
	NearbyPokemon
	DownloadSettingsResponse
	GlobalSettings
	FortSettings
	MapSettings
	LevelSettings
	InventorySettings
*/
package sub

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import enum "github.com/vquintin/pokemongo/protobuf/enum"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GetPlayerResponse struct {
	Unknown1         *int32   `protobuf:"varint,1,opt,name=unknown1" json:"unknown1,omitempty"`
	Profile          *Profile `protobuf:"bytes,2,opt,name=profile" json:"profile,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *GetPlayerResponse) Reset()                    { *m = GetPlayerResponse{} }
func (m *GetPlayerResponse) String() string            { return proto.CompactTextString(m) }
func (*GetPlayerResponse) ProtoMessage()               {}
func (*GetPlayerResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *GetPlayerResponse) GetUnknown1() int32 {
	if m != nil && m.Unknown1 != nil {
		return *m.Unknown1
	}
	return 0
}

func (m *GetPlayerResponse) GetProfile() *Profile {
	if m != nil {
		return m.Profile
	}
	return nil
}

type Profile struct {
	CreationTime     *int64          `protobuf:"varint,1,req,name=creation_time,json=creationTime" json:"creation_time,omitempty"`
	Username         *string         `protobuf:"bytes,2,opt,name=username" json:"username,omitempty"`
	Team             *enum.TeamColor `protobuf:"varint,5,opt,name=team,enum=enum.TeamColor" json:"team,omitempty"`
	Tutorial         []byte          `protobuf:"bytes,7,opt,name=tutorial" json:"tutorial,omitempty"`
	Avatar           *AvatarDetails  `protobuf:"bytes,8,opt,name=avatar" json:"avatar,omitempty"`
	PokeStorage      *int32          `protobuf:"varint,9,opt,name=poke_storage,json=pokeStorage" json:"poke_storage,omitempty"`
	ItemStorage      *int32          `protobuf:"varint,10,opt,name=item_storage,json=itemStorage" json:"item_storage,omitempty"`
	DailyBonus       *DailyBonus     `protobuf:"bytes,11,opt,name=daily_bonus,json=dailyBonus" json:"daily_bonus,omitempty"`
	Unknown12        []byte          `protobuf:"bytes,12,opt,name=unknown12" json:"unknown12,omitempty"`
	Unknown13        []byte          `protobuf:"bytes,13,opt,name=unknown13" json:"unknown13,omitempty"`
	Currency         []*Currency     `protobuf:"bytes,14,rep,name=currency" json:"currency,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *Profile) Reset()                    { *m = Profile{} }
func (m *Profile) String() string            { return proto.CompactTextString(m) }
func (*Profile) ProtoMessage()               {}
func (*Profile) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Profile) GetCreationTime() int64 {
	if m != nil && m.CreationTime != nil {
		return *m.CreationTime
	}
	return 0
}

func (m *Profile) GetUsername() string {
	if m != nil && m.Username != nil {
		return *m.Username
	}
	return ""
}

func (m *Profile) GetTeam() enum.TeamColor {
	if m != nil && m.Team != nil {
		return *m.Team
	}
	return enum.TeamColor_NEUTRAL
}

func (m *Profile) GetTutorial() []byte {
	if m != nil {
		return m.Tutorial
	}
	return nil
}

func (m *Profile) GetAvatar() *AvatarDetails {
	if m != nil {
		return m.Avatar
	}
	return nil
}

func (m *Profile) GetPokeStorage() int32 {
	if m != nil && m.PokeStorage != nil {
		return *m.PokeStorage
	}
	return 0
}

func (m *Profile) GetItemStorage() int32 {
	if m != nil && m.ItemStorage != nil {
		return *m.ItemStorage
	}
	return 0
}

func (m *Profile) GetDailyBonus() *DailyBonus {
	if m != nil {
		return m.DailyBonus
	}
	return nil
}

func (m *Profile) GetUnknown12() []byte {
	if m != nil {
		return m.Unknown12
	}
	return nil
}

func (m *Profile) GetUnknown13() []byte {
	if m != nil {
		return m.Unknown13
	}
	return nil
}

func (m *Profile) GetCurrency() []*Currency {
	if m != nil {
		return m.Currency
	}
	return nil
}

type DailyBonus struct {
	NextCollectTimestampMs              *int64 `protobuf:"varint,1,opt,name=NextCollectTimestampMs,json=nextCollectTimestampMs" json:"NextCollectTimestampMs,omitempty"`
	NextDefenderBonusCollectTimestampMs *int64 `protobuf:"varint,2,opt,name=NextDefenderBonusCollectTimestampMs,json=nextDefenderBonusCollectTimestampMs" json:"NextDefenderBonusCollectTimestampMs,omitempty"`
	XXX_unrecognized                    []byte `json:"-"`
}

func (m *DailyBonus) Reset()                    { *m = DailyBonus{} }
func (m *DailyBonus) String() string            { return proto.CompactTextString(m) }
func (*DailyBonus) ProtoMessage()               {}
func (*DailyBonus) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *DailyBonus) GetNextCollectTimestampMs() int64 {
	if m != nil && m.NextCollectTimestampMs != nil {
		return *m.NextCollectTimestampMs
	}
	return 0
}

func (m *DailyBonus) GetNextDefenderBonusCollectTimestampMs() int64 {
	if m != nil && m.NextDefenderBonusCollectTimestampMs != nil {
		return *m.NextDefenderBonusCollectTimestampMs
	}
	return 0
}

type Currency struct {
	Type             *string `protobuf:"bytes,1,req,name=type" json:"type,omitempty"`
	Amount           *int32  `protobuf:"varint,2,opt,name=amount" json:"amount,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Currency) Reset()                    { *m = Currency{} }
func (m *Currency) String() string            { return proto.CompactTextString(m) }
func (*Currency) ProtoMessage()               {}
func (*Currency) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Currency) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *Currency) GetAmount() int32 {
	if m != nil && m.Amount != nil {
		return *m.Amount
	}
	return 0
}

type AvatarDetails struct {
	Unknown2         *int32 `protobuf:"varint,2,opt,name=unknown2" json:"unknown2,omitempty"`
	Unknown3         *int32 `protobuf:"varint,3,opt,name=unknown3" json:"unknown3,omitempty"`
	Unknown9         *int32 `protobuf:"varint,9,opt,name=unknown9" json:"unknown9,omitempty"`
	Unknown10        *int32 `protobuf:"varint,10,opt,name=unknown10" json:"unknown10,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *AvatarDetails) Reset()                    { *m = AvatarDetails{} }
func (m *AvatarDetails) String() string            { return proto.CompactTextString(m) }
func (*AvatarDetails) ProtoMessage()               {}
func (*AvatarDetails) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *AvatarDetails) GetUnknown2() int32 {
	if m != nil && m.Unknown2 != nil {
		return *m.Unknown2
	}
	return 0
}

func (m *AvatarDetails) GetUnknown3() int32 {
	if m != nil && m.Unknown3 != nil {
		return *m.Unknown3
	}
	return 0
}

func (m *AvatarDetails) GetUnknown9() int32 {
	if m != nil && m.Unknown9 != nil {
		return *m.Unknown9
	}
	return 0
}

func (m *AvatarDetails) GetUnknown10() int32 {
	if m != nil && m.Unknown10 != nil {
		return *m.Unknown10
	}
	return 0
}

type DownloadSettingsRequest struct {
	Hash             *string `protobuf:"bytes,1,opt,name=hash" json:"hash,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *DownloadSettingsRequest) Reset()                    { *m = DownloadSettingsRequest{} }
func (m *DownloadSettingsRequest) String() string            { return proto.CompactTextString(m) }
func (*DownloadSettingsRequest) ProtoMessage()               {}
func (*DownloadSettingsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *DownloadSettingsRequest) GetHash() string {
	if m != nil && m.Hash != nil {
		return *m.Hash
	}
	return ""
}

type GetInventoryResponse struct {
	Success          *bool           `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	InventoryDelta   *InventoryDelta `protobuf:"bytes,2,opt,name=inventory_delta,json=inventoryDelta" json:"inventory_delta,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *GetInventoryResponse) Reset()                    { *m = GetInventoryResponse{} }
func (m *GetInventoryResponse) String() string            { return proto.CompactTextString(m) }
func (*GetInventoryResponse) ProtoMessage()               {}
func (*GetInventoryResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *GetInventoryResponse) GetSuccess() bool {
	if m != nil && m.Success != nil {
		return *m.Success
	}
	return false
}

func (m *GetInventoryResponse) GetInventoryDelta() *InventoryDelta {
	if m != nil {
		return m.InventoryDelta
	}
	return nil
}

type InventoryDelta struct {
	OriginalTimestampMs *int64           `protobuf:"varint,1,opt,name=original_timestamp_ms,json=originalTimestampMs" json:"original_timestamp_ms,omitempty"`
	NewTimestampMs      *int64           `protobuf:"varint,2,opt,name=new_timestamp_ms,json=newTimestampMs" json:"new_timestamp_ms,omitempty"`
	InventoryItems      []*InventoryItem `protobuf:"bytes,3,rep,name=inventory_items,json=inventoryItems" json:"inventory_items,omitempty"`
	XXX_unrecognized    []byte           `json:"-"`
}

func (m *InventoryDelta) Reset()                    { *m = InventoryDelta{} }
func (m *InventoryDelta) String() string            { return proto.CompactTextString(m) }
func (*InventoryDelta) ProtoMessage()               {}
func (*InventoryDelta) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *InventoryDelta) GetOriginalTimestampMs() int64 {
	if m != nil && m.OriginalTimestampMs != nil {
		return *m.OriginalTimestampMs
	}
	return 0
}

func (m *InventoryDelta) GetNewTimestampMs() int64 {
	if m != nil && m.NewTimestampMs != nil {
		return *m.NewTimestampMs
	}
	return 0
}

func (m *InventoryDelta) GetInventoryItems() []*InventoryItem {
	if m != nil {
		return m.InventoryItems
	}
	return nil
}

type InventoryItem struct {
	ModifiedTimestampMs *int64             `protobuf:"varint,1,opt,name=modified_timestamp_ms,json=modifiedTimestampMs" json:"modified_timestamp_ms,omitempty"`
	DeletedItemKey      *int64             `protobuf:"varint,2,opt,name=deleted_item_key,json=deletedItemKey" json:"deleted_item_key,omitempty"`
	InventoryItemData   *InventoryItemData `protobuf:"bytes,3,opt,name=inventory_item_data,json=inventoryItemData" json:"inventory_item_data,omitempty"`
	XXX_unrecognized    []byte             `json:"-"`
}

func (m *InventoryItem) Reset()                    { *m = InventoryItem{} }
func (m *InventoryItem) String() string            { return proto.CompactTextString(m) }
func (*InventoryItem) ProtoMessage()               {}
func (*InventoryItem) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *InventoryItem) GetModifiedTimestampMs() int64 {
	if m != nil && m.ModifiedTimestampMs != nil {
		return *m.ModifiedTimestampMs
	}
	return 0
}

func (m *InventoryItem) GetDeletedItemKey() int64 {
	if m != nil && m.DeletedItemKey != nil {
		return *m.DeletedItemKey
	}
	return 0
}

func (m *InventoryItem) GetInventoryItemData() *InventoryItemData {
	if m != nil {
		return m.InventoryItemData
	}
	return nil
}

type InventoryItemData struct {
	Pokemon           *Pokemon           `protobuf:"bytes,1,opt,name=pokemon" json:"pokemon,omitempty"`
	Item              *Item              `protobuf:"bytes,2,opt,name=item" json:"item,omitempty"`
	PokedexEntry      *PokedexEntry      `protobuf:"bytes,3,opt,name=pokedex_entry,json=pokedexEntry" json:"pokedex_entry,omitempty"`
	PlayerStats       *PlayerStats       `protobuf:"bytes,4,opt,name=player_stats,json=playerStats" json:"player_stats,omitempty"`
	PlayerCurrency    *PlayerCurrency    `protobuf:"bytes,5,opt,name=player_currency,json=playerCurrency" json:"player_currency,omitempty"`
	PlayerCamera      *PlayerCamera      `protobuf:"bytes,6,opt,name=player_camera,json=playerCamera" json:"player_camera,omitempty"`
	InventoryUpgrades *InventoryUpgrades `protobuf:"bytes,7,opt,name=inventory_upgrades,json=inventoryUpgrades" json:"inventory_upgrades,omitempty"`
	AppliedItems      *AppliedItems      `protobuf:"bytes,8,opt,name=applied_items,json=appliedItems" json:"applied_items,omitempty"`
	EggIncubators     *EggIncubators     `protobuf:"bytes,9,opt,name=egg_incubators,json=eggIncubators" json:"egg_incubators,omitempty"`
	PokemonFamily     *PokemonFamily     `protobuf:"bytes,10,opt,name=pokemon_family,json=pokemonFamily" json:"pokemon_family,omitempty"`
	XXX_unrecognized  []byte             `json:"-"`
}

func (m *InventoryItemData) Reset()                    { *m = InventoryItemData{} }
func (m *InventoryItemData) String() string            { return proto.CompactTextString(m) }
func (*InventoryItemData) ProtoMessage()               {}
func (*InventoryItemData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *InventoryItemData) GetPokemon() *Pokemon {
	if m != nil {
		return m.Pokemon
	}
	return nil
}

func (m *InventoryItemData) GetItem() *Item {
	if m != nil {
		return m.Item
	}
	return nil
}

func (m *InventoryItemData) GetPokedexEntry() *PokedexEntry {
	if m != nil {
		return m.PokedexEntry
	}
	return nil
}

func (m *InventoryItemData) GetPlayerStats() *PlayerStats {
	if m != nil {
		return m.PlayerStats
	}
	return nil
}

func (m *InventoryItemData) GetPlayerCurrency() *PlayerCurrency {
	if m != nil {
		return m.PlayerCurrency
	}
	return nil
}

func (m *InventoryItemData) GetPlayerCamera() *PlayerCamera {
	if m != nil {
		return m.PlayerCamera
	}
	return nil
}

func (m *InventoryItemData) GetInventoryUpgrades() *InventoryUpgrades {
	if m != nil {
		return m.InventoryUpgrades
	}
	return nil
}

func (m *InventoryItemData) GetAppliedItems() *AppliedItems {
	if m != nil {
		return m.AppliedItems
	}
	return nil
}

func (m *InventoryItemData) GetEggIncubators() *EggIncubators {
	if m != nil {
		return m.EggIncubators
	}
	return nil
}

func (m *InventoryItemData) GetPokemonFamily() *PokemonFamily {
	if m != nil {
		return m.PokemonFamily
	}
	return nil
}

type Pokemon struct {
	Id                     *int32            `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	PokemonType            *enum.PokemonId   `protobuf:"varint,2,opt,name=pokemon_type,json=pokemonType,enum=enum.PokemonId" json:"pokemon_type,omitempty"`
	Cp                     *int32            `protobuf:"varint,3,opt,name=cp" json:"cp,omitempty"`
	Stamina                *int32            `protobuf:"varint,4,opt,name=stamina" json:"stamina,omitempty"`
	StaminaMax             *int32            `protobuf:"varint,5,opt,name=stamina_max,json=staminaMax" json:"stamina_max,omitempty"`
	Move_1                 *enum.PokemonMove `protobuf:"varint,6,opt,name=move_1,json=move1,enum=enum.PokemonMove" json:"move_1,omitempty"`
	Move_2                 *enum.PokemonMove `protobuf:"varint,7,opt,name=move_2,json=move2,enum=enum.PokemonMove" json:"move_2,omitempty"`
	DeployedFortId         *int32            `protobuf:"varint,8,opt,name=deployed_fort_id,json=deployedFortId" json:"deployed_fort_id,omitempty"`
	OwnerName              *string           `protobuf:"bytes,9,opt,name=owner_name,json=ownerName" json:"owner_name,omitempty"`
	IsEgg                  *bool             `protobuf:"varint,10,opt,name=is_egg,json=isEgg" json:"is_egg,omitempty"`
	EggKmWalkedTarget      *int32            `protobuf:"varint,11,opt,name=egg_km_walked_target,json=eggKmWalkedTarget" json:"egg_km_walked_target,omitempty"`
	EggKmWalkedStart       *int32            `protobuf:"varint,12,opt,name=egg_km_walked_start,json=eggKmWalkedStart" json:"egg_km_walked_start,omitempty"`
	Origin                 *int32            `protobuf:"varint,14,opt,name=origin" json:"origin,omitempty"`
	HeightM                *float32          `protobuf:"fixed32,15,opt,name=height_m,json=heightM" json:"height_m,omitempty"`
	WeightKg               *float32          `protobuf:"fixed32,16,opt,name=weight_kg,json=weightKg" json:"weight_kg,omitempty"`
	IndividualAttack       *int32            `protobuf:"varint,17,opt,name=individual_attack,json=individualAttack" json:"individual_attack,omitempty"`
	IndividualDefense      *int32            `protobuf:"varint,18,opt,name=individual_defense,json=individualDefense" json:"individual_defense,omitempty"`
	IndividualStamina      *int32            `protobuf:"varint,19,opt,name=individual_stamina,json=individualStamina" json:"individual_stamina,omitempty"`
	CpMultiplier           *int32            `protobuf:"varint,20,opt,name=cp_multiplier,json=cpMultiplier" json:"cp_multiplier,omitempty"`
	Pokeball               *int32            `protobuf:"varint,21,opt,name=pokeball" json:"pokeball,omitempty"`
	CapturedCellId         *uint64           `protobuf:"varint,22,opt,name=captured_cell_id,json=capturedCellId" json:"captured_cell_id,omitempty"`
	BattlesAttacked        *int32            `protobuf:"varint,23,opt,name=battles_attacked,json=battlesAttacked" json:"battles_attacked,omitempty"`
	BattlesDefended        *int32            `protobuf:"varint,24,opt,name=battles_defended,json=battlesDefended" json:"battles_defended,omitempty"`
	EggIncubatorId         *int32            `protobuf:"varint,25,opt,name=egg_incubator_id,json=eggIncubatorId" json:"egg_incubator_id,omitempty"`
	CreationTimeMs         *uint64           `protobuf:"varint,26,opt,name=creation_time_ms,json=creationTimeMs" json:"creation_time_ms,omitempty"`
	NumUpgrades            *int32            `protobuf:"varint,27,opt,name=num_upgrades,json=numUpgrades" json:"num_upgrades,omitempty"`
	AdditionalCpMultiplier *int32            `protobuf:"varint,28,opt,name=additional_cp_multiplier,json=additionalCpMultiplier" json:"additional_cp_multiplier,omitempty"`
	Favorite               *int32            `protobuf:"varint,29,opt,name=favorite" json:"favorite,omitempty"`
	Nickname               *string           `protobuf:"bytes,30,opt,name=nickname" json:"nickname,omitempty"`
	FromFort               *int32            `protobuf:"varint,31,opt,name=from_fort,json=fromFort" json:"from_fort,omitempty"`
	XXX_unrecognized       []byte            `json:"-"`
}

func (m *Pokemon) Reset()                    { *m = Pokemon{} }
func (m *Pokemon) String() string            { return proto.CompactTextString(m) }
func (*Pokemon) ProtoMessage()               {}
func (*Pokemon) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *Pokemon) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *Pokemon) GetPokemonType() enum.PokemonId {
	if m != nil && m.PokemonType != nil {
		return *m.PokemonType
	}
	return enum.PokemonId_MISSINGNO
}

func (m *Pokemon) GetCp() int32 {
	if m != nil && m.Cp != nil {
		return *m.Cp
	}
	return 0
}

func (m *Pokemon) GetStamina() int32 {
	if m != nil && m.Stamina != nil {
		return *m.Stamina
	}
	return 0
}

func (m *Pokemon) GetStaminaMax() int32 {
	if m != nil && m.StaminaMax != nil {
		return *m.StaminaMax
	}
	return 0
}

func (m *Pokemon) GetMove_1() enum.PokemonMove {
	if m != nil && m.Move_1 != nil {
		return *m.Move_1
	}
	return enum.PokemonMove_MOVE_UNSET
}

func (m *Pokemon) GetMove_2() enum.PokemonMove {
	if m != nil && m.Move_2 != nil {
		return *m.Move_2
	}
	return enum.PokemonMove_MOVE_UNSET
}

func (m *Pokemon) GetDeployedFortId() int32 {
	if m != nil && m.DeployedFortId != nil {
		return *m.DeployedFortId
	}
	return 0
}

func (m *Pokemon) GetOwnerName() string {
	if m != nil && m.OwnerName != nil {
		return *m.OwnerName
	}
	return ""
}

func (m *Pokemon) GetIsEgg() bool {
	if m != nil && m.IsEgg != nil {
		return *m.IsEgg
	}
	return false
}

func (m *Pokemon) GetEggKmWalkedTarget() int32 {
	if m != nil && m.EggKmWalkedTarget != nil {
		return *m.EggKmWalkedTarget
	}
	return 0
}

func (m *Pokemon) GetEggKmWalkedStart() int32 {
	if m != nil && m.EggKmWalkedStart != nil {
		return *m.EggKmWalkedStart
	}
	return 0
}

func (m *Pokemon) GetOrigin() int32 {
	if m != nil && m.Origin != nil {
		return *m.Origin
	}
	return 0
}

func (m *Pokemon) GetHeightM() float32 {
	if m != nil && m.HeightM != nil {
		return *m.HeightM
	}
	return 0
}

func (m *Pokemon) GetWeightKg() float32 {
	if m != nil && m.WeightKg != nil {
		return *m.WeightKg
	}
	return 0
}

func (m *Pokemon) GetIndividualAttack() int32 {
	if m != nil && m.IndividualAttack != nil {
		return *m.IndividualAttack
	}
	return 0
}

func (m *Pokemon) GetIndividualDefense() int32 {
	if m != nil && m.IndividualDefense != nil {
		return *m.IndividualDefense
	}
	return 0
}

func (m *Pokemon) GetIndividualStamina() int32 {
	if m != nil && m.IndividualStamina != nil {
		return *m.IndividualStamina
	}
	return 0
}

func (m *Pokemon) GetCpMultiplier() int32 {
	if m != nil && m.CpMultiplier != nil {
		return *m.CpMultiplier
	}
	return 0
}

func (m *Pokemon) GetPokeball() int32 {
	if m != nil && m.Pokeball != nil {
		return *m.Pokeball
	}
	return 0
}

func (m *Pokemon) GetCapturedCellId() uint64 {
	if m != nil && m.CapturedCellId != nil {
		return *m.CapturedCellId
	}
	return 0
}

func (m *Pokemon) GetBattlesAttacked() int32 {
	if m != nil && m.BattlesAttacked != nil {
		return *m.BattlesAttacked
	}
	return 0
}

func (m *Pokemon) GetBattlesDefended() int32 {
	if m != nil && m.BattlesDefended != nil {
		return *m.BattlesDefended
	}
	return 0
}

func (m *Pokemon) GetEggIncubatorId() int32 {
	if m != nil && m.EggIncubatorId != nil {
		return *m.EggIncubatorId
	}
	return 0
}

func (m *Pokemon) GetCreationTimeMs() uint64 {
	if m != nil && m.CreationTimeMs != nil {
		return *m.CreationTimeMs
	}
	return 0
}

func (m *Pokemon) GetNumUpgrades() int32 {
	if m != nil && m.NumUpgrades != nil {
		return *m.NumUpgrades
	}
	return 0
}

func (m *Pokemon) GetAdditionalCpMultiplier() int32 {
	if m != nil && m.AdditionalCpMultiplier != nil {
		return *m.AdditionalCpMultiplier
	}
	return 0
}

func (m *Pokemon) GetFavorite() int32 {
	if m != nil && m.Favorite != nil {
		return *m.Favorite
	}
	return 0
}

func (m *Pokemon) GetNickname() string {
	if m != nil && m.Nickname != nil {
		return *m.Nickname
	}
	return ""
}

func (m *Pokemon) GetFromFort() int32 {
	if m != nil && m.FromFort != nil {
		return *m.FromFort
	}
	return 0
}

type Item struct {
	Item             *enum.ItemType `protobuf:"varint,1,opt,name=item,enum=enum.ItemType" json:"item,omitempty"`
	Count            *int32         `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
	Unseen           *bool          `protobuf:"varint,3,opt,name=unseen" json:"unseen,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *Item) Reset()                    { *m = Item{} }
func (m *Item) String() string            { return proto.CompactTextString(m) }
func (*Item) ProtoMessage()               {}
func (*Item) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *Item) GetItem() enum.ItemType {
	if m != nil && m.Item != nil {
		return *m.Item
	}
	return enum.ItemType_ITEM_UNKNOWN
}

func (m *Item) GetCount() int32 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

func (m *Item) GetUnseen() bool {
	if m != nil && m.Unseen != nil {
		return *m.Unseen
	}
	return false
}

type PokedexEntry struct {
	PokedexEntryNumber   *int32 `protobuf:"varint,1,opt,name=pokedex_entry_number,json=pokedexEntryNumber" json:"pokedex_entry_number,omitempty"`
	TimesEncountered     *int32 `protobuf:"varint,2,opt,name=times_encountered,json=timesEncountered" json:"times_encountered,omitempty"`
	TimesCaptured        *int32 `protobuf:"varint,3,opt,name=times_captured,json=timesCaptured" json:"times_captured,omitempty"`
	EvolutionStonePieces *int32 `protobuf:"varint,4,opt,name=evolution_stone_pieces,json=evolutionStonePieces" json:"evolution_stone_pieces,omitempty"`
	EvolutionStones      *int32 `protobuf:"varint,5,opt,name=evolution_stones,json=evolutionStones" json:"evolution_stones,omitempty"`
	XXX_unrecognized     []byte `json:"-"`
}

func (m *PokedexEntry) Reset()                    { *m = PokedexEntry{} }
func (m *PokedexEntry) String() string            { return proto.CompactTextString(m) }
func (*PokedexEntry) ProtoMessage()               {}
func (*PokedexEntry) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *PokedexEntry) GetPokedexEntryNumber() int32 {
	if m != nil && m.PokedexEntryNumber != nil {
		return *m.PokedexEntryNumber
	}
	return 0
}

func (m *PokedexEntry) GetTimesEncountered() int32 {
	if m != nil && m.TimesEncountered != nil {
		return *m.TimesEncountered
	}
	return 0
}

func (m *PokedexEntry) GetTimesCaptured() int32 {
	if m != nil && m.TimesCaptured != nil {
		return *m.TimesCaptured
	}
	return 0
}

func (m *PokedexEntry) GetEvolutionStonePieces() int32 {
	if m != nil && m.EvolutionStonePieces != nil {
		return *m.EvolutionStonePieces
	}
	return 0
}

func (m *PokedexEntry) GetEvolutionStones() int32 {
	if m != nil && m.EvolutionStones != nil {
		return *m.EvolutionStones
	}
	return 0
}

type PlayerStats struct {
	Level                *int32   `protobuf:"varint,1,opt,name=level" json:"level,omitempty"`
	Experience           *int64   `protobuf:"varint,2,opt,name=experience" json:"experience,omitempty"`
	PrevLevelXp          *int64   `protobuf:"varint,3,opt,name=prev_level_xp,json=prevLevelXp" json:"prev_level_xp,omitempty"`
	NextLevelXp          *int64   `protobuf:"varint,4,opt,name=next_level_xp,json=nextLevelXp" json:"next_level_xp,omitempty"`
	KmWalked             *float32 `protobuf:"fixed32,5,opt,name=km_walked,json=kmWalked" json:"km_walked,omitempty"`
	PokemonsEncountered  *int32   `protobuf:"varint,6,opt,name=pokemons_encountered,json=pokemonsEncountered" json:"pokemons_encountered,omitempty"`
	UniquePokedexEntries *int32   `protobuf:"varint,7,opt,name=unique_pokedex_entries,json=uniquePokedexEntries" json:"unique_pokedex_entries,omitempty"`
	PokemonsCaptured     *int32   `protobuf:"varint,8,opt,name=pokemons_captured,json=pokemonsCaptured" json:"pokemons_captured,omitempty"`
	Evolutions           *int32   `protobuf:"varint,9,opt,name=evolutions" json:"evolutions,omitempty"`
	PokeStopVisits       *int32   `protobuf:"varint,10,opt,name=poke_stop_visits,json=pokeStopVisits" json:"poke_stop_visits,omitempty"`
	PokeballsThrown      *int32   `protobuf:"varint,11,opt,name=pokeballs_thrown,json=pokeballsThrown" json:"pokeballs_thrown,omitempty"`
	EggsHatched          *int32   `protobuf:"varint,12,opt,name=eggs_hatched,json=eggsHatched" json:"eggs_hatched,omitempty"`
	BigMagikarpCaught    *int32   `protobuf:"varint,13,opt,name=big_magikarp_caught,json=bigMagikarpCaught" json:"big_magikarp_caught,omitempty"`
	BattleAttackWon      *int32   `protobuf:"varint,14,opt,name=battle_attack_won,json=battleAttackWon" json:"battle_attack_won,omitempty"`
	BattleAttackTotal    *int32   `protobuf:"varint,15,opt,name=battle_attack_total,json=battleAttackTotal" json:"battle_attack_total,omitempty"`
	BattleDefendedWon    *int32   `protobuf:"varint,16,opt,name=battle_defended_won,json=battleDefendedWon" json:"battle_defended_won,omitempty"`
	BattleTrainingWon    *int32   `protobuf:"varint,17,opt,name=battle_training_won,json=battleTrainingWon" json:"battle_training_won,omitempty"`
	BattleTrainingTotal  *int32   `protobuf:"varint,18,opt,name=battle_training_total,json=battleTrainingTotal" json:"battle_training_total,omitempty"`
	PrestigeRaisedTotal  *int32   `protobuf:"varint,19,opt,name=prestige_raised_total,json=prestigeRaisedTotal" json:"prestige_raised_total,omitempty"`
	PrestigeDroppedTotal *int32   `protobuf:"varint,20,opt,name=prestige_dropped_total,json=prestigeDroppedTotal" json:"prestige_dropped_total,omitempty"`
	PokemonDeployed      *int32   `protobuf:"varint,21,opt,name=pokemon_deployed,json=pokemonDeployed" json:"pokemon_deployed,omitempty"`
	PokemonCaughtByType  []byte   `protobuf:"bytes,22,opt,name=pokemon_caught_by_type,json=pokemonCaughtByType" json:"pokemon_caught_by_type,omitempty"`
	SmallRattataCaught   *int32   `protobuf:"varint,23,opt,name=small_rattata_caught,json=smallRattataCaught" json:"small_rattata_caught,omitempty"`
	XXX_unrecognized     []byte   `json:"-"`
}

func (m *PlayerStats) Reset()                    { *m = PlayerStats{} }
func (m *PlayerStats) String() string            { return proto.CompactTextString(m) }
func (*PlayerStats) ProtoMessage()               {}
func (*PlayerStats) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *PlayerStats) GetLevel() int32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

func (m *PlayerStats) GetExperience() int64 {
	if m != nil && m.Experience != nil {
		return *m.Experience
	}
	return 0
}

func (m *PlayerStats) GetPrevLevelXp() int64 {
	if m != nil && m.PrevLevelXp != nil {
		return *m.PrevLevelXp
	}
	return 0
}

func (m *PlayerStats) GetNextLevelXp() int64 {
	if m != nil && m.NextLevelXp != nil {
		return *m.NextLevelXp
	}
	return 0
}

func (m *PlayerStats) GetKmWalked() float32 {
	if m != nil && m.KmWalked != nil {
		return *m.KmWalked
	}
	return 0
}

func (m *PlayerStats) GetPokemonsEncountered() int32 {
	if m != nil && m.PokemonsEncountered != nil {
		return *m.PokemonsEncountered
	}
	return 0
}

func (m *PlayerStats) GetUniquePokedexEntries() int32 {
	if m != nil && m.UniquePokedexEntries != nil {
		return *m.UniquePokedexEntries
	}
	return 0
}

func (m *PlayerStats) GetPokemonsCaptured() int32 {
	if m != nil && m.PokemonsCaptured != nil {
		return *m.PokemonsCaptured
	}
	return 0
}

func (m *PlayerStats) GetEvolutions() int32 {
	if m != nil && m.Evolutions != nil {
		return *m.Evolutions
	}
	return 0
}

func (m *PlayerStats) GetPokeStopVisits() int32 {
	if m != nil && m.PokeStopVisits != nil {
		return *m.PokeStopVisits
	}
	return 0
}

func (m *PlayerStats) GetPokeballsThrown() int32 {
	if m != nil && m.PokeballsThrown != nil {
		return *m.PokeballsThrown
	}
	return 0
}

func (m *PlayerStats) GetEggsHatched() int32 {
	if m != nil && m.EggsHatched != nil {
		return *m.EggsHatched
	}
	return 0
}

func (m *PlayerStats) GetBigMagikarpCaught() int32 {
	if m != nil && m.BigMagikarpCaught != nil {
		return *m.BigMagikarpCaught
	}
	return 0
}

func (m *PlayerStats) GetBattleAttackWon() int32 {
	if m != nil && m.BattleAttackWon != nil {
		return *m.BattleAttackWon
	}
	return 0
}

func (m *PlayerStats) GetBattleAttackTotal() int32 {
	if m != nil && m.BattleAttackTotal != nil {
		return *m.BattleAttackTotal
	}
	return 0
}

func (m *PlayerStats) GetBattleDefendedWon() int32 {
	if m != nil && m.BattleDefendedWon != nil {
		return *m.BattleDefendedWon
	}
	return 0
}

func (m *PlayerStats) GetBattleTrainingWon() int32 {
	if m != nil && m.BattleTrainingWon != nil {
		return *m.BattleTrainingWon
	}
	return 0
}

func (m *PlayerStats) GetBattleTrainingTotal() int32 {
	if m != nil && m.BattleTrainingTotal != nil {
		return *m.BattleTrainingTotal
	}
	return 0
}

func (m *PlayerStats) GetPrestigeRaisedTotal() int32 {
	if m != nil && m.PrestigeRaisedTotal != nil {
		return *m.PrestigeRaisedTotal
	}
	return 0
}

func (m *PlayerStats) GetPrestigeDroppedTotal() int32 {
	if m != nil && m.PrestigeDroppedTotal != nil {
		return *m.PrestigeDroppedTotal
	}
	return 0
}

func (m *PlayerStats) GetPokemonDeployed() int32 {
	if m != nil && m.PokemonDeployed != nil {
		return *m.PokemonDeployed
	}
	return 0
}

func (m *PlayerStats) GetPokemonCaughtByType() []byte {
	if m != nil {
		return m.PokemonCaughtByType
	}
	return nil
}

func (m *PlayerStats) GetSmallRattataCaught() int32 {
	if m != nil && m.SmallRattataCaught != nil {
		return *m.SmallRattataCaught
	}
	return 0
}

type PlayerCurrency struct {
	Gems             *int32 `protobuf:"varint,1,opt,name=gems" json:"gems,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *PlayerCurrency) Reset()                    { *m = PlayerCurrency{} }
func (m *PlayerCurrency) String() string            { return proto.CompactTextString(m) }
func (*PlayerCurrency) ProtoMessage()               {}
func (*PlayerCurrency) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *PlayerCurrency) GetGems() int32 {
	if m != nil && m.Gems != nil {
		return *m.Gems
	}
	return 0
}

type PlayerCamera struct {
	IsDefaultCamera  *bool  `protobuf:"varint,1,opt,name=is_default_camera,json=isDefaultCamera" json:"is_default_camera,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *PlayerCamera) Reset()                    { *m = PlayerCamera{} }
func (m *PlayerCamera) String() string            { return proto.CompactTextString(m) }
func (*PlayerCamera) ProtoMessage()               {}
func (*PlayerCamera) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *PlayerCamera) GetIsDefaultCamera() bool {
	if m != nil && m.IsDefaultCamera != nil {
		return *m.IsDefaultCamera
	}
	return false
}

type InventoryUpgrades struct {
	InventoryUpgrades []*InventoryUpgrade `protobuf:"bytes,1,rep,name=inventory_upgrades,json=inventoryUpgrades" json:"inventory_upgrades,omitempty"`
	XXX_unrecognized  []byte              `json:"-"`
}

func (m *InventoryUpgrades) Reset()                    { *m = InventoryUpgrades{} }
func (m *InventoryUpgrades) String() string            { return proto.CompactTextString(m) }
func (*InventoryUpgrades) ProtoMessage()               {}
func (*InventoryUpgrades) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *InventoryUpgrades) GetInventoryUpgrades() []*InventoryUpgrade {
	if m != nil {
		return m.InventoryUpgrades
	}
	return nil
}

type InventoryUpgrade struct {
	Item              *enum.ItemType             `protobuf:"varint,1,opt,name=item,enum=enum.ItemType" json:"item,omitempty"`
	UpgradeType       *enum.InventoryUpgradeType `protobuf:"varint,2,opt,name=upgrade_type,json=upgradeType,enum=enum.InventoryUpgradeType" json:"upgrade_type,omitempty"`
	AdditionalStorage *int32                     `protobuf:"varint,3,opt,name=additional_storage,json=additionalStorage" json:"additional_storage,omitempty"`
	XXX_unrecognized  []byte                     `json:"-"`
}

func (m *InventoryUpgrade) Reset()                    { *m = InventoryUpgrade{} }
func (m *InventoryUpgrade) String() string            { return proto.CompactTextString(m) }
func (*InventoryUpgrade) ProtoMessage()               {}
func (*InventoryUpgrade) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *InventoryUpgrade) GetItem() enum.ItemType {
	if m != nil && m.Item != nil {
		return *m.Item
	}
	return enum.ItemType_ITEM_UNKNOWN
}

func (m *InventoryUpgrade) GetUpgradeType() enum.InventoryUpgradeType {
	if m != nil && m.UpgradeType != nil {
		return *m.UpgradeType
	}
	return enum.InventoryUpgradeType_UPGRADE_UNSET
}

func (m *InventoryUpgrade) GetAdditionalStorage() int32 {
	if m != nil && m.AdditionalStorage != nil {
		return *m.AdditionalStorage
	}
	return 0
}

type AppliedItems struct {
	Item             *AppliedItem `protobuf:"bytes,4,opt,name=item" json:"item,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *AppliedItems) Reset()                    { *m = AppliedItems{} }
func (m *AppliedItems) String() string            { return proto.CompactTextString(m) }
func (*AppliedItems) ProtoMessage()               {}
func (*AppliedItems) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *AppliedItems) GetItem() *AppliedItem {
	if m != nil {
		return m.Item
	}
	return nil
}

type AppliedItem struct {
	ItemType         *enum.ItemType         `protobuf:"varint,1,opt,name=item_type,json=itemType,enum=enum.ItemType" json:"item_type,omitempty"`
	ItemTypeCategory *enum.ItemTypeCategory `protobuf:"varint,2,opt,name=item_type_category,json=itemTypeCategory,enum=enum.ItemTypeCategory" json:"item_type_category,omitempty"`
	ExpireMs         *int64                 `protobuf:"varint,3,opt,name=expire_ms,json=expireMs" json:"expire_ms,omitempty"`
	AppliedMs        *int64                 `protobuf:"varint,4,opt,name=applied_ms,json=appliedMs" json:"applied_ms,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *AppliedItem) Reset()                    { *m = AppliedItem{} }
func (m *AppliedItem) String() string            { return proto.CompactTextString(m) }
func (*AppliedItem) ProtoMessage()               {}
func (*AppliedItem) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *AppliedItem) GetItemType() enum.ItemType {
	if m != nil && m.ItemType != nil {
		return *m.ItemType
	}
	return enum.ItemType_ITEM_UNKNOWN
}

func (m *AppliedItem) GetItemTypeCategory() enum.ItemTypeCategory {
	if m != nil && m.ItemTypeCategory != nil {
		return *m.ItemTypeCategory
	}
	return enum.ItemTypeCategory_ITEM_TYPE_NONE
}

func (m *AppliedItem) GetExpireMs() int64 {
	if m != nil && m.ExpireMs != nil {
		return *m.ExpireMs
	}
	return 0
}

func (m *AppliedItem) GetAppliedMs() int64 {
	if m != nil && m.AppliedMs != nil {
		return *m.AppliedMs
	}
	return 0
}

type EggIncubators struct {
	EggIncubator     *EggIncubator `protobuf:"bytes,1,opt,name=egg_incubator,json=eggIncubator" json:"egg_incubator,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *EggIncubators) Reset()                    { *m = EggIncubators{} }
func (m *EggIncubators) String() string            { return proto.CompactTextString(m) }
func (*EggIncubators) ProtoMessage()               {}
func (*EggIncubators) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *EggIncubators) GetEggIncubator() *EggIncubator {
	if m != nil {
		return m.EggIncubator
	}
	return nil
}

type EggIncubator struct {
	ItemId           *string                `protobuf:"bytes,1,opt,name=item_id,json=itemId" json:"item_id,omitempty"`
	ItemType         *enum.ItemType         `protobuf:"varint,2,opt,name=item_type,json=itemType,enum=enum.ItemType" json:"item_type,omitempty"`
	IncubatorType    *enum.EggIncubatorType `protobuf:"varint,3,opt,name=incubator_type,json=incubatorType,enum=enum.EggIncubatorType" json:"incubator_type,omitempty"`
	UsesRemaining    *int32                 `protobuf:"varint,4,opt,name=uses_remaining,json=usesRemaining" json:"uses_remaining,omitempty"`
	PokemonId        *int64                 `protobuf:"varint,5,opt,name=pokemon_id,json=pokemonId" json:"pokemon_id,omitempty"`
	StartKmWalked    *float64               `protobuf:"fixed64,6,opt,name=start_km_walked,json=startKmWalked" json:"start_km_walked,omitempty"`
	TargetKmWalked   *float64               `protobuf:"fixed64,7,opt,name=target_km_walked,json=targetKmWalked" json:"target_km_walked,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *EggIncubator) Reset()                    { *m = EggIncubator{} }
func (m *EggIncubator) String() string            { return proto.CompactTextString(m) }
func (*EggIncubator) ProtoMessage()               {}
func (*EggIncubator) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *EggIncubator) GetItemId() string {
	if m != nil && m.ItemId != nil {
		return *m.ItemId
	}
	return ""
}

func (m *EggIncubator) GetItemType() enum.ItemType {
	if m != nil && m.ItemType != nil {
		return *m.ItemType
	}
	return enum.ItemType_ITEM_UNKNOWN
}

func (m *EggIncubator) GetIncubatorType() enum.EggIncubatorType {
	if m != nil && m.IncubatorType != nil {
		return *m.IncubatorType
	}
	return enum.EggIncubatorType_INCUBATOR_UNSET
}

func (m *EggIncubator) GetUsesRemaining() int32 {
	if m != nil && m.UsesRemaining != nil {
		return *m.UsesRemaining
	}
	return 0
}

func (m *EggIncubator) GetPokemonId() int64 {
	if m != nil && m.PokemonId != nil {
		return *m.PokemonId
	}
	return 0
}

func (m *EggIncubator) GetStartKmWalked() float64 {
	if m != nil && m.StartKmWalked != nil {
		return *m.StartKmWalked
	}
	return 0
}

func (m *EggIncubator) GetTargetKmWalked() float64 {
	if m != nil && m.TargetKmWalked != nil {
		return *m.TargetKmWalked
	}
	return 0
}

type PokemonFamily struct {
	FamilyId         *enum.PokemonFamilyId `protobuf:"varint,1,opt,name=family_id,json=familyId,enum=enum.PokemonFamilyId" json:"family_id,omitempty"`
	Candy            *int32                `protobuf:"varint,2,opt,name=candy" json:"candy,omitempty"`
	XXX_unrecognized []byte                `json:"-"`
}

func (m *PokemonFamily) Reset()                    { *m = PokemonFamily{} }
func (m *PokemonFamily) String() string            { return proto.CompactTextString(m) }
func (*PokemonFamily) ProtoMessage()               {}
func (*PokemonFamily) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *PokemonFamily) GetFamilyId() enum.PokemonFamilyId {
	if m != nil && m.FamilyId != nil {
		return *m.FamilyId
	}
	return enum.PokemonFamilyId_FAMILY_UNSET
}

func (m *PokemonFamily) GetCandy() int32 {
	if m != nil && m.Candy != nil {
		return *m.Candy
	}
	return 0
}

type GetMapObjectsRequest struct {
	CellId           []byte   `protobuf:"bytes,1,opt,name=cell_id,json=cellId" json:"cell_id,omitempty"`
	SinceTimestampMs []byte   `protobuf:"bytes,2,opt,name=since_timestamp_ms,json=sinceTimestampMs" json:"since_timestamp_ms,omitempty"`
	Latitude         *float64 `protobuf:"fixed64,3,opt,name=latitude" json:"latitude,omitempty"`
	Longitude        *float64 `protobuf:"fixed64,4,opt,name=longitude" json:"longitude,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *GetMapObjectsRequest) Reset()                    { *m = GetMapObjectsRequest{} }
func (m *GetMapObjectsRequest) String() string            { return proto.CompactTextString(m) }
func (*GetMapObjectsRequest) ProtoMessage()               {}
func (*GetMapObjectsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

func (m *GetMapObjectsRequest) GetCellId() []byte {
	if m != nil {
		return m.CellId
	}
	return nil
}

func (m *GetMapObjectsRequest) GetSinceTimestampMs() []byte {
	if m != nil {
		return m.SinceTimestampMs
	}
	return nil
}

func (m *GetMapObjectsRequest) GetLatitude() float64 {
	if m != nil && m.Latitude != nil {
		return *m.Latitude
	}
	return 0
}

func (m *GetMapObjectsRequest) GetLongitude() float64 {
	if m != nil && m.Longitude != nil {
		return *m.Longitude
	}
	return 0
}

type GetMapObjectsResponse struct {
	MapCells         []*MapCell             `protobuf:"bytes,1,rep,name=map_cells,json=mapCells" json:"map_cells,omitempty"`
	Status           *enum.MapObjectsStatus `protobuf:"varint,2,opt,name=status,enum=enum.MapObjectsStatus" json:"status,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *GetMapObjectsResponse) Reset()                    { *m = GetMapObjectsResponse{} }
func (m *GetMapObjectsResponse) String() string            { return proto.CompactTextString(m) }
func (*GetMapObjectsResponse) ProtoMessage()               {}
func (*GetMapObjectsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

func (m *GetMapObjectsResponse) GetMapCells() []*MapCell {
	if m != nil {
		return m.MapCells
	}
	return nil
}

func (m *GetMapObjectsResponse) GetStatus() enum.MapObjectsStatus {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return enum.MapObjectsStatus_UNSET_STATUS
}

type MapCell struct {
	// S2 geographic area that the cell covers (http://s2map.com/) (https://code.google.com/archive/p/s2-geometry-library/)
	S2CellId             *uint64        `protobuf:"varint,1,opt,name=s2_cell_id,json=s2CellId" json:"s2_cell_id,omitempty"`
	CurrentTimestampMs   *int64         `protobuf:"varint,2,opt,name=current_timestamp_ms,json=currentTimestampMs" json:"current_timestamp_ms,omitempty"`
	Forts                []*FortData    `protobuf:"bytes,3,rep,name=forts" json:"forts,omitempty"`
	SpawnPoints          []*SpawnPoint  `protobuf:"bytes,4,rep,name=spawn_points,json=spawnPoints" json:"spawn_points,omitempty"`
	DeletedObjects       []string       `protobuf:"bytes,6,rep,name=deleted_objects,json=deletedObjects" json:"deleted_objects,omitempty"`
	IsTruncatedList      *bool          `protobuf:"varint,7,opt,name=is_truncated_list,json=isTruncatedList" json:"is_truncated_list,omitempty"`
	FortSummaries        []*FortSummary `protobuf:"bytes,8,rep,name=fort_summaries,json=fortSummaries" json:"fort_summaries,omitempty"`
	DecimatedSpawnPoints []*SpawnPoint  `protobuf:"bytes,9,rep,name=decimated_spawn_points,json=decimatedSpawnPoints" json:"decimated_spawn_points,omitempty"`
	// Pokemon within 2 steps or less.
	WildPokemons []*WildPokemon `protobuf:"bytes,5,rep,name=wild_pokemons,json=wildPokemons" json:"wild_pokemons,omitempty"`
	// Pokemon within 1 step or none.
	CatchablePokemons []*MapPokemon `protobuf:"bytes,10,rep,name=catchable_pokemons,json=catchablePokemons" json:"catchable_pokemons,omitempty"`
	// Pokemon farther away than 2 steps, but still in the area.
	NearbyPokemons   []*NearbyPokemon `protobuf:"bytes,11,rep,name=nearby_pokemons,json=nearbyPokemons" json:"nearby_pokemons,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *MapCell) Reset()                    { *m = MapCell{} }
func (m *MapCell) String() string            { return proto.CompactTextString(m) }
func (*MapCell) ProtoMessage()               {}
func (*MapCell) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25} }

func (m *MapCell) GetS2CellId() uint64 {
	if m != nil && m.S2CellId != nil {
		return *m.S2CellId
	}
	return 0
}

func (m *MapCell) GetCurrentTimestampMs() int64 {
	if m != nil && m.CurrentTimestampMs != nil {
		return *m.CurrentTimestampMs
	}
	return 0
}

func (m *MapCell) GetForts() []*FortData {
	if m != nil {
		return m.Forts
	}
	return nil
}

func (m *MapCell) GetSpawnPoints() []*SpawnPoint {
	if m != nil {
		return m.SpawnPoints
	}
	return nil
}

func (m *MapCell) GetDeletedObjects() []string {
	if m != nil {
		return m.DeletedObjects
	}
	return nil
}

func (m *MapCell) GetIsTruncatedList() bool {
	if m != nil && m.IsTruncatedList != nil {
		return *m.IsTruncatedList
	}
	return false
}

func (m *MapCell) GetFortSummaries() []*FortSummary {
	if m != nil {
		return m.FortSummaries
	}
	return nil
}

func (m *MapCell) GetDecimatedSpawnPoints() []*SpawnPoint {
	if m != nil {
		return m.DecimatedSpawnPoints
	}
	return nil
}

func (m *MapCell) GetWildPokemons() []*WildPokemon {
	if m != nil {
		return m.WildPokemons
	}
	return nil
}

func (m *MapCell) GetCatchablePokemons() []*MapPokemon {
	if m != nil {
		return m.CatchablePokemons
	}
	return nil
}

func (m *MapCell) GetNearbyPokemons() []*NearbyPokemon {
	if m != nil {
		return m.NearbyPokemons
	}
	return nil
}

type FortData struct {
	Id                      *string        `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	LastModifiedTimestampMs *int64         `protobuf:"varint,2,opt,name=last_modified_timestamp_ms,json=lastModifiedTimestampMs" json:"last_modified_timestamp_ms,omitempty"`
	Latitude                *float64       `protobuf:"fixed64,3,opt,name=latitude" json:"latitude,omitempty"`
	Longitude               *float64       `protobuf:"fixed64,4,opt,name=longitude" json:"longitude,omitempty"`
	Enabled                 *bool          `protobuf:"varint,8,opt,name=enabled" json:"enabled,omitempty"`
	Type                    *enum.FortType `protobuf:"varint,9,opt,name=type,enum=enum.FortType" json:"type,omitempty"`
	// Team that owns the gym
	OwnedByTeam *enum.TeamColor `protobuf:"varint,5,opt,name=owned_by_team,json=ownedByTeam,enum=enum.TeamColor" json:"owned_by_team,omitempty"`
	// Highest CP Pokemon at the gym
	GuardPokemonId *enum.PokemonId `protobuf:"varint,6,opt,name=guard_pokemon_id,json=guardPokemonId,enum=enum.PokemonId" json:"guard_pokemon_id,omitempty"`
	GuardPokemonCp *int32          `protobuf:"varint,7,opt,name=guard_pokemon_cp,json=guardPokemonCp" json:"guard_pokemon_cp,omitempty"`
	// Prestigate / experience of the gym
	GymPoints *int64 `protobuf:"varint,10,opt,name=gym_points,json=gymPoints" json:"gym_points,omitempty"`
	// Whether someone is battling at the gym currently
	IsInBattle *bool `protobuf:"varint,11,opt,name=is_in_battle,json=isInBattle" json:"is_in_battle,omitempty"`
	// Timestamp when the pokestop can be activated again to get items / xp
	CooldownCompleteTimestampMs *int64                  `protobuf:"varint,14,opt,name=cooldown_complete_timestamp_ms,json=cooldownCompleteTimestampMs" json:"cooldown_complete_timestamp_ms,omitempty"`
	Sponsor                     *enum.FortSponsor       `protobuf:"varint,15,opt,name=sponsor,enum=enum.FortSponsor" json:"sponsor,omitempty"`
	RenderingType               *enum.FortRenderingType `protobuf:"varint,16,opt,name=rendering_type,json=renderingType,enum=enum.FortRenderingType" json:"rendering_type,omitempty"`
	// Might represent the type of item applied to the pokestop, right now only lures can be applied
	ActiveFortModifier []byte        `protobuf:"bytes,12,opt,name=active_fort_modifier,json=activeFortModifier" json:"active_fort_modifier,omitempty"`
	LureInfo           *FortLureInfo `protobuf:"bytes,13,opt,name=lure_info,json=lureInfo" json:"lure_info,omitempty"`
	XXX_unrecognized   []byte        `json:"-"`
}

func (m *FortData) Reset()                    { *m = FortData{} }
func (m *FortData) String() string            { return proto.CompactTextString(m) }
func (*FortData) ProtoMessage()               {}
func (*FortData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{26} }

func (m *FortData) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *FortData) GetLastModifiedTimestampMs() int64 {
	if m != nil && m.LastModifiedTimestampMs != nil {
		return *m.LastModifiedTimestampMs
	}
	return 0
}

func (m *FortData) GetLatitude() float64 {
	if m != nil && m.Latitude != nil {
		return *m.Latitude
	}
	return 0
}

func (m *FortData) GetLongitude() float64 {
	if m != nil && m.Longitude != nil {
		return *m.Longitude
	}
	return 0
}

func (m *FortData) GetEnabled() bool {
	if m != nil && m.Enabled != nil {
		return *m.Enabled
	}
	return false
}

func (m *FortData) GetType() enum.FortType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return enum.FortType_GYM
}

func (m *FortData) GetOwnedByTeam() enum.TeamColor {
	if m != nil && m.OwnedByTeam != nil {
		return *m.OwnedByTeam
	}
	return enum.TeamColor_NEUTRAL
}

func (m *FortData) GetGuardPokemonId() enum.PokemonId {
	if m != nil && m.GuardPokemonId != nil {
		return *m.GuardPokemonId
	}
	return enum.PokemonId_MISSINGNO
}

func (m *FortData) GetGuardPokemonCp() int32 {
	if m != nil && m.GuardPokemonCp != nil {
		return *m.GuardPokemonCp
	}
	return 0
}

func (m *FortData) GetGymPoints() int64 {
	if m != nil && m.GymPoints != nil {
		return *m.GymPoints
	}
	return 0
}

func (m *FortData) GetIsInBattle() bool {
	if m != nil && m.IsInBattle != nil {
		return *m.IsInBattle
	}
	return false
}

func (m *FortData) GetCooldownCompleteTimestampMs() int64 {
	if m != nil && m.CooldownCompleteTimestampMs != nil {
		return *m.CooldownCompleteTimestampMs
	}
	return 0
}

func (m *FortData) GetSponsor() enum.FortSponsor {
	if m != nil && m.Sponsor != nil {
		return *m.Sponsor
	}
	return enum.FortSponsor_UNSET_SPONSOR
}

func (m *FortData) GetRenderingType() enum.FortRenderingType {
	if m != nil && m.RenderingType != nil {
		return *m.RenderingType
	}
	return enum.FortRenderingType_DEFAULT
}

func (m *FortData) GetActiveFortModifier() []byte {
	if m != nil {
		return m.ActiveFortModifier
	}
	return nil
}

func (m *FortData) GetLureInfo() *FortLureInfo {
	if m != nil {
		return m.LureInfo
	}
	return nil
}

type FortLureInfo struct {
	FortId                 *string         `protobuf:"bytes,1,opt,name=fort_id,json=fortId" json:"fort_id,omitempty"`
	Unknown2               *float64        `protobuf:"fixed64,2,opt,name=unknown2" json:"unknown2,omitempty"`
	ActivePokemonId        *enum.PokemonId `protobuf:"varint,3,opt,name=active_pokemon_id,json=activePokemonId,enum=enum.PokemonId" json:"active_pokemon_id,omitempty"`
	LureExpiresTimestampMs *int64          `protobuf:"varint,4,opt,name=lure_expires_timestamp_ms,json=lureExpiresTimestampMs" json:"lure_expires_timestamp_ms,omitempty"`
	XXX_unrecognized       []byte          `json:"-"`
}

func (m *FortLureInfo) Reset()                    { *m = FortLureInfo{} }
func (m *FortLureInfo) String() string            { return proto.CompactTextString(m) }
func (*FortLureInfo) ProtoMessage()               {}
func (*FortLureInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{27} }

func (m *FortLureInfo) GetFortId() string {
	if m != nil && m.FortId != nil {
		return *m.FortId
	}
	return ""
}

func (m *FortLureInfo) GetUnknown2() float64 {
	if m != nil && m.Unknown2 != nil {
		return *m.Unknown2
	}
	return 0
}

func (m *FortLureInfo) GetActivePokemonId() enum.PokemonId {
	if m != nil && m.ActivePokemonId != nil {
		return *m.ActivePokemonId
	}
	return enum.PokemonId_MISSINGNO
}

func (m *FortLureInfo) GetLureExpiresTimestampMs() int64 {
	if m != nil && m.LureExpiresTimestampMs != nil {
		return *m.LureExpiresTimestampMs
	}
	return 0
}

type SpawnPoint struct {
	Latitude         *float64 `protobuf:"fixed64,2,opt,name=latitude" json:"latitude,omitempty"`
	Longitude        *float64 `protobuf:"fixed64,3,opt,name=longitude" json:"longitude,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *SpawnPoint) Reset()                    { *m = SpawnPoint{} }
func (m *SpawnPoint) String() string            { return proto.CompactTextString(m) }
func (*SpawnPoint) ProtoMessage()               {}
func (*SpawnPoint) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{28} }

func (m *SpawnPoint) GetLatitude() float64 {
	if m != nil && m.Latitude != nil {
		return *m.Latitude
	}
	return 0
}

func (m *SpawnPoint) GetLongitude() float64 {
	if m != nil && m.Longitude != nil {
		return *m.Longitude
	}
	return 0
}

type FortSummary struct {
	FortSummaryId           *int32 `protobuf:"varint,1,opt,name=fort_summary_id,json=fortSummaryId" json:"fort_summary_id,omitempty"`
	LastModifiedTimestampMs *int32 `protobuf:"varint,2,opt,name=last_modified_timestamp_ms,json=lastModifiedTimestampMs" json:"last_modified_timestamp_ms,omitempty"`
	Latitude                *int32 `protobuf:"varint,3,opt,name=latitude" json:"latitude,omitempty"`
	Longitude               *int32 `protobuf:"varint,4,opt,name=longitude" json:"longitude,omitempty"`
	XXX_unrecognized        []byte `json:"-"`
}

func (m *FortSummary) Reset()                    { *m = FortSummary{} }
func (m *FortSummary) String() string            { return proto.CompactTextString(m) }
func (*FortSummary) ProtoMessage()               {}
func (*FortSummary) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{29} }

func (m *FortSummary) GetFortSummaryId() int32 {
	if m != nil && m.FortSummaryId != nil {
		return *m.FortSummaryId
	}
	return 0
}

func (m *FortSummary) GetLastModifiedTimestampMs() int32 {
	if m != nil && m.LastModifiedTimestampMs != nil {
		return *m.LastModifiedTimestampMs
	}
	return 0
}

func (m *FortSummary) GetLatitude() int32 {
	if m != nil && m.Latitude != nil {
		return *m.Latitude
	}
	return 0
}

func (m *FortSummary) GetLongitude() int32 {
	if m != nil && m.Longitude != nil {
		return *m.Longitude
	}
	return 0
}

type WildPokemon struct {
	EncounterId             *uint64      `protobuf:"fixed64,1,opt,name=encounter_id,json=encounterId" json:"encounter_id,omitempty"`
	LastModifiedTimestampMs *int64       `protobuf:"varint,2,opt,name=last_modified_timestamp_ms,json=lastModifiedTimestampMs" json:"last_modified_timestamp_ms,omitempty"`
	Latitude                *float64     `protobuf:"fixed64,3,opt,name=latitude" json:"latitude,omitempty"`
	Longitude               *float64     `protobuf:"fixed64,4,opt,name=longitude" json:"longitude,omitempty"`
	SpawnpointId            *string      `protobuf:"bytes,5,opt,name=spawnpoint_id,json=spawnpointId" json:"spawnpoint_id,omitempty"`
	PokemonData             *PokemonData `protobuf:"bytes,7,opt,name=pokemon_data,json=pokemonData" json:"pokemon_data,omitempty"`
	TimeTillHiddenMs        *int32       `protobuf:"varint,11,opt,name=time_till_hidden_ms,json=timeTillHiddenMs" json:"time_till_hidden_ms,omitempty"`
	XXX_unrecognized        []byte       `json:"-"`
}

func (m *WildPokemon) Reset()                    { *m = WildPokemon{} }
func (m *WildPokemon) String() string            { return proto.CompactTextString(m) }
func (*WildPokemon) ProtoMessage()               {}
func (*WildPokemon) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{30} }

func (m *WildPokemon) GetEncounterId() uint64 {
	if m != nil && m.EncounterId != nil {
		return *m.EncounterId
	}
	return 0
}

func (m *WildPokemon) GetLastModifiedTimestampMs() int64 {
	if m != nil && m.LastModifiedTimestampMs != nil {
		return *m.LastModifiedTimestampMs
	}
	return 0
}

func (m *WildPokemon) GetLatitude() float64 {
	if m != nil && m.Latitude != nil {
		return *m.Latitude
	}
	return 0
}

func (m *WildPokemon) GetLongitude() float64 {
	if m != nil && m.Longitude != nil {
		return *m.Longitude
	}
	return 0
}

func (m *WildPokemon) GetSpawnpointId() string {
	if m != nil && m.SpawnpointId != nil {
		return *m.SpawnpointId
	}
	return ""
}

func (m *WildPokemon) GetPokemonData() *PokemonData {
	if m != nil {
		return m.PokemonData
	}
	return nil
}

func (m *WildPokemon) GetTimeTillHiddenMs() int32 {
	if m != nil && m.TimeTillHiddenMs != nil {
		return *m.TimeTillHiddenMs
	}
	return 0
}

type PokemonData struct {
	Id                     *int32            `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	PokemonId              *enum.PokemonId   `protobuf:"varint,2,opt,name=pokemon_id,json=pokemonId,enum=enum.PokemonId" json:"pokemon_id,omitempty"`
	Cp                     *int32            `protobuf:"varint,3,opt,name=cp" json:"cp,omitempty"`
	Stamina                *int32            `protobuf:"varint,4,opt,name=stamina" json:"stamina,omitempty"`
	StaminaMax             *int32            `protobuf:"varint,5,opt,name=stamina_max,json=staminaMax" json:"stamina_max,omitempty"`
	Move_1                 *enum.PokemonMove `protobuf:"varint,6,opt,name=move_1,json=move1,enum=enum.PokemonMove" json:"move_1,omitempty"`
	Move_2                 *enum.PokemonMove `protobuf:"varint,7,opt,name=move_2,json=move2,enum=enum.PokemonMove" json:"move_2,omitempty"`
	DeployedFortId         *int32            `protobuf:"varint,8,opt,name=deployed_fort_id,json=deployedFortId" json:"deployed_fort_id,omitempty"`
	OwnerName              *string           `protobuf:"bytes,9,opt,name=owner_name,json=ownerName" json:"owner_name,omitempty"`
	IsEgg                  *bool             `protobuf:"varint,10,opt,name=is_egg,json=isEgg" json:"is_egg,omitempty"`
	EggKmWalkedTarget      *int32            `protobuf:"varint,11,opt,name=egg_km_walked_target,json=eggKmWalkedTarget" json:"egg_km_walked_target,omitempty"`
	EggKmWalkedStart       *int32            `protobuf:"varint,12,opt,name=egg_km_walked_start,json=eggKmWalkedStart" json:"egg_km_walked_start,omitempty"`
	Origin                 *int32            `protobuf:"varint,14,opt,name=origin" json:"origin,omitempty"`
	HeightM                *float32          `protobuf:"fixed32,15,opt,name=height_m,json=heightM" json:"height_m,omitempty"`
	WeightKg               *float32          `protobuf:"fixed32,16,opt,name=weight_kg,json=weightKg" json:"weight_kg,omitempty"`
	IndividualAttack       *int32            `protobuf:"varint,17,opt,name=individual_attack,json=individualAttack" json:"individual_attack,omitempty"`
	IndividualDefense      *int32            `protobuf:"varint,18,opt,name=individual_defense,json=individualDefense" json:"individual_defense,omitempty"`
	IndividualStamina      *int32            `protobuf:"varint,19,opt,name=individual_stamina,json=individualStamina" json:"individual_stamina,omitempty"`
	CpMultiplier           *int32            `protobuf:"varint,20,opt,name=cp_multiplier,json=cpMultiplier" json:"cp_multiplier,omitempty"`
	Pokeball               *int32            `protobuf:"varint,21,opt,name=pokeball" json:"pokeball,omitempty"`
	CapturedCellId         *uint64           `protobuf:"varint,22,opt,name=captured_cell_id,json=capturedCellId" json:"captured_cell_id,omitempty"`
	BattlesAttacked        *int32            `protobuf:"varint,23,opt,name=battles_attacked,json=battlesAttacked" json:"battles_attacked,omitempty"`
	BattlesDefended        *int32            `protobuf:"varint,24,opt,name=battles_defended,json=battlesDefended" json:"battles_defended,omitempty"`
	EggIncubatorId         *int32            `protobuf:"varint,25,opt,name=egg_incubator_id,json=eggIncubatorId" json:"egg_incubator_id,omitempty"`
	CreationTimeMs         *uint64           `protobuf:"varint,26,opt,name=creation_time_ms,json=creationTimeMs" json:"creation_time_ms,omitempty"`
	NumUpgrades            *int32            `protobuf:"varint,27,opt,name=num_upgrades,json=numUpgrades" json:"num_upgrades,omitempty"`
	AdditionalCpMultiplier *int32            `protobuf:"varint,28,opt,name=additional_cp_multiplier,json=additionalCpMultiplier" json:"additional_cp_multiplier,omitempty"`
	Favorite               *int32            `protobuf:"varint,29,opt,name=favorite" json:"favorite,omitempty"`
	Nickname               *string           `protobuf:"bytes,30,opt,name=nickname" json:"nickname,omitempty"`
	FromFort               *int32            `protobuf:"varint,31,opt,name=from_fort,json=fromFort" json:"from_fort,omitempty"`
	XXX_unrecognized       []byte            `json:"-"`
}

func (m *PokemonData) Reset()                    { *m = PokemonData{} }
func (m *PokemonData) String() string            { return proto.CompactTextString(m) }
func (*PokemonData) ProtoMessage()               {}
func (*PokemonData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{31} }

func (m *PokemonData) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *PokemonData) GetPokemonId() enum.PokemonId {
	if m != nil && m.PokemonId != nil {
		return *m.PokemonId
	}
	return enum.PokemonId_MISSINGNO
}

func (m *PokemonData) GetCp() int32 {
	if m != nil && m.Cp != nil {
		return *m.Cp
	}
	return 0
}

func (m *PokemonData) GetStamina() int32 {
	if m != nil && m.Stamina != nil {
		return *m.Stamina
	}
	return 0
}

func (m *PokemonData) GetStaminaMax() int32 {
	if m != nil && m.StaminaMax != nil {
		return *m.StaminaMax
	}
	return 0
}

func (m *PokemonData) GetMove_1() enum.PokemonMove {
	if m != nil && m.Move_1 != nil {
		return *m.Move_1
	}
	return enum.PokemonMove_MOVE_UNSET
}

func (m *PokemonData) GetMove_2() enum.PokemonMove {
	if m != nil && m.Move_2 != nil {
		return *m.Move_2
	}
	return enum.PokemonMove_MOVE_UNSET
}

func (m *PokemonData) GetDeployedFortId() int32 {
	if m != nil && m.DeployedFortId != nil {
		return *m.DeployedFortId
	}
	return 0
}

func (m *PokemonData) GetOwnerName() string {
	if m != nil && m.OwnerName != nil {
		return *m.OwnerName
	}
	return ""
}

func (m *PokemonData) GetIsEgg() bool {
	if m != nil && m.IsEgg != nil {
		return *m.IsEgg
	}
	return false
}

func (m *PokemonData) GetEggKmWalkedTarget() int32 {
	if m != nil && m.EggKmWalkedTarget != nil {
		return *m.EggKmWalkedTarget
	}
	return 0
}

func (m *PokemonData) GetEggKmWalkedStart() int32 {
	if m != nil && m.EggKmWalkedStart != nil {
		return *m.EggKmWalkedStart
	}
	return 0
}

func (m *PokemonData) GetOrigin() int32 {
	if m != nil && m.Origin != nil {
		return *m.Origin
	}
	return 0
}

func (m *PokemonData) GetHeightM() float32 {
	if m != nil && m.HeightM != nil {
		return *m.HeightM
	}
	return 0
}

func (m *PokemonData) GetWeightKg() float32 {
	if m != nil && m.WeightKg != nil {
		return *m.WeightKg
	}
	return 0
}

func (m *PokemonData) GetIndividualAttack() int32 {
	if m != nil && m.IndividualAttack != nil {
		return *m.IndividualAttack
	}
	return 0
}

func (m *PokemonData) GetIndividualDefense() int32 {
	if m != nil && m.IndividualDefense != nil {
		return *m.IndividualDefense
	}
	return 0
}

func (m *PokemonData) GetIndividualStamina() int32 {
	if m != nil && m.IndividualStamina != nil {
		return *m.IndividualStamina
	}
	return 0
}

func (m *PokemonData) GetCpMultiplier() int32 {
	if m != nil && m.CpMultiplier != nil {
		return *m.CpMultiplier
	}
	return 0
}

func (m *PokemonData) GetPokeball() int32 {
	if m != nil && m.Pokeball != nil {
		return *m.Pokeball
	}
	return 0
}

func (m *PokemonData) GetCapturedCellId() uint64 {
	if m != nil && m.CapturedCellId != nil {
		return *m.CapturedCellId
	}
	return 0
}

func (m *PokemonData) GetBattlesAttacked() int32 {
	if m != nil && m.BattlesAttacked != nil {
		return *m.BattlesAttacked
	}
	return 0
}

func (m *PokemonData) GetBattlesDefended() int32 {
	if m != nil && m.BattlesDefended != nil {
		return *m.BattlesDefended
	}
	return 0
}

func (m *PokemonData) GetEggIncubatorId() int32 {
	if m != nil && m.EggIncubatorId != nil {
		return *m.EggIncubatorId
	}
	return 0
}

func (m *PokemonData) GetCreationTimeMs() uint64 {
	if m != nil && m.CreationTimeMs != nil {
		return *m.CreationTimeMs
	}
	return 0
}

func (m *PokemonData) GetNumUpgrades() int32 {
	if m != nil && m.NumUpgrades != nil {
		return *m.NumUpgrades
	}
	return 0
}

func (m *PokemonData) GetAdditionalCpMultiplier() int32 {
	if m != nil && m.AdditionalCpMultiplier != nil {
		return *m.AdditionalCpMultiplier
	}
	return 0
}

func (m *PokemonData) GetFavorite() int32 {
	if m != nil && m.Favorite != nil {
		return *m.Favorite
	}
	return 0
}

func (m *PokemonData) GetNickname() string {
	if m != nil && m.Nickname != nil {
		return *m.Nickname
	}
	return ""
}

func (m *PokemonData) GetFromFort() int32 {
	if m != nil && m.FromFort != nil {
		return *m.FromFort
	}
	return 0
}

type MapPokemon struct {
	SpawnpointId *string         `protobuf:"bytes,1,opt,name=spawnpoint_id,json=spawnpointId" json:"spawnpoint_id,omitempty"`
	EncounterId  *uint64         `protobuf:"fixed64,2,opt,name=encounter_id,json=encounterId" json:"encounter_id,omitempty"`
	PokemonId    *enum.PokemonId `protobuf:"varint,3,opt,name=pokemon_id,json=pokemonId,enum=enum.PokemonId" json:"pokemon_id,omitempty"`
	// After this timestamp, the pokemon will be gone.
	ExpirationTimestampMs *int64   `protobuf:"varint,4,opt,name=expiration_timestamp_ms,json=expirationTimestampMs" json:"expiration_timestamp_ms,omitempty"`
	Latitude              *float64 `protobuf:"fixed64,5,opt,name=latitude" json:"latitude,omitempty"`
	Longitude             *float64 `protobuf:"fixed64,6,opt,name=longitude" json:"longitude,omitempty"`
	XXX_unrecognized      []byte   `json:"-"`
}

func (m *MapPokemon) Reset()                    { *m = MapPokemon{} }
func (m *MapPokemon) String() string            { return proto.CompactTextString(m) }
func (*MapPokemon) ProtoMessage()               {}
func (*MapPokemon) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{32} }

func (m *MapPokemon) GetSpawnpointId() string {
	if m != nil && m.SpawnpointId != nil {
		return *m.SpawnpointId
	}
	return ""
}

func (m *MapPokemon) GetEncounterId() uint64 {
	if m != nil && m.EncounterId != nil {
		return *m.EncounterId
	}
	return 0
}

func (m *MapPokemon) GetPokemonId() enum.PokemonId {
	if m != nil && m.PokemonId != nil {
		return *m.PokemonId
	}
	return enum.PokemonId_MISSINGNO
}

func (m *MapPokemon) GetExpirationTimestampMs() int64 {
	if m != nil && m.ExpirationTimestampMs != nil {
		return *m.ExpirationTimestampMs
	}
	return 0
}

func (m *MapPokemon) GetLatitude() float64 {
	if m != nil && m.Latitude != nil {
		return *m.Latitude
	}
	return 0
}

func (m *MapPokemon) GetLongitude() float64 {
	if m != nil && m.Longitude != nil {
		return *m.Longitude
	}
	return 0
}

type NearbyPokemon struct {
	PokemonId        *enum.PokemonId `protobuf:"varint,1,opt,name=pokemon_id,json=pokemonId,enum=enum.PokemonId" json:"pokemon_id,omitempty"`
	DistanceInMeters *float32        `protobuf:"fixed32,2,opt,name=distance_in_meters,json=distanceInMeters" json:"distance_in_meters,omitempty"`
	EncounterId      *uint64         `protobuf:"fixed64,3,opt,name=encounter_id,json=encounterId" json:"encounter_id,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *NearbyPokemon) Reset()                    { *m = NearbyPokemon{} }
func (m *NearbyPokemon) String() string            { return proto.CompactTextString(m) }
func (*NearbyPokemon) ProtoMessage()               {}
func (*NearbyPokemon) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{33} }

func (m *NearbyPokemon) GetPokemonId() enum.PokemonId {
	if m != nil && m.PokemonId != nil {
		return *m.PokemonId
	}
	return enum.PokemonId_MISSINGNO
}

func (m *NearbyPokemon) GetDistanceInMeters() float32 {
	if m != nil && m.DistanceInMeters != nil {
		return *m.DistanceInMeters
	}
	return 0
}

func (m *NearbyPokemon) GetEncounterId() uint64 {
	if m != nil && m.EncounterId != nil {
		return *m.EncounterId
	}
	return 0
}

type DownloadSettingsResponse struct {
	Error            *string         `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	Hash             *string         `protobuf:"bytes,2,opt,name=hash" json:"hash,omitempty"`
	Settings         *GlobalSettings `protobuf:"bytes,3,opt,name=settings" json:"settings,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *DownloadSettingsResponse) Reset()                    { *m = DownloadSettingsResponse{} }
func (m *DownloadSettingsResponse) String() string            { return proto.CompactTextString(m) }
func (*DownloadSettingsResponse) ProtoMessage()               {}
func (*DownloadSettingsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{34} }

func (m *DownloadSettingsResponse) GetError() string {
	if m != nil && m.Error != nil {
		return *m.Error
	}
	return ""
}

func (m *DownloadSettingsResponse) GetHash() string {
	if m != nil && m.Hash != nil {
		return *m.Hash
	}
	return ""
}

func (m *DownloadSettingsResponse) GetSettings() *GlobalSettings {
	if m != nil {
		return m.Settings
	}
	return nil
}

type GlobalSettings struct {
	FortSettings         *FortSettings      `protobuf:"bytes,2,opt,name=fort_settings,json=fortSettings" json:"fort_settings,omitempty"`
	MapSettings          *MapSettings       `protobuf:"bytes,3,opt,name=map_settings,json=mapSettings" json:"map_settings,omitempty"`
	LevelSettings        *LevelSettings     `protobuf:"bytes,4,opt,name=level_settings,json=levelSettings" json:"level_settings,omitempty"`
	InventorySettings    *InventorySettings `protobuf:"bytes,5,opt,name=inventory_settings,json=inventorySettings" json:"inventory_settings,omitempty"`
	MinimumClientVersion *string            `protobuf:"bytes,6,opt,name=minimum_client_version,json=minimumClientVersion" json:"minimum_client_version,omitempty"`
	XXX_unrecognized     []byte             `json:"-"`
}

func (m *GlobalSettings) Reset()                    { *m = GlobalSettings{} }
func (m *GlobalSettings) String() string            { return proto.CompactTextString(m) }
func (*GlobalSettings) ProtoMessage()               {}
func (*GlobalSettings) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{35} }

func (m *GlobalSettings) GetFortSettings() *FortSettings {
	if m != nil {
		return m.FortSettings
	}
	return nil
}

func (m *GlobalSettings) GetMapSettings() *MapSettings {
	if m != nil {
		return m.MapSettings
	}
	return nil
}

func (m *GlobalSettings) GetLevelSettings() *LevelSettings {
	if m != nil {
		return m.LevelSettings
	}
	return nil
}

func (m *GlobalSettings) GetInventorySettings() *InventorySettings {
	if m != nil {
		return m.InventorySettings
	}
	return nil
}

func (m *GlobalSettings) GetMinimumClientVersion() string {
	if m != nil && m.MinimumClientVersion != nil {
		return *m.MinimumClientVersion
	}
	return ""
}

type FortSettings struct {
	InteractionRangeMeters    *float64 `protobuf:"fixed64,1,opt,name=interaction_range_meters,json=interactionRangeMeters" json:"interaction_range_meters,omitempty"`
	MaxTotalDeployedPokemon   *int32   `protobuf:"varint,2,opt,name=max_total_deployed_pokemon,json=maxTotalDeployedPokemon" json:"max_total_deployed_pokemon,omitempty"`
	MaxPlayerDeployedPokemon  *int32   `protobuf:"varint,3,opt,name=max_player_deployed_pokemon,json=maxPlayerDeployedPokemon" json:"max_player_deployed_pokemon,omitempty"`
	DeployStaminaMultiplier   *float64 `protobuf:"fixed64,4,opt,name=deploy_stamina_multiplier,json=deployStaminaMultiplier" json:"deploy_stamina_multiplier,omitempty"`
	DeployAttackMultiplier    *float64 `protobuf:"fixed64,5,opt,name=deploy_attack_multiplier,json=deployAttackMultiplier" json:"deploy_attack_multiplier,omitempty"`
	FarInteractionRangeMeters *float64 `protobuf:"fixed64,6,opt,name=far_interaction_range_meters,json=farInteractionRangeMeters" json:"far_interaction_range_meters,omitempty"`
	XXX_unrecognized          []byte   `json:"-"`
}

func (m *FortSettings) Reset()                    { *m = FortSettings{} }
func (m *FortSettings) String() string            { return proto.CompactTextString(m) }
func (*FortSettings) ProtoMessage()               {}
func (*FortSettings) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{36} }

func (m *FortSettings) GetInteractionRangeMeters() float64 {
	if m != nil && m.InteractionRangeMeters != nil {
		return *m.InteractionRangeMeters
	}
	return 0
}

func (m *FortSettings) GetMaxTotalDeployedPokemon() int32 {
	if m != nil && m.MaxTotalDeployedPokemon != nil {
		return *m.MaxTotalDeployedPokemon
	}
	return 0
}

func (m *FortSettings) GetMaxPlayerDeployedPokemon() int32 {
	if m != nil && m.MaxPlayerDeployedPokemon != nil {
		return *m.MaxPlayerDeployedPokemon
	}
	return 0
}

func (m *FortSettings) GetDeployStaminaMultiplier() float64 {
	if m != nil && m.DeployStaminaMultiplier != nil {
		return *m.DeployStaminaMultiplier
	}
	return 0
}

func (m *FortSettings) GetDeployAttackMultiplier() float64 {
	if m != nil && m.DeployAttackMultiplier != nil {
		return *m.DeployAttackMultiplier
	}
	return 0
}

func (m *FortSettings) GetFarInteractionRangeMeters() float64 {
	if m != nil && m.FarInteractionRangeMeters != nil {
		return *m.FarInteractionRangeMeters
	}
	return 0
}

type MapSettings struct {
	PokemonVisibleRange            *float64 `protobuf:"fixed64,1,opt,name=pokemon_visible_range,json=pokemonVisibleRange" json:"pokemon_visible_range,omitempty"`
	PokeNavRangeMeters             *float64 `protobuf:"fixed64,2,opt,name=poke_nav_range_meters,json=pokeNavRangeMeters" json:"poke_nav_range_meters,omitempty"`
	EncounterRangeMeters           *float64 `protobuf:"fixed64,3,opt,name=encounter_range_meters,json=encounterRangeMeters" json:"encounter_range_meters,omitempty"`
	GetMapObjectsMinRefreshSeconds *float32 `protobuf:"fixed32,4,opt,name=get_map_objects_min_refresh_seconds,json=getMapObjectsMinRefreshSeconds" json:"get_map_objects_min_refresh_seconds,omitempty"`
	GetMapObjectsMaxRefreshSeconds *float32 `protobuf:"fixed32,5,opt,name=get_map_objects_max_refresh_seconds,json=getMapObjectsMaxRefreshSeconds" json:"get_map_objects_max_refresh_seconds,omitempty"`
	GetMapObjectsMinDistanceMeters *float32 `protobuf:"fixed32,6,opt,name=get_map_objects_min_distance_meters,json=getMapObjectsMinDistanceMeters" json:"get_map_objects_min_distance_meters,omitempty"`
	GoogleMapsApiKey               *string  `protobuf:"bytes,7,opt,name=google_maps_api_key,json=googleMapsApiKey" json:"google_maps_api_key,omitempty"`
	XXX_unrecognized               []byte   `json:"-"`
}

func (m *MapSettings) Reset()                    { *m = MapSettings{} }
func (m *MapSettings) String() string            { return proto.CompactTextString(m) }
func (*MapSettings) ProtoMessage()               {}
func (*MapSettings) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{37} }

func (m *MapSettings) GetPokemonVisibleRange() float64 {
	if m != nil && m.PokemonVisibleRange != nil {
		return *m.PokemonVisibleRange
	}
	return 0
}

func (m *MapSettings) GetPokeNavRangeMeters() float64 {
	if m != nil && m.PokeNavRangeMeters != nil {
		return *m.PokeNavRangeMeters
	}
	return 0
}

func (m *MapSettings) GetEncounterRangeMeters() float64 {
	if m != nil && m.EncounterRangeMeters != nil {
		return *m.EncounterRangeMeters
	}
	return 0
}

func (m *MapSettings) GetGetMapObjectsMinRefreshSeconds() float32 {
	if m != nil && m.GetMapObjectsMinRefreshSeconds != nil {
		return *m.GetMapObjectsMinRefreshSeconds
	}
	return 0
}

func (m *MapSettings) GetGetMapObjectsMaxRefreshSeconds() float32 {
	if m != nil && m.GetMapObjectsMaxRefreshSeconds != nil {
		return *m.GetMapObjectsMaxRefreshSeconds
	}
	return 0
}

func (m *MapSettings) GetGetMapObjectsMinDistanceMeters() float32 {
	if m != nil && m.GetMapObjectsMinDistanceMeters != nil {
		return *m.GetMapObjectsMinDistanceMeters
	}
	return 0
}

func (m *MapSettings) GetGoogleMapsApiKey() string {
	if m != nil && m.GoogleMapsApiKey != nil {
		return *m.GoogleMapsApiKey
	}
	return ""
}

type LevelSettings struct {
	TrainerCpModifier         *float64 `protobuf:"fixed64,2,opt,name=trainer_cp_modifier,json=trainerCpModifier" json:"trainer_cp_modifier,omitempty"`
	TrainerDifficultyModifier *float64 `protobuf:"fixed64,3,opt,name=trainer_difficulty_modifier,json=trainerDifficultyModifier" json:"trainer_difficulty_modifier,omitempty"`
	XXX_unrecognized          []byte   `json:"-"`
}

func (m *LevelSettings) Reset()                    { *m = LevelSettings{} }
func (m *LevelSettings) String() string            { return proto.CompactTextString(m) }
func (*LevelSettings) ProtoMessage()               {}
func (*LevelSettings) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{38} }

func (m *LevelSettings) GetTrainerCpModifier() float64 {
	if m != nil && m.TrainerCpModifier != nil {
		return *m.TrainerCpModifier
	}
	return 0
}

func (m *LevelSettings) GetTrainerDifficultyModifier() float64 {
	if m != nil && m.TrainerDifficultyModifier != nil {
		return *m.TrainerDifficultyModifier
	}
	return 0
}

type InventorySettings struct {
	MaxPokemon       *int32 `protobuf:"varint,1,opt,name=max_pokemon,json=maxPokemon" json:"max_pokemon,omitempty"`
	MaxBagItems      *int32 `protobuf:"varint,2,opt,name=max_bag_items,json=maxBagItems" json:"max_bag_items,omitempty"`
	BasePokemon      *int32 `protobuf:"varint,3,opt,name=base_pokemon,json=basePokemon" json:"base_pokemon,omitempty"`
	BaseBagItems     *int32 `protobuf:"varint,4,opt,name=base_bag_items,json=baseBagItems" json:"base_bag_items,omitempty"`
	BaseEggs         *int32 `protobuf:"varint,5,opt,name=base_eggs,json=baseEggs" json:"base_eggs,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *InventorySettings) Reset()                    { *m = InventorySettings{} }
func (m *InventorySettings) String() string            { return proto.CompactTextString(m) }
func (*InventorySettings) ProtoMessage()               {}
func (*InventorySettings) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{39} }

func (m *InventorySettings) GetMaxPokemon() int32 {
	if m != nil && m.MaxPokemon != nil {
		return *m.MaxPokemon
	}
	return 0
}

func (m *InventorySettings) GetMaxBagItems() int32 {
	if m != nil && m.MaxBagItems != nil {
		return *m.MaxBagItems
	}
	return 0
}

func (m *InventorySettings) GetBasePokemon() int32 {
	if m != nil && m.BasePokemon != nil {
		return *m.BasePokemon
	}
	return 0
}

func (m *InventorySettings) GetBaseBagItems() int32 {
	if m != nil && m.BaseBagItems != nil {
		return *m.BaseBagItems
	}
	return 0
}

func (m *InventorySettings) GetBaseEggs() int32 {
	if m != nil && m.BaseEggs != nil {
		return *m.BaseEggs
	}
	return 0
}

func init() {
	proto.RegisterType((*GetPlayerResponse)(nil), "sub.GetPlayerResponse")
	proto.RegisterType((*Profile)(nil), "sub.Profile")
	proto.RegisterType((*DailyBonus)(nil), "sub.DailyBonus")
	proto.RegisterType((*Currency)(nil), "sub.Currency")
	proto.RegisterType((*AvatarDetails)(nil), "sub.AvatarDetails")
	proto.RegisterType((*DownloadSettingsRequest)(nil), "sub.DownloadSettingsRequest")
	proto.RegisterType((*GetInventoryResponse)(nil), "sub.GetInventoryResponse")
	proto.RegisterType((*InventoryDelta)(nil), "sub.InventoryDelta")
	proto.RegisterType((*InventoryItem)(nil), "sub.InventoryItem")
	proto.RegisterType((*InventoryItemData)(nil), "sub.InventoryItemData")
	proto.RegisterType((*Pokemon)(nil), "sub.Pokemon")
	proto.RegisterType((*Item)(nil), "sub.Item")
	proto.RegisterType((*PokedexEntry)(nil), "sub.PokedexEntry")
	proto.RegisterType((*PlayerStats)(nil), "sub.PlayerStats")
	proto.RegisterType((*PlayerCurrency)(nil), "sub.PlayerCurrency")
	proto.RegisterType((*PlayerCamera)(nil), "sub.PlayerCamera")
	proto.RegisterType((*InventoryUpgrades)(nil), "sub.InventoryUpgrades")
	proto.RegisterType((*InventoryUpgrade)(nil), "sub.InventoryUpgrade")
	proto.RegisterType((*AppliedItems)(nil), "sub.AppliedItems")
	proto.RegisterType((*AppliedItem)(nil), "sub.AppliedItem")
	proto.RegisterType((*EggIncubators)(nil), "sub.EggIncubators")
	proto.RegisterType((*EggIncubator)(nil), "sub.EggIncubator")
	proto.RegisterType((*PokemonFamily)(nil), "sub.PokemonFamily")
	proto.RegisterType((*GetMapObjectsRequest)(nil), "sub.GetMapObjectsRequest")
	proto.RegisterType((*GetMapObjectsResponse)(nil), "sub.GetMapObjectsResponse")
	proto.RegisterType((*MapCell)(nil), "sub.MapCell")
	proto.RegisterType((*FortData)(nil), "sub.FortData")
	proto.RegisterType((*FortLureInfo)(nil), "sub.FortLureInfo")
	proto.RegisterType((*SpawnPoint)(nil), "sub.SpawnPoint")
	proto.RegisterType((*FortSummary)(nil), "sub.FortSummary")
	proto.RegisterType((*WildPokemon)(nil), "sub.WildPokemon")
	proto.RegisterType((*PokemonData)(nil), "sub.PokemonData")
	proto.RegisterType((*MapPokemon)(nil), "sub.MapPokemon")
	proto.RegisterType((*NearbyPokemon)(nil), "sub.NearbyPokemon")
	proto.RegisterType((*DownloadSettingsResponse)(nil), "sub.DownloadSettingsResponse")
	proto.RegisterType((*GlobalSettings)(nil), "sub.GlobalSettings")
	proto.RegisterType((*FortSettings)(nil), "sub.FortSettings")
	proto.RegisterType((*MapSettings)(nil), "sub.MapSettings")
	proto.RegisterType((*LevelSettings)(nil), "sub.LevelSettings")
	proto.RegisterType((*InventorySettings)(nil), "sub.InventorySettings")
}

func init() { proto.RegisterFile("sub.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 3768 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xec, 0x5a, 0x4b, 0x73, 0x1b, 0x57,
	0x76, 0x2e, 0x00, 0x04, 0x09, 0x5c, 0x3c, 0x08, 0x36, 0x29, 0x0a, 0x92, 0x6c, 0xd9, 0x69, 0x39,
	0x89, 0x1d, 0xc7, 0x92, 0x45, 0x39, 0x4a, 0x64, 0xc5, 0x4e, 0x49, 0xa4, 0x64, 0xb3, 0x64, 0x2a,
	0xaa, 0x26, 0x63, 0x39, 0xab, 0xae, 0x26, 0xfa, 0x02, 0xec, 0x10, 0xfd, 0x70, 0x77, 0x83, 0x14,
	0x56, 0xa9, 0xfc, 0x83, 0xac, 0x3c, 0x7f, 0x60, 0x76, 0x9e, 0xc5, 0xd4, 0x54, 0x79, 0xe5, 0x29,
	0xd7, 0xfc, 0x02, 0xff, 0x98, 0xa9, 0x9a, 0xd9, 0xcc, 0x66, 0xce, 0xe3, 0xde, 0xee, 0xdb, 0x20,
	0x24, 0xb9, 0x66, 0x33, 0x8b, 0xf1, 0x86, 0x85, 0x7b, 0x1e, 0xf7, 0x75, 0xce, 0xf9, 0xce, 0xb9,
	0xa7, 0x29, 0xda, 0xd9, 0xec, 0xf8, 0x66, 0x92, 0xc6, 0x79, 0x6c, 0x35, 0xe0, 0xe7, 0xd5, 0xbb,
	0x93, 0x20, 0x3f, 0x01, 0xd2, 0x28, 0x0e, 0x6f, 0x9d, 0x7d, 0x3d, 0x0b, 0xa2, 0x3c, 0x88, 0x6e,
	0x25, 0xf1, 0xa9, 0x0c, 0xe3, 0x68, 0x12, 0xdf, 0x22, 0xc9, 0xe3, 0xd9, 0xf8, 0x96, 0x8c, 0x66,
	0x21, 0xfd, 0x61, 0x65, 0xfb, 0xb9, 0xd8, 0xf8, 0x4c, 0xe6, 0xcf, 0xa6, 0xde, 0x5c, 0xa6, 0x8e,
	0xcc, 0x92, 0x38, 0xca, 0xa4, 0x75, 0x55, 0xb4, 0x66, 0xd1, 0x69, 0x14, 0x9f, 0x47, 0xb7, 0x87,
	0xb5, 0xb7, 0x6b, 0xef, 0x36, 0x9d, 0x62, 0x6c, 0xfd, 0x83, 0x58, 0x03, 0xcd, 0x71, 0x30, 0x95,
	0xc3, 0x3a, 0xb0, 0x3a, 0x3b, 0xdd, 0x9b, 0xb8, 0x95, 0x67, 0x4c, 0x73, 0x34, 0xd3, 0xfe, 0xa6,
	0x21, 0xd6, 0x14, 0xd1, 0xba, 0x21, 0x7a, 0xa3, 0x54, 0x7a, 0x79, 0x10, 0x47, 0x6e, 0x1e, 0x84,
	0x12, 0x26, 0xad, 0xbf, 0xdb, 0x70, 0xba, 0x9a, 0x78, 0x04, 0x34, 0x5a, 0x34, 0x93, 0x69, 0xe4,
	0x85, 0x3c, 0x73, 0xdb, 0x29, 0xc6, 0x30, 0xc1, 0x4a, 0x2e, 0xbd, 0x70, 0xd8, 0x04, 0x7a, 0x7f,
	0x67, 0xfd, 0x26, 0x1d, 0xe0, 0x08, 0x28, 0xbb, 0xf1, 0x34, 0x4e, 0x1d, 0x62, 0xe2, 0x04, 0xf9,
	0x2c, 0x8f, 0xd3, 0xc0, 0x9b, 0x0e, 0xd7, 0x40, 0xb0, 0xeb, 0x14, 0x63, 0xeb, 0x9f, 0xc4, 0xaa,
	0x77, 0xe6, 0xe5, 0x5e, 0x3a, 0x6c, 0xd1, 0xa6, 0x2d, 0xda, 0xf4, 0x03, 0x22, 0xed, 0xc9, 0xdc,
	0x0b, 0xa6, 0x99, 0xa3, 0x24, 0xac, 0xbf, 0x13, 0x5d, 0xbc, 0x38, 0x37, 0x03, 0x5d, 0x6f, 0x22,
	0x87, 0x6d, 0xba, 0x81, 0x0e, 0xd2, 0x0e, 0x99, 0x84, 0x22, 0x41, 0x2e, 0xc3, 0x42, 0x44, 0xb0,
	0x08, 0xd2, 0xb4, 0xc8, 0x87, 0xa2, 0xe3, 0xc3, 0xb4, 0x73, 0xf7, 0x38, 0x8e, 0x66, 0xd9, 0xb0,
	0x43, 0xcb, 0xae, 0xd3, 0xb2, 0x7b, 0x48, 0x7f, 0x88, 0x64, 0x47, 0xf8, 0xc5, 0x6f, 0xeb, 0x0d,
	0xd1, 0xd6, 0xb7, 0xbc, 0x33, 0xec, 0xd2, 0x01, 0x4a, 0x82, 0xc9, 0xbd, 0x33, 0xec, 0x55, 0xb9,
	0x77, 0xac, 0xf7, 0x44, 0x6b, 0x34, 0x4b, 0x53, 0x19, 0x8d, 0xe6, 0xc3, 0xfe, 0xdb, 0x0d, 0x58,
	0xaa, 0x47, 0x4b, 0xed, 0x2a, 0xa2, 0x53, 0xb0, 0xed, 0x6f, 0x6a, 0x42, 0x94, 0x3b, 0xb0, 0xee,
	0x8a, 0xed, 0xa7, 0xf2, 0x45, 0x0e, 0x17, 0x39, 0x95, 0xa3, 0x1c, 0x2d, 0x91, 0xe5, 0x5e, 0x98,
	0x1c, 0x64, 0x64, 0xf9, 0x86, 0xb3, 0x1d, 0x2d, 0xe5, 0x5a, 0xcf, 0xc4, 0x0d, 0xd4, 0xdb, 0x93,
	0x63, 0x19, 0xf9, 0x32, 0xa5, 0xc9, 0x96, 0x4c, 0x52, 0xa7, 0x49, 0x6e, 0x44, 0xaf, 0x17, 0xb5,
	0xef, 0x8a, 0x96, 0xde, 0xae, 0x65, 0x81, 0xc1, 0xe7, 0x09, 0x3b, 0x4a, 0xdb, 0xa1, 0xdf, 0xd6,
	0x36, 0xd8, 0x30, 0x8c, 0x67, 0x51, 0x4e, 0x93, 0x36, 0x1d, 0x35, 0xb2, 0xff, 0xaf, 0x26, 0x7a,
	0x15, 0x4b, 0x1a, 0xfe, 0xbb, 0xa3, 0x64, 0x8b, 0xb1, 0xc1, 0xbb, 0x33, 0x6c, 0x54, 0x78, 0x77,
	0x0c, 0xde, 0x3d, 0x65, 0xf5, 0x62, 0x6c, 0xde, 0xff, 0x87, 0xca, 0xde, 0x25, 0xc1, 0xfe, 0x40,
	0x5c, 0xde, 0x83, 0x5f, 0xd3, 0xd8, 0xf3, 0x0f, 0x65, 0x0e, 0xb1, 0x37, 0xc9, 0x1c, 0xf9, 0xf5,
	0x0c, 0xce, 0x86, 0x47, 0x39, 0xf1, 0xb2, 0x13, 0xba, 0x4e, 0x38, 0x0a, 0xfe, 0xb6, 0x23, 0xb1,
	0x05, 0x51, 0xb7, 0x1f, 0x9d, 0xc9, 0x08, 0xdc, 0x65, 0x5e, 0x04, 0xde, 0x50, 0xac, 0x65, 0xb3,
	0xd1, 0x48, 0x66, 0x7c, 0xfb, 0x2d, 0x47, 0x0f, 0xad, 0x7f, 0x17, 0xeb, 0x81, 0x16, 0x77, 0x7d,
	0x39, 0xcd, 0x3d, 0x15, 0x7e, 0x9b, 0x64, 0xe7, 0x62, 0xaa, 0x3d, 0x64, 0x39, 0xfd, 0xa0, 0x32,
	0xb6, 0xbf, 0xad, 0x89, 0x7e, 0x55, 0xc4, 0xda, 0x11, 0x97, 0x20, 0x34, 0x26, 0x41, 0xe4, 0x4d,
	0x29, 0x26, 0xc9, 0x0a, 0x6e, 0xa8, 0xcd, 0xbe, 0xa9, 0x99, 0xa6, 0xcd, 0xdf, 0x15, 0x83, 0x48,
	0x9e, 0x57, 0xc5, 0xd9, 0xc0, 0x7d, 0xa0, 0x9b, 0x92, 0xf7, 0xcd, 0xed, 0x62, 0x58, 0x64, 0x70,
	0xd9, 0x8d, 0x22, 0xf0, 0x8a, 0xbd, 0xec, 0x03, 0xcb, 0xd8, 0x2d, 0x0e, 0x33, 0xfb, 0x3b, 0x30,
	0x68, 0x45, 0x02, 0x37, 0x1b, 0xc6, 0x7e, 0x30, 0x0e, 0xa4, 0xbf, 0x74, 0xb3, 0x9a, 0xb9, 0xb0,
	0x59, 0xb8, 0x27, 0x99, 0x83, 0x0a, 0xc5, 0xea, 0xa9, 0x9c, 0xeb, 0xcd, 0x2a, 0x3a, 0x4e, 0xfd,
	0x44, 0xce, 0xad, 0xc7, 0x62, 0xb3, 0xba, 0x59, 0xd7, 0x07, 0x6f, 0x22, 0xef, 0xe8, 0xec, 0x6c,
	0x5f, 0xdc, 0xf0, 0x1e, 0x70, 0x9d, 0x8d, 0x60, 0x91, 0x64, 0xff, 0x66, 0x45, 0x6c, 0x5c, 0x10,
	0x24, 0xc0, 0x64, 0x1c, 0xa6, 0xdd, 0x16, 0x80, 0xc9, 0x34, 0x47, 0x33, 0xad, 0x37, 0xc5, 0x0a,
	0xae, 0xad, 0xcc, 0xda, 0xe6, 0x65, 0xf1, 0x7a, 0x88, 0x0c, 0x71, 0xda, 0x43, 0x49, 0x5f, 0xbe,
	0x70, 0x61, 0x81, 0x74, 0xae, 0xb6, 0xb7, 0x51, 0x4c, 0x06, 0x9c, 0x47, 0xc8, 0x70, 0xba, 0x89,
	0x31, 0xb2, 0xee, 0x00, 0x9a, 0x11, 0xba, 0x03, 0x58, 0x79, 0x79, 0x36, 0x5c, 0x21, 0xb5, 0x01,
	0xab, 0x11, 0xe3, 0x10, 0xe9, 0x80, 0x6f, 0xe5, 0x00, 0xbd, 0x4d, 0x29, 0x15, 0xa8, 0xd2, 0x34,
	0xbc, 0x8d, 0xf5, 0x0a, 0x6c, 0xe9, 0x27, 0x95, 0x31, 0x6d, 0x55, 0x69, 0x03, 0x78, 0xa7, 0xde,
	0x70, 0xd5, 0xdc, 0x2a, 0xcb, 0x12, 0xc3, 0x51, 0x5b, 0xe3, 0x91, 0xf5, 0x48, 0x58, 0xa5, 0x1d,
	0x66, 0xc9, 0x24, 0xf5, 0x7c, 0x99, 0x11, 0x94, 0x5f, 0x30, 0xc3, 0x7f, 0x29, 0xae, 0x61, 0x06,
	0x4d, 0xc2, 0xe5, 0xbd, 0x24, 0x99, 0x06, 0xca, 0xf0, 0x99, 0x82, 0x7c, 0x5e, 0xfe, 0x01, 0x73,
	0xc8, 0xd1, 0x9c, 0xae, 0x67, 0x8c, 0xac, 0x7b, 0xa2, 0x2f, 0x27, 0x13, 0x37, 0x88, 0x46, 0xb3,
	0x63, 0x0f, 0x66, 0xcc, 0x08, 0x03, 0xb4, 0xcb, 0x3e, 0x9a, 0x4c, 0xf6, 0x0b, 0x8e, 0xd3, 0x93,
	0xe6, 0x10, 0x55, 0x95, 0x19, 0xdd, 0xb1, 0x17, 0x02, 0xb6, 0x12, 0x42, 0x68, 0x55, 0x65, 0xea,
	0xc7, 0xc4, 0x71, 0x7a, 0x89, 0x39, 0xb4, 0x7f, 0x6c, 0x41, 0x9e, 0x54, 0x2e, 0xd0, 0x17, 0xf5,
	0xc0, 0x57, 0x19, 0x17, 0x7e, 0x81, 0xdb, 0x77, 0xf5, 0xb4, 0x84, 0x86, 0x75, 0x33, 0xfd, 0x29,
	0xa5, 0x7d, 0x9f, 0x53, 0x13, 0xfc, 0x3c, 0x42, 0x94, 0x84, 0x39, 0x46, 0x89, 0x42, 0x36, 0xf8,
	0x45, 0x90, 0x02, 0x11, 0x01, 0xa1, 0x4c, 0xa6, 0x6f, 0x3a, 0x7a, 0x68, 0xbd, 0x25, 0x3a, 0xea,
	0xa7, 0x1b, 0x7a, 0x2f, 0xc8, 0xc0, 0x4d, 0x47, 0x28, 0xd2, 0x81, 0xf7, 0x02, 0x22, 0x68, 0x35,
	0x8c, 0xcf, 0xa4, 0x7b, 0x9b, 0x0c, 0xd8, 0x87, 0x1b, 0x34, 0x17, 0x3e, 0x00, 0x96, 0xd3, 0x44,
	0x81, 0xdb, 0x85, 0xe4, 0x0e, 0x59, 0xeb, 0xe5, 0x92, 0x3b, 0x1c, 0x95, 0xc9, 0x34, 0x9e, 0x83,
	0x75, 0xc6, 0x71, 0x9a, 0xbb, 0x70, 0xe0, 0x16, 0xad, 0xdc, 0xd7, 0xf4, 0xc7, 0x40, 0xde, 0xf7,
	0x21, 0x1e, 0x04, 0x20, 0x2a, 0x38, 0x11, 0x55, 0x04, 0x6d, 0x42, 0xcf, 0x36, 0x51, 0x9e, 0x62,
	0x49, 0x70, 0x49, 0xac, 0x06, 0x99, 0x0b, 0x66, 0xa0, 0xab, 0x6e, 0x39, 0xcd, 0x20, 0x03, 0x13,
	0x59, 0xb7, 0xc4, 0x16, 0x1a, 0xf1, 0x34, 0x74, 0xcf, 0xbd, 0xe9, 0x29, 0xc2, 0x85, 0x97, 0x4e,
	0x64, 0x4e, 0xf9, 0xb7, 0xe9, 0x6c, 0x00, 0xef, 0x49, 0xf8, 0x9c, 0x38, 0x47, 0xc4, 0xb0, 0x3e,
	0x10, 0x9b, 0x55, 0x05, 0xb8, 0x80, 0x34, 0xa7, 0xfc, 0xdb, 0x74, 0x06, 0x86, 0xfc, 0x21, 0xd2,
	0x31, 0x09, 0x31, 0x32, 0x42, 0x9a, 0xa5, 0x24, 0xc4, 0x23, 0xeb, 0x8a, 0x68, 0x9d, 0xc8, 0x60,
	0x72, 0x92, 0xbb, 0xe1, 0x70, 0x1d, 0x38, 0x75, 0x67, 0x8d, 0xc7, 0x07, 0xd6, 0x35, 0xd1, 0x3e,
	0x67, 0xd6, 0xe9, 0x64, 0x38, 0x20, 0x5e, 0x8b, 0x09, 0x4f, 0x26, 0xd6, 0xfb, 0x02, 0x3c, 0xd8,
	0x0f, 0xce, 0x02, 0x7f, 0x06, 0x40, 0xec, 0xe5, 0xb9, 0x37, 0x3a, 0x1d, 0x6e, 0xf0, 0xe2, 0x25,
	0xe3, 0x01, 0xd1, 0x61, 0xaf, 0x96, 0x21, 0xec, 0x63, 0x3e, 0xcd, 0xe4, 0xd0, 0xe2, 0xa3, 0x95,
	0x9c, 0x3d, 0x66, 0x2c, 0x88, 0x6b, 0x2f, 0xd8, 0x5c, 0x14, 0x3f, 0x54, 0xfe, 0x80, 0x55, 0x1a,
	0x80, 0xea, 0x6c, 0x9a, 0x07, 0x18, 0x15, 0xe9, 0x70, 0x8b, 0x24, 0xbb, 0xa3, 0xe4, 0xa0, 0xa0,
	0x61, 0x8a, 0x44, 0x6f, 0x3b, 0xf6, 0xa6, 0xd3, 0xe1, 0x25, 0x4e, 0x91, 0x7a, 0x8c, 0xb6, 0x1d,
	0x79, 0x49, 0x3e, 0x4b, 0xe1, 0x16, 0x47, 0x72, 0x3a, 0x45, 0xdb, 0x6e, 0x83, 0xcc, 0x8a, 0xd3,
	0xd7, 0xf4, 0x5d, 0x20, 0x83, 0x6d, 0xdf, 0x13, 0x03, 0x88, 0x9c, 0x7c, 0x2a, 0x33, 0x75, 0x64,
	0xe9, 0x0f, 0x2f, 0xd3, 0x6c, 0xeb, 0x8a, 0xfe, 0x40, 0x91, 0x4d, 0x51, 0x9f, 0x0b, 0x08, 0x7f,
	0x38, 0xac, 0x88, 0xaa, 0xba, 0xc2, 0xc7, 0xf5, 0x2b, 0x01, 0x8c, 0xeb, 0x5f, 0x61, 0xdf, 0x32,
	0xc3, 0x75, 0x9f, 0x24, 0x2b, 0x05, 0x29, 0xa6, 0x92, 0xab, 0x6a, 0xa7, 0x46, 0x4d, 0x0a, 0x59,
	0x04, 0x2a, 0x3d, 0xf0, 0xe4, 0x12, 0x8d, 0xae, 0x71, 0xa5, 0x07, 0xb4, 0x02, 0x6f, 0xfe, 0x4d,
	0x0c, 0x3d, 0xdf, 0x0f, 0x50, 0x09, 0xae, 0xb9, 0x7a, 0x85, 0x6f, 0x90, 0xf8, 0x76, 0xc9, 0xdf,
	0x5d, 0xb8, 0xcc, 0xb1, 0x77, 0x06, 0x1e, 0x94, 0xcb, 0xe1, 0x9b, 0x7c, 0x99, 0x7a, 0x8c, 0xbc,
	0x28, 0x18, 0x9d, 0x92, 0xf3, 0x5f, 0xe7, 0x72, 0x58, 0x8f, 0xd1, 0xa3, 0xc6, 0x69, 0x1c, 0x52,
	0x00, 0x0d, 0xdf, 0x52, 0x8a, 0x40, 0xc0, 0xc8, 0xb1, 0xbf, 0x12, 0x2b, 0x94, 0x33, 0x6d, 0x95,
	0x4f, 0x6a, 0x14, 0x91, 0x7d, 0x8e, 0x48, 0xe4, 0x20, 0x4c, 0xa8, 0xa4, 0xb2, 0x25, 0x9a, 0x23,
	0xa3, 0xa2, 0xe2, 0x01, 0xfa, 0xf8, 0x0c, 0xfc, 0x47, 0x46, 0x04, 0x23, 0x2d, 0x47, 0x8d, 0xec,
	0x3f, 0xd4, 0x44, 0xd7, 0xcc, 0x34, 0x50, 0xe3, 0x6e, 0x55, 0x72, 0x92, 0x0b, 0x4b, 0x1c, 0xc3,
	0xa9, 0x19, 0xc1, 0x2c, 0x33, 0x0f, 0x3d, 0x25, 0x0e, 0xba, 0x3b, 0xe5, 0x6f, 0x90, 0xa7, 0xb5,
	0x24, 0xf8, 0x84, 0x5a, 0x7c, 0x40, 0x8c, 0x47, 0x25, 0xdd, 0xfa, 0x7b, 0xd1, 0x67, 0x61, 0xed,
	0x3d, 0x0a, 0xd6, 0x7a, 0x44, 0xdd, 0x55, 0x44, 0xeb, 0x23, 0xb1, 0x2d, 0xcf, 0xe2, 0xe9, 0x8c,
	0xac, 0x09, 0x15, 0x79, 0x24, 0xdd, 0x24, 0x90, 0x50, 0x35, 0x29, 0xc0, 0xdb, 0x2a, 0xb8, 0x87,
	0xc8, 0x7c, 0x46, 0x3c, 0xf4, 0xab, 0x05, 0xad, 0x4c, 0x41, 0xe0, 0x7a, 0x55, 0x3e, 0xb3, 0x7f,
	0xbf, 0x26, 0x3a, 0x46, 0xaa, 0xc4, 0x5b, 0x9b, 0xca, 0x33, 0x39, 0x55, 0xe7, 0xe4, 0x81, 0x75,
	0x5d, 0x08, 0xf9, 0x22, 0x91, 0x69, 0x00, 0x47, 0x93, 0xaa, 0xd2, 0x30, 0x28, 0x60, 0x8f, 0x5e,
	0x92, 0xca, 0x33, 0x97, 0xa4, 0xdd, 0x17, 0x8c, 0xd1, 0x0d, 0x00, 0x6f, 0x20, 0x7e, 0x81, 0xb4,
	0xaf, 0x12, 0x94, 0xc1, 0x4a, 0xb9, 0x94, 0x59, 0x61, 0x19, 0x24, 0x6a, 0x19, 0x30, 0x7e, 0x01,
	0x56, 0xb4, 0x63, 0x80, 0x93, 0x53, 0x85, 0x51, 0xd6, 0x6d, 0xb6, 0x08, 0x80, 0x6e, 0xf5, 0x8a,
	0x57, 0x69, 0xa7, 0x9b, 0x9a, 0x67, 0xde, 0x32, 0x5c, 0xdf, 0x2c, 0x0a, 0xa0, 0x56, 0x75, 0x4d,
	0x5b, 0x06, 0x2a, 0xf3, 0xc2, 0xf5, 0x31, 0xd7, 0x30, 0x3c, 0xf0, 0xd0, 0x90, 0xc5, 0x42, 0x85,
	0x79, 0x18, 0xc8, 0x07, 0x9a, 0x51, 0x58, 0x08, 0xaf, 0x46, 0xdf, 0x69, 0xa6, 0x2a, 0x6b, 0x83,
	0x82, 0xe1, 0xa8, 0x5f, 0x5c, 0x89, 0x7b, 0x16, 0x64, 0x01, 0xd4, 0x29, 0x5c, 0x62, 0xf7, 0xd5,
	0xab, 0x2b, 0xf9, 0x92, 0xa8, 0x68, 0x35, 0x0d, 0x37, 0x99, 0x9b, 0x9f, 0xa4, 0x90, 0x0f, 0x14,
	0xb4, 0xaf, 0x17, 0xf4, 0x23, 0x22, 0x63, 0xe4, 0x42, 0xd4, 0x67, 0xee, 0x89, 0x97, 0x8f, 0x4e,
	0x60, 0x73, 0x8c, 0xe8, 0x1d, 0xa4, 0x7d, 0xce, 0x24, 0xeb, 0xa6, 0xd8, 0x3c, 0x0e, 0x26, 0x90,
	0xfd, 0x26, 0xc1, 0xa9, 0x97, 0x26, 0x70, 0x90, 0x19, 0xa0, 0x32, 0xbd, 0xae, 0x00, 0x21, 0x81,
	0x75, 0xa0, 0x38, 0xbb, 0xc4, 0x80, 0x57, 0xe4, 0x06, 0x63, 0x8e, 0x42, 0x2d, 0xf7, 0x3c, 0xd6,
	0x79, 0x40, 0x81, 0x11, 0xc3, 0xd6, 0x73, 0xc8, 0xe5, 0x38, 0x77, 0x45, 0x36, 0x8f, 0x73, 0x78,
	0x98, 0xae, 0xab, 0xb9, 0x0d, 0xe9, 0x23, 0x64, 0x18, 0xf2, 0x1a, 0xe6, 0x68, 0xf6, 0x81, 0x29,
	0xaf, 0x91, 0xae, 0x3a, 0x7f, 0x9e, 0x7a, 0x41, 0x04, 0x2f, 0x0e, 0x92, 0xdf, 0x30, 0xe5, 0x8f,
	0x14, 0x07, 0xe5, 0xa1, 0x84, 0x5e, 0x94, 0xe7, 0x1d, 0x71, 0xfa, 0xd8, 0xac, 0x6a, 0xf0, 0x9e,
	0x40, 0x07, 0xbc, 0x33, 0xcb, 0x83, 0x89, 0x74, 0x81, 0x91, 0x61, 0x3a, 0x25, 0x9d, 0x4d, 0xe5,
	0x4e, 0x8a, 0xe9, 0x10, 0x8f, 0x75, 0xc0, 0x9d, 0x0a, 0x1d, 0x3f, 0x8d, 0x93, 0xa4, 0x50, 0xe2,
	0x74, 0xb2, 0xa5, 0xb9, 0x7b, 0xcc, 0x64, 0x2d, 0x65, 0x57, 0xac, 0x74, 0x74, 0x19, 0xa0, 0xd2,
	0xcb, 0xba, 0xa2, 0xef, 0x29, 0x32, 0x14, 0xb4, 0xdb, 0x5a, 0x94, 0xed, 0xe5, 0x1e, 0xcf, 0xb9,
	0x3c, 0xda, 0xa6, 0x57, 0xb1, 0x76, 0x72, 0xb6, 0xd9, 0xc3, 0x39, 0x55, 0x45, 0x80, 0x54, 0x59,
	0x08, 0xce, 0x01, 0xc7, 0x80, 0x3b, 0xcf, 0x3d, 0x6d, 0x6a, 0x4e, 0x3a, 0x16, 0xf1, 0x1c, 0x66,
	0xb1, 0x9e, 0xfd, 0x8e, 0xe8, 0x57, 0xcb, 0x5c, 0x7c, 0xc8, 0x4d, 0xa4, 0x7a, 0x73, 0x34, 0x1d,
	0xfa, 0x6d, 0x7f, 0x0c, 0x88, 0x68, 0x96, 0xb0, 0xe0, 0x21, 0x01, 0x25, 0x2a, 0x0f, 0x50, 0x5e,
	0x97, 0xbf, 0xfc, 0x94, 0x5b, 0x0f, 0x30, 0x53, 0x21, 0x9d, 0x65, 0xed, 0xff, 0x36, 0x5e, 0x0b,
	0x45, 0x32, 0xd9, 0x5b, 0x5a, 0x03, 0xd7, 0xe8, 0xed, 0x74, 0x69, 0x69, 0x0d, 0xbc, 0xa4, 0x04,
	0xb6, 0x7f, 0x59, 0x13, 0x83, 0x45, 0xb9, 0x9f, 0x94, 0x10, 0x3e, 0x11, 0x5d, 0xb5, 0xa8, 0x59,
	0x71, 0x5e, 0x55, 0xb2, 0x0b, 0x33, 0x92, 0x5e, 0x67, 0x56, 0x0e, 0xb0, 0xe2, 0x30, 0x52, 0xa1,
	0xee, 0x8e, 0x30, 0x6a, 0x6f, 0x94, 0x1c, 0xd5, 0x23, 0xb1, 0x3f, 0x12, 0x5d, 0xb3, 0x1e, 0xb7,
	0xde, 0x51, 0x3b, 0x34, 0xdf, 0x28, 0x86, 0x00, 0xef, 0xd1, 0xfe, 0x6d, 0x4d, 0x74, 0x0c, 0x2a,
	0x40, 0x51, 0x9b, 0x1e, 0x6d, 0xaa, 0x61, 0xb0, 0xec, 0x70, 0xad, 0x40, 0xfd, 0xa2, 0xfb, 0xd5,
	0xc2, 0x60, 0x9f, 0x5c, 0x4e, 0xe0, 0x3c, 0xea, 0x98, 0xdb, 0x55, 0xad, 0x5d, 0xc5, 0x85, 0x42,
	0x6c, 0x81, 0x82, 0x18, 0x0c, 0xc8, 0x1e, 0xa4, 0x54, 0x38, 0x30, 0x8e, 0xb7, 0x98, 0x00, 0x25,
	0x03, 0x14, 0xae, 0xfa, 0xfd, 0x11, 0x66, 0x0a, 0xc1, 0xdb, 0x8a, 0x72, 0x90, 0xd9, 0x9f, 0x89,
	0x5e, 0xe5, 0x2d, 0x81, 0xef, 0x95, 0x4a, 0xd9, 0xa2, 0x9e, 0x89, 0x1b, 0x17, 0x9e, 0x1d, 0x4e,
	0xd7, 0x2c, 0x63, 0xec, 0x6f, 0xeb, 0xa2, 0x6b, 0xb2, 0xad, 0xcb, 0x62, 0x8d, 0xce, 0xa6, 0xde,
	0x10, 0x6d, 0x67, 0x15, 0x87, 0x50, 0xee, 0x54, 0x6e, 0xa8, 0xfe, 0x9a, 0x1b, 0xfa, 0x44, 0xf4,
	0xcb, 0x0a, 0x8a, 0x34, 0x1a, 0xe6, 0xed, 0x98, 0x2b, 0x92, 0x66, 0x2f, 0x30, 0x87, 0x98, 0xb4,
	0x67, 0x19, 0xe4, 0xec, 0x54, 0x86, 0x0c, 0x25, 0x2a, 0x0b, 0xf7, 0x90, 0xea, 0x68, 0x22, 0x5e,
	0x92, 0x8e, 0xe2, 0x80, 0xd3, 0x18, 0x5c, 0x52, 0xa2, 0x9f, 0x34, 0xf0, 0x68, 0x5e, 0xa7, 0x3a,
	0xbc, 0xac, 0xcb, 0x29, 0x85, 0xd5, 0x9c, 0x1e, 0x91, 0x75, 0x4d, 0x8e, 0x99, 0x83, 0x0b, 0x7c,
	0x43, 0x70, 0x8d, 0x04, 0xfb, 0x4c, 0xd7, 0x92, 0x10, 0x6d, 0xbd, 0xca, 0x3b, 0x0c, 0xc0, 0xad,
	0xcd, 0x6f, 0x35, 0x7d, 0x5f, 0x7d, 0x08, 0x30, 0xf3, 0xd9, 0xc2, 0x72, 0xf0, 0xbe, 0x6a, 0x8d,
	0xd5, 0x2f, 0xaa, 0x97, 0xbc, 0xc8, 0x9f, 0x17, 0xf5, 0x12, 0x0e, 0xec, 0x5f, 0xd4, 0xa8, 0x9d,
	0x73, 0xe0, 0x25, 0xff, 0x79, 0xfc, 0x3f, 0x72, 0x94, 0x17, 0xad, 0x1f, 0x30, 0x88, 0xae, 0x83,
	0x6b, 0x84, 0x4d, 0xab, 0x23, 0xae, 0x7f, 0xff, 0x59, 0x58, 0x19, 0x5c, 0x9b, 0xbc, 0xd8, 0x4a,
	0xe9, 0x3a, 0x03, 0xe2, 0x98, 0x9d, 0x0c, 0x28, 0x05, 0xa7, 0x50, 0x93, 0xe6, 0x33, 0x9f, 0x6d,
	0x51, 0x73, 0x8a, 0x31, 0xb6, 0xa5, 0xa6, 0x71, 0x34, 0x61, 0xe6, 0x0a, 0x31, 0x4b, 0x82, 0x9d,
	0x8a, 0x4b, 0x0b, 0x1b, 0x53, 0x8d, 0xa6, 0xf7, 0x44, 0x3b, 0xf4, 0x12, 0xaa, 0xd2, 0x35, 0xba,
	0x70, 0x5b, 0x02, 0x64, 0xb1, 0x46, 0x77, 0x5a, 0x21, 0xff, 0xc8, 0x20, 0xd1, 0xac, 0x62, 0xe7,
	0x60, 0x96, 0x55, 0xa3, 0xa4, 0x9c, 0xf4, 0x90, 0xb8, 0x8e, 0x92, 0xb2, 0xbf, 0x5f, 0x11, 0x6b,
	0x6a, 0x16, 0xd8, 0x9d, 0xc8, 0x76, 0x5c, 0xf3, 0x0e, 0x56, 0x9c, 0x56, 0xb6, 0xa3, 0x5e, 0x01,
	0x00, 0xca, 0xdc, 0x5e, 0xc8, 0x97, 0xb5, 0x94, 0x2c, 0xc5, 0x33, 0x6f, 0xe2, 0x86, 0x68, 0x62,
	0xcd, 0xab, 0x9b, 0x49, 0xdc, 0xe3, 0xc4, 0xaa, 0x97, 0x5a, 0x32, 0xcc, 0xc3, 0x57, 0x73, 0x96,
	0x78, 0xe7, 0x11, 0xd4, 0x33, 0x41, 0x44, 0x1d, 0x8f, 0x46, 0xd1, 0x7a, 0x3d, 0x44, 0xc6, 0x33,
	0xa4, 0x3b, 0x9d, 0xac, 0xf8, 0x9d, 0x59, 0xff, 0x28, 0xd6, 0x75, 0xb3, 0x28, 0xe6, 0x53, 0x81,
	0xbf, 0x35, 0x20, 0x84, 0x74, 0xaf, 0x48, 0x9d, 0x55, 0x01, 0x7c, 0x9e, 0xce, 0x22, 0x04, 0x0f,
	0xdf, 0x9d, 0x06, 0x59, 0x4e, 0x1e, 0x47, 0x00, 0x7f, 0xa4, 0xe9, 0x5f, 0x00, 0xd9, 0xfa, 0x57,
	0xd1, 0xa7, 0x27, 0x6e, 0x36, 0x0b, 0x43, 0x8f, 0x2a, 0xaa, 0x16, 0x6d, 0x65, 0x50, 0x6c, 0xfb,
	0x90, 0x38, 0x73, 0xa7, 0x37, 0x2e, 0x06, 0x58, 0x5c, 0x3d, 0x12, 0xdb, 0xbe, 0x1c, 0x05, 0x21,
	0xad, 0x50, 0x39, 0x4b, 0x7b, 0xf9, 0x59, 0xb6, 0x0a, 0xf1, 0x43, 0xe3, 0x50, 0xff, 0x22, 0x7a,
	0xe7, 0xc1, 0xd4, 0x77, 0x75, 0x3d, 0x06, 0x61, 0x56, 0x2e, 0xff, 0x1c, 0x38, 0xba, 0x07, 0xd5,
	0x3d, 0x2f, 0x07, 0x99, 0xf5, 0xa9, 0xb0, 0x46, 0x58, 0x20, 0x79, 0xc7, 0x53, 0x59, 0xea, 0x0a,
	0x63, 0x65, 0x30, 0xaf, 0x56, 0xdd, 0x28, 0x44, 0x0b, 0xfd, 0xfb, 0x62, 0x3d, 0x92, 0x5e, 0x0a,
	0x59, 0xb9, 0x50, 0xee, 0x18, 0xbd, 0xbf, 0xa7, 0xc4, 0xd3, 0xfa, 0xfd, 0xc8, 0x1c, 0x66, 0xf6,
	0x0f, 0x4d, 0xd1, 0xd2, 0x06, 0x35, 0xfa, 0x21, 0x6d, 0xea, 0x87, 0xdc, 0x17, 0x57, 0xa7, 0x5e,
	0x06, 0x4f, 0xec, 0xa5, 0xbd, 0x40, 0x76, 0x9b, 0xcb, 0x28, 0x71, 0xb0, 0xa4, 0x1f, 0xf8, 0x17,
	0x47, 0x11, 0xb6, 0x50, 0x64, 0x84, 0x47, 0xe4, 0x0a, 0xb7, 0xe5, 0xe8, 0x21, 0xa6, 0x54, 0x42,
	0xc8, 0xb6, 0x89, 0xa9, 0xb8, 0x7d, 0x4e, 0xa9, 0xd4, 0xb6, 0xbe, 0x23, 0x7a, 0xd8, 0xb5, 0xf0,
	0xa9, 0x4c, 0x79, 0xc5, 0x47, 0x8c, 0x0e, 0x49, 0x41, 0xbd, 0x82, 0xdf, 0x32, 0xee, 0x89, 0xc1,
	0x64, 0xe6, 0xa5, 0x85, 0xed, 0x30, 0x7c, 0x56, 0x97, 0x77, 0x7f, 0xfa, 0x24, 0x58, 0x8c, 0x11,
	0x12, 0xab, 0xaa, 0xa3, 0x44, 0x55, 0xf2, 0x15, 0xc9, 0xdd, 0x04, 0x31, 0x78, 0x32, 0x0f, 0xb5,
	0x6b, 0x09, 0xc6, 0x60, 0xa0, 0x28, 0xf7, 0x79, 0x5b, 0x74, 0xc1, 0xd5, 0x83, 0xc8, 0xe5, 0xd2,
	0x90, 0xea, 0xec, 0x96, 0x23, 0x82, 0x6c, 0x3f, 0x7a, 0x48, 0x14, 0x6b, 0x57, 0x5c, 0x1f, 0xc5,
	0xf1, 0xd4, 0x87, 0x9d, 0xbb, 0xa3, 0x38, 0x4c, 0x30, 0x52, 0xaa, 0x36, 0xe9, 0xd3, 0xa4, 0xd7,
	0xb4, 0xd4, 0xae, 0x12, 0x32, 0xed, 0xf2, 0xbe, 0x58, 0x23, 0x50, 0x82, 0xc4, 0xb7, 0x6e, 0x36,
	0x8f, 0x28, 0x3e, 0x98, 0xe1, 0x68, 0x09, 0xf0, 0xcd, 0x7e, 0x4a, 0x1f, 0x11, 0xa8, 0x7e, 0xc5,
	0xab, 0x1f, 0x90, 0xce, 0xe5, 0x52, 0xc7, 0xd1, 0x7c, 0xce, 0x4e, 0xa9, 0x39, 0x44, 0xc8, 0xf1,
	0x46, 0x79, 0x70, 0x26, 0xb9, 0xf9, 0xa4, 0x1c, 0x29, 0x55, 0x9f, 0x5b, 0x2c, 0xe6, 0xe1, 0x2c,
	0xca, 0x83, 0x52, 0x80, 0xbf, 0xf6, 0x14, 0x1e, 0x31, 0x70, 0x0f, 0xe3, 0x98, 0x5e, 0x06, 0x3a,
	0x33, 0xa3, 0xd4, 0x17, 0xc0, 0xd9, 0x07, 0x06, 0xb8, 0x92, 0xfa, 0x65, 0x7f, 0x0f, 0x8f, 0x64,
	0x93, 0x85, 0x49, 0x40, 0x37, 0xba, 0x54, 0x56, 0x1e, 0x73, 0x83, 0x6b, 0xf1, 0x2b, 0x45, 0xcd,
	0xf8, 0x4a, 0x71, 0x5f, 0x6c, 0xa8, 0x7d, 0x1a, 0x0e, 0xd0, 0x58, 0xee, 0x00, 0xeb, 0x2c, 0x59,
	0x7a, 0xc0, 0x3d, 0x71, 0x85, 0xb6, 0xcc, 0x15, 0x49, 0x56, 0xb5, 0x08, 0xd7, 0x23, 0xdb, 0x28,
	0xf0, 0x88, 0xf9, 0xe6, 0x37, 0x98, 0xc7, 0x42, 0x94, 0x08, 0x52, 0x09, 0x99, 0xfa, 0xab, 0x42,
	0xa6, 0xb1, 0x98, 0x78, 0x7e, 0x05, 0x35, 0x9a, 0x01, 0x70, 0x98, 0xcf, 0x0d, 0x28, 0x2c, 0x52,
	0x6e, 0xd3, 0x44, 0x3e, 0x4c, 0xb0, 0xaf, 0x8f, 0xf0, 0xe6, 0x4f, 0x8f, 0xf0, 0xe6, 0xab, 0x22,
	0xbc, 0x69, 0x6e, 0xf7, 0xd7, 0x75, 0xd1, 0x31, 0x00, 0x91, 0xde, 0x8e, 0xfa, 0x89, 0xac, 0xf7,
	0xba, 0x0a, 0x6f, 0x47, 0x4d, 0xdb, 0xff, 0xab, 0x61, 0xd1, 0x0d, 0xd1, 0xa3, 0x84, 0x40, 0x41,
	0xab, 0x4b, 0xa7, 0xb6, 0xd3, 0x2d, 0x89, 0xfb, 0x3e, 0xf5, 0xfc, 0xf5, 0x6b, 0x0a, 0xbf, 0x64,
	0xac, 0x99, 0x3d, 0x7f, 0xf5, 0x9c, 0xc2, 0x84, 0xa9, 0x1b, 0xc7, 0x04, 0xb6, 0x1f, 0x88, 0x4d,
	0x6a, 0x85, 0xe5, 0x01, 0x64, 0xeb, 0x93, 0xc0, 0xf7, 0x65, 0x84, 0x27, 0xe9, 0x94, 0xcd, 0x99,
	0x23, 0xe0, 0x7c, 0x4e, 0x0c, 0xf0, 0x94, 0x1f, 0x5b, 0xa2, 0x63, 0xcc, 0x75, 0xa1, 0x77, 0x7d,
	0xb3, 0x52, 0xe0, 0xbd, 0xa4, 0x73, 0x6d, 0x54, 0x7c, 0x3f, 0xf7, 0xad, 0x7f, 0xee, 0x5b, 0xff,
	0xdc, 0xb7, 0xfe, 0x1b, 0xee, 0x5b, 0xff, 0xb1, 0x26, 0x44, 0x59, 0x58, 0x5e, 0x04, 0xba, 0xda,
	0x12, 0xa0, 0x5b, 0xc4, 0xe9, 0xfa, 0x45, 0x9c, 0xae, 0xe2, 0x50, 0xe3, 0xb5, 0x38, 0x74, 0x57,
	0x5c, 0xa6, 0xbc, 0x59, 0x5e, 0xf2, 0x42, 0xea, 0xbc, 0x54, 0xb2, 0x5f, 0x06, 0xe9, 0xcd, 0x57,
	0x41, 0xfa, 0xea, 0x62, 0xae, 0xfc, 0xff, 0x9a, 0xe8, 0x55, 0x8a, 0xe2, 0x85, 0x3d, 0xd7, 0x5e,
	0xbb, 0x67, 0x78, 0x4e, 0xfa, 0xf0, 0xe0, 0xf0, 0xf0, 0x45, 0x09, 0xf5, 0x5a, 0x08, 0x15, 0x56,
	0xca, 0x39, 0xa8, 0xee, 0x0c, 0x34, 0x67, 0x3f, 0x3a, 0x20, 0xfa, 0x85, 0x4b, 0x6b, 0x5c, 0xb8,
	0x34, 0x7b, 0x26, 0x86, 0x17, 0xff, 0x9d, 0x41, 0x3d, 0x1d, 0xe1, 0x0d, 0x2c, 0xd3, 0x54, 0xb5,
	0x29, 0xda, 0x0e, 0x0f, 0x8a, 0xff, 0x72, 0xa8, 0x97, 0xff, 0xe5, 0x00, 0x98, 0xd6, 0xca, 0x94,
	0xb6, 0xfa, 0x5a, 0xcd, 0x9f, 0x8f, 0x3f, 0x9b, 0xc6, 0x10, 0x77, 0xc5, 0xc4, 0x85, 0x90, 0xfd,
	0x5d, 0x5d, 0xf4, 0xab, 0x4c, 0x6c, 0x8e, 0x70, 0xe1, 0xa0, 0x27, 0xaa, 0x2f, 0x94, 0x60, 0xc5,
	0x34, 0xdd, 0xb1, 0x31, 0xc2, 0x14, 0x88, 0x0f, 0xdc, 0x85, 0xf5, 0x07, 0xfa, 0xf9, 0x52, 0x68,
	0x75, 0xc2, 0x72, 0x80, 0x9f, 0x71, 0xb9, 0xf3, 0x5e, 0xa8, 0xad, 0x18, 0x9f, 0x71, 0xa9, 0x01,
	0x5f, 0x28, 0xf6, 0xa6, 0xe6, 0xb0, 0xfa, 0xed, 0xba, 0x50, 0x6f, 0x2e, 0xfb, 0x76, 0x5d, 0x4c,
	0x51, 0x36, 0xee, 0x8a, 0x69, 0x3e, 0x12, 0xdb, 0x80, 0x69, 0x41, 0x08, 0xa1, 0x3b, 0x82, 0x50,
	0x03, 0xcf, 0x3f, 0x03, 0x93, 0x81, 0xab, 0x91, 0xdb, 0xb4, 0x9d, 0x2d, 0xc5, 0xdd, 0x25, 0xe6,
	0x97, 0xcc, 0xb3, 0xff, 0x54, 0xe7, 0x9a, 0xb3, 0x98, 0x06, 0x42, 0x3b, 0x40, 0x53, 0x62, 0x65,
	0x08, 0x4e, 0x94, 0x7a, 0xd1, 0x44, 0x6a, 0xb7, 0xa8, 0x91, 0xff, 0x6d, 0x1b, 0x7c, 0x07, 0xd9,
	0xca, 0x39, 0xa0, 0xac, 0x81, 0xa4, 0xca, 0x1d, 0xdb, 0xa2, 0x15, 0xab, 0x8b, 0x50, 0x5d, 0x80,
	0x81, 0x04, 0xb5, 0x6d, 0x75, 0x4f, 0x56, 0xfb, 0xed, 0x27, 0xe2, 0x1a, 0x2a, 0xab, 0x8f, 0xff,
	0x17, 0xb4, 0x39, 0xb9, 0x0f, 0x41, 0x84, 0x7b, 0xa6, 0x8b, 0xea, 0x1f, 0x8b, 0x2b, 0xac, 0xe3,
	0x16, 0xf9, 0xbd, 0x44, 0x24, 0xae, 0x84, 0x2e, 0xb3, 0x80, 0x82, 0x7e, 0x03, 0x92, 0xe0, 0xc4,
	0x4a, 0x57, 0xb5, 0xdb, 0x0d, 0x55, 0x0e, 0xc7, 0x6d, 0xe6, 0x33, 0x40, 0x1b, 0x9a, 0xff, 0x21,
	0xde, 0x18, 0x7b, 0x10, 0x08, 0x2f, 0xbb, 0x2f, 0x8e, 0xd7, 0x2b, 0x20, 0xb3, 0xbf, 0xf4, 0xca,
	0xec, 0xdf, 0x35, 0x44, 0xc7, 0x70, 0x29, 0xea, 0x9a, 0xab, 0xe8, 0xc5, 0x6f, 0x19, 0xf8, 0x8a,
	0xa6, 0x09, 0xd5, 0xcd, 0xeb, 0xfe, 0xf4, 0x97, 0xcc, 0xa3, 0x99, 0xac, 0xdb, 0xac, 0x03, 0x35,
	0xc3, 0x59, 0x75, 0x75, 0x2e, 0xbb, 0xe9, 0x53, 0xda, 0x53, 0xef, 0xcc, 0xb4, 0x14, 0x7e, 0xf6,
	0x2a, 0xc2, 0xb8, 0xa2, 0xc3, 0x15, 0xe5, 0x56, 0xc1, 0x35, 0xb5, 0x9e, 0x88, 0x1b, 0xd8, 0x2d,
	0xc3, 0xd8, 0x50, 0x8d, 0x0e, 0x17, 0x6e, 0xd2, 0x4d, 0xe5, 0x18, 0x5e, 0x02, 0x27, 0xe0, 0xb9,
	0xa3, 0x38, 0xf2, 0xd9, 0xef, 0xeb, 0xce, 0xf5, 0x89, 0xd9, 0x3c, 0x3a, 0x08, 0x22, 0x87, 0xc5,
	0x0e, 0x59, 0x6a, 0xe9, 0x64, 0x60, 0xff, 0xc5, 0xc9, 0x9a, 0xcb, 0x26, 0xf3, 0x5e, 0xfc, 0x84,
	0xc9, 0x60, 0x67, 0x05, 0xb0, 0x19, 0xe6, 0x58, 0xb2, 0xb3, 0x3d, 0x25, 0xa6, 0x8e, 0x09, 0xd5,
	0xd1, 0x24, 0x8e, 0x27, 0x70, 0xf5, 0x30, 0x1f, 0x24, 0xeb, 0x24, 0xa0, 0xff, 0xff, 0x59, 0xa3,
	0x20, 0x1a, 0x30, 0x0b, 0xf4, 0xb3, 0x07, 0x49, 0xf0, 0x44, 0xce, 0xed, 0xff, 0x15, 0xbd, 0x4a,
	0x74, 0xe3, 0xd7, 0x15, 0xfa, 0x4c, 0x82, 0xff, 0xc3, 0x92, 0x94, 0xcf, 0x44, 0xb6, 0xc6, 0x86,
	0x62, 0x41, 0x4e, 0xd4, 0xaf, 0xc4, 0x4f, 0xc5, 0x35, 0x2d, 0x0f, 0x94, 0x71, 0x30, 0x02, 0xff,
	0x9a, 0x97, 0x7a, 0x6c, 0x91, 0x2b, 0x4a, 0x64, 0xaf, 0x90, 0xd0, 0xfa, 0xf6, 0x0f, 0x35, 0xe3,
	0x63, 0x40, 0xb1, 0x0b, 0xa8, 0x74, 0x29, 0x9e, 0x8c, 0x7f, 0x1f, 0x82, 0x4a, 0x17, 0xe3, 0x47,
	0x45, 0x8c, 0x2d, 0x7a, 0x28, 0x70, 0xec, 0x4d, 0xd4, 0xbf, 0xba, 0x70, 0x80, 0xa2, 0xd6, 0x43,
	0x6f, 0xc2, 0x4d, 0x75, 0x80, 0xfb, 0x63, 0x2f, 0x93, 0x0b, 0x51, 0xd8, 0x41, 0x9a, 0x9e, 0xe6,
	0x1d, 0xd1, 0x27, 0x91, 0x72, 0x1e, 0x2e, 0xb9, 0x49, 0xb1, 0x98, 0x08, 0xb2, 0x37, 0x49, 0xe1,
	0x17, 0x34, 0x55, 0x75, 0xb7, 0x90, 0x00, 0xe5, 0x6b, 0xf6, 0xe7, 0x00, 0x00, 0x00, 0xff, 0xff,
	0xd8, 0xe8, 0x3e, 0x13, 0x90, 0x2a, 0x00, 0x00,
}
