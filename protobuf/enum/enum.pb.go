// Code generated by protoc-gen-go.
// source: enum.proto
// DO NOT EDIT!

/*
Package enum is a generated protocol buffer package.

It is generated from these files:
	enum.proto

It has these top-level messages:
*/
package enum

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type RpcDirection int32

const (
	RpcDirection_UNKNOWN  RpcDirection = 0
	RpcDirection_RESPONSE RpcDirection = 1
	RpcDirection_REQUEST  RpcDirection = 2
)

var RpcDirection_name = map[int32]string{
	0: "UNKNOWN",
	1: "RESPONSE",
	2: "REQUEST",
}
var RpcDirection_value = map[string]int32{
	"UNKNOWN":  0,
	"RESPONSE": 1,
	"REQUEST":  2,
}

func (x RpcDirection) Enum() *RpcDirection {
	p := new(RpcDirection)
	*p = x
	return p
}
func (x RpcDirection) String() string {
	return proto.EnumName(RpcDirection_name, int32(x))
}
func (x *RpcDirection) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(RpcDirection_value, data, "RpcDirection")
	if err != nil {
		return err
	}
	*x = RpcDirection(value)
	return nil
}
func (RpcDirection) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type TeamColor int32

const (
	TeamColor_NEUTRAL TeamColor = 0
	TeamColor_BLUE    TeamColor = 1
	TeamColor_RED     TeamColor = 2
	TeamColor_YELLOW  TeamColor = 3
)

var TeamColor_name = map[int32]string{
	0: "NEUTRAL",
	1: "BLUE",
	2: "RED",
	3: "YELLOW",
}
var TeamColor_value = map[string]int32{
	"NEUTRAL": 0,
	"BLUE":    1,
	"RED":     2,
	"YELLOW":  3,
}

func (x TeamColor) Enum() *TeamColor {
	p := new(TeamColor)
	*p = x
	return p
}
func (x TeamColor) String() string {
	return proto.EnumName(TeamColor_name, int32(x))
}
func (x *TeamColor) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(TeamColor_value, data, "TeamColor")
	if err != nil {
		return err
	}
	*x = TeamColor(value)
	return nil
}
func (TeamColor) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type RequestMethod int32

const (
	RequestMethod_METHOD_UNSET                   RequestMethod = 0
	RequestMethod_PLAYER_UPDATE                  RequestMethod = 1
	RequestMethod_GET_PLAYER                     RequestMethod = 2
	RequestMethod_GET_INVENTORY                  RequestMethod = 4
	RequestMethod_DOWNLOAD_SETTINGS              RequestMethod = 5
	RequestMethod_DOWNLOAD_ITEM_TEMPLATES        RequestMethod = 6
	RequestMethod_DOWNLOAD_REMOTE_CONFIG_VERSION RequestMethod = 7
	RequestMethod_FORT_SEARCH                    RequestMethod = 101
	RequestMethod_ENCOUNTER                      RequestMethod = 102
	RequestMethod_CATCH_POKEMON                  RequestMethod = 103
	RequestMethod_FORT_DETAILS                   RequestMethod = 104
	RequestMethod_ITEM_USE                       RequestMethod = 105
	RequestMethod_GET_MAP_OBJECTS                RequestMethod = 106
	RequestMethod_FORT_DEPLOY_POKEMON            RequestMethod = 110
	RequestMethod_FORT_RECALL_POKEMON            RequestMethod = 111
	RequestMethod_RELEASE_POKEMON                RequestMethod = 112
	RequestMethod_USE_ITEM_POTION                RequestMethod = 113
	RequestMethod_USE_ITEM_CAPTURE               RequestMethod = 114
	RequestMethod_USE_ITEM_FLEE                  RequestMethod = 115
	RequestMethod_USE_ITEM_REVIVE                RequestMethod = 116
	RequestMethod_TRADE_SEARCH                   RequestMethod = 117
	RequestMethod_TRADE_OFFER                    RequestMethod = 118
	RequestMethod_TRADE_RESPONSE                 RequestMethod = 119
	RequestMethod_TRADE_RESULT                   RequestMethod = 120
	RequestMethod_GET_PLAYER_PROFILE             RequestMethod = 121
	RequestMethod_GET_ITEM_PACK                  RequestMethod = 122
	RequestMethod_BUY_ITEM_PACK                  RequestMethod = 123
	RequestMethod_BUY_GEM_PACK                   RequestMethod = 124
	RequestMethod_EVOLVE_POKEMON                 RequestMethod = 125
	RequestMethod_GET_HATCHED_EGGS               RequestMethod = 126
	RequestMethod_ENCOUNTER_TUTORIAL_COMPLETE    RequestMethod = 127
	RequestMethod_LEVEL_UP_REWARDS               RequestMethod = 128
	RequestMethod_CHECK_AWARDED_BADGES           RequestMethod = 129
	RequestMethod_USE_ITEM_GYM                   RequestMethod = 133
	RequestMethod_GET_GYM_DETAILS                RequestMethod = 134
	RequestMethod_START_GYM_BATTLE               RequestMethod = 135
	RequestMethod_ATTACK_GYM                     RequestMethod = 136
	RequestMethod_RECYCLE_INVENTORY_ITEM         RequestMethod = 137
	RequestMethod_COLLECT_DAILY_BONUS            RequestMethod = 138
	RequestMethod_USE_ITEM_XP_BOOST              RequestMethod = 139
	RequestMethod_USE_ITEM_EGG_INCUBATOR         RequestMethod = 140
	RequestMethod_USE_INCENSE                    RequestMethod = 141
	RequestMethod_GET_INCENSE_POKEMON            RequestMethod = 142
	RequestMethod_INCENSE_ENCOUNTER              RequestMethod = 143
	RequestMethod_ADD_FORT_MODIFIER              RequestMethod = 144
	RequestMethod_DISK_ENCOUNTER                 RequestMethod = 145
	RequestMethod_COLLECT_DAILY_DEFENDER_BONUS   RequestMethod = 146
	RequestMethod_UPGRADE_POKEMON                RequestMethod = 147
	RequestMethod_SET_FAVORITE_POKEMON           RequestMethod = 148
	RequestMethod_NICKNAME_POKEMON               RequestMethod = 149
	RequestMethod_EQUIP_BADGE                    RequestMethod = 150
	RequestMethod_SET_CONTACT_SETTINGS           RequestMethod = 151
	RequestMethod_GET_ASSET_DIGEST               RequestMethod = 300
	RequestMethod_GET_DOWNLOAD_URLS              RequestMethod = 301
	RequestMethod_GET_SUGGESTED_CODENAMES        RequestMethod = 401
	RequestMethod_CHECK_CODENAME_AVAILABLE       RequestMethod = 402
	RequestMethod_CLAIM_CODENAME                 RequestMethod = 403
	RequestMethod_SET_AVATAR                     RequestMethod = 404
	RequestMethod_SET_PLAYER_TEAM                RequestMethod = 405
	RequestMethod_MARK_TUTORIAL_COMPLETE         RequestMethod = 406
	RequestMethod_LOAD_SPAWN_POINTS              RequestMethod = 500
	RequestMethod_ECHO                           RequestMethod = 666
	RequestMethod_DEBUG_UPDATE_INVENTORY         RequestMethod = 700
	RequestMethod_DEBUG_DELETE_PLAYER            RequestMethod = 701
	RequestMethod_SFIDA_REGISTRATION             RequestMethod = 800
	RequestMethod_SFIDA_ACTION_LOG               RequestMethod = 801
	RequestMethod_SFIDA_CERTIFICATION            RequestMethod = 802
	RequestMethod_SFIDA_UPDATE                   RequestMethod = 803
	RequestMethod_SFIDA_ACTION                   RequestMethod = 804
	RequestMethod_SFIDA_DOWSER                   RequestMethod = 805
	RequestMethod_SFIDA_CAPTURE                  RequestMethod = 806
)

var RequestMethod_name = map[int32]string{
	0:   "METHOD_UNSET",
	1:   "PLAYER_UPDATE",
	2:   "GET_PLAYER",
	4:   "GET_INVENTORY",
	5:   "DOWNLOAD_SETTINGS",
	6:   "DOWNLOAD_ITEM_TEMPLATES",
	7:   "DOWNLOAD_REMOTE_CONFIG_VERSION",
	101: "FORT_SEARCH",
	102: "ENCOUNTER",
	103: "CATCH_POKEMON",
	104: "FORT_DETAILS",
	105: "ITEM_USE",
	106: "GET_MAP_OBJECTS",
	110: "FORT_DEPLOY_POKEMON",
	111: "FORT_RECALL_POKEMON",
	112: "RELEASE_POKEMON",
	113: "USE_ITEM_POTION",
	114: "USE_ITEM_CAPTURE",
	115: "USE_ITEM_FLEE",
	116: "USE_ITEM_REVIVE",
	117: "TRADE_SEARCH",
	118: "TRADE_OFFER",
	119: "TRADE_RESPONSE",
	120: "TRADE_RESULT",
	121: "GET_PLAYER_PROFILE",
	122: "GET_ITEM_PACK",
	123: "BUY_ITEM_PACK",
	124: "BUY_GEM_PACK",
	125: "EVOLVE_POKEMON",
	126: "GET_HATCHED_EGGS",
	127: "ENCOUNTER_TUTORIAL_COMPLETE",
	128: "LEVEL_UP_REWARDS",
	129: "CHECK_AWARDED_BADGES",
	133: "USE_ITEM_GYM",
	134: "GET_GYM_DETAILS",
	135: "START_GYM_BATTLE",
	136: "ATTACK_GYM",
	137: "RECYCLE_INVENTORY_ITEM",
	138: "COLLECT_DAILY_BONUS",
	139: "USE_ITEM_XP_BOOST",
	140: "USE_ITEM_EGG_INCUBATOR",
	141: "USE_INCENSE",
	142: "GET_INCENSE_POKEMON",
	143: "INCENSE_ENCOUNTER",
	144: "ADD_FORT_MODIFIER",
	145: "DISK_ENCOUNTER",
	146: "COLLECT_DAILY_DEFENDER_BONUS",
	147: "UPGRADE_POKEMON",
	148: "SET_FAVORITE_POKEMON",
	149: "NICKNAME_POKEMON",
	150: "EQUIP_BADGE",
	151: "SET_CONTACT_SETTINGS",
	300: "GET_ASSET_DIGEST",
	301: "GET_DOWNLOAD_URLS",
	401: "GET_SUGGESTED_CODENAMES",
	402: "CHECK_CODENAME_AVAILABLE",
	403: "CLAIM_CODENAME",
	404: "SET_AVATAR",
	405: "SET_PLAYER_TEAM",
	406: "MARK_TUTORIAL_COMPLETE",
	500: "LOAD_SPAWN_POINTS",
	666: "ECHO",
	700: "DEBUG_UPDATE_INVENTORY",
	701: "DEBUG_DELETE_PLAYER",
	800: "SFIDA_REGISTRATION",
	801: "SFIDA_ACTION_LOG",
	802: "SFIDA_CERTIFICATION",
	803: "SFIDA_UPDATE",
	804: "SFIDA_ACTION",
	805: "SFIDA_DOWSER",
	806: "SFIDA_CAPTURE",
}
var RequestMethod_value = map[string]int32{
	"METHOD_UNSET":                   0,
	"PLAYER_UPDATE":                  1,
	"GET_PLAYER":                     2,
	"GET_INVENTORY":                  4,
	"DOWNLOAD_SETTINGS":              5,
	"DOWNLOAD_ITEM_TEMPLATES":        6,
	"DOWNLOAD_REMOTE_CONFIG_VERSION": 7,
	"FORT_SEARCH":                    101,
	"ENCOUNTER":                      102,
	"CATCH_POKEMON":                  103,
	"FORT_DETAILS":                   104,
	"ITEM_USE":                       105,
	"GET_MAP_OBJECTS":                106,
	"FORT_DEPLOY_POKEMON":            110,
	"FORT_RECALL_POKEMON":            111,
	"RELEASE_POKEMON":                112,
	"USE_ITEM_POTION":                113,
	"USE_ITEM_CAPTURE":               114,
	"USE_ITEM_FLEE":                  115,
	"USE_ITEM_REVIVE":                116,
	"TRADE_SEARCH":                   117,
	"TRADE_OFFER":                    118,
	"TRADE_RESPONSE":                 119,
	"TRADE_RESULT":                   120,
	"GET_PLAYER_PROFILE":             121,
	"GET_ITEM_PACK":                  122,
	"BUY_ITEM_PACK":                  123,
	"BUY_GEM_PACK":                   124,
	"EVOLVE_POKEMON":                 125,
	"GET_HATCHED_EGGS":               126,
	"ENCOUNTER_TUTORIAL_COMPLETE":    127,
	"LEVEL_UP_REWARDS":               128,
	"CHECK_AWARDED_BADGES":           129,
	"USE_ITEM_GYM":                   133,
	"GET_GYM_DETAILS":                134,
	"START_GYM_BATTLE":               135,
	"ATTACK_GYM":                     136,
	"RECYCLE_INVENTORY_ITEM":         137,
	"COLLECT_DAILY_BONUS":            138,
	"USE_ITEM_XP_BOOST":              139,
	"USE_ITEM_EGG_INCUBATOR":         140,
	"USE_INCENSE":                    141,
	"GET_INCENSE_POKEMON":            142,
	"INCENSE_ENCOUNTER":              143,
	"ADD_FORT_MODIFIER":              144,
	"DISK_ENCOUNTER":                 145,
	"COLLECT_DAILY_DEFENDER_BONUS":   146,
	"UPGRADE_POKEMON":                147,
	"SET_FAVORITE_POKEMON":           148,
	"NICKNAME_POKEMON":               149,
	"EQUIP_BADGE":                    150,
	"SET_CONTACT_SETTINGS":           151,
	"GET_ASSET_DIGEST":               300,
	"GET_DOWNLOAD_URLS":              301,
	"GET_SUGGESTED_CODENAMES":        401,
	"CHECK_CODENAME_AVAILABLE":       402,
	"CLAIM_CODENAME":                 403,
	"SET_AVATAR":                     404,
	"SET_PLAYER_TEAM":                405,
	"MARK_TUTORIAL_COMPLETE":         406,
	"LOAD_SPAWN_POINTS":              500,
	"ECHO":                           666,
	"DEBUG_UPDATE_INVENTORY": 700,
	"DEBUG_DELETE_PLAYER":    701,
	"SFIDA_REGISTRATION":     800,
	"SFIDA_ACTION_LOG":       801,
	"SFIDA_CERTIFICATION":    802,
	"SFIDA_UPDATE":           803,
	"SFIDA_ACTION":           804,
	"SFIDA_DOWSER":           805,
	"SFIDA_CAPTURE":          806,
}

func (x RequestMethod) Enum() *RequestMethod {
	p := new(RequestMethod)
	*p = x
	return p
}
func (x RequestMethod) String() string {
	return proto.EnumName(RequestMethod_name, int32(x))
}
func (x *RequestMethod) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(RequestMethod_value, data, "RequestMethod")
	if err != nil {
		return err
	}
	*x = RequestMethod(value)
	return nil
}
func (RequestMethod) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type PokemonMove int32

const (
	PokemonMove_MOVE_UNSET               PokemonMove = 0
	PokemonMove_THUNDER_SHOCK            PokemonMove = 1
	PokemonMove_QUICK_ATTACK             PokemonMove = 2
	PokemonMove_SCRATCH                  PokemonMove = 3
	PokemonMove_EMBER                    PokemonMove = 4
	PokemonMove_VINE_WHIP                PokemonMove = 5
	PokemonMove_TACKLE                   PokemonMove = 6
	PokemonMove_RAZOR_LEAF               PokemonMove = 7
	PokemonMove_TAKE_DOWN                PokemonMove = 8
	PokemonMove_WATER_GUN                PokemonMove = 9
	PokemonMove_BITE                     PokemonMove = 10
	PokemonMove_POUND                    PokemonMove = 11
	PokemonMove_DOUBLE_SLAP              PokemonMove = 12
	PokemonMove_WRAP                     PokemonMove = 13
	PokemonMove_HYPER_BEAM               PokemonMove = 14
	PokemonMove_LICK                     PokemonMove = 15
	PokemonMove_DARK_PULSE               PokemonMove = 16
	PokemonMove_SMOG                     PokemonMove = 17
	PokemonMove_SLUDGE                   PokemonMove = 18
	PokemonMove_METAL_CLAW               PokemonMove = 19
	PokemonMove_VICE_GRIP                PokemonMove = 20
	PokemonMove_FLAME_WHEEL              PokemonMove = 21
	PokemonMove_MEGAHORN                 PokemonMove = 22
	PokemonMove_WING_ATTACK              PokemonMove = 23
	PokemonMove_FLAMETHROWER             PokemonMove = 24
	PokemonMove_SUCKER_PUNCH             PokemonMove = 25
	PokemonMove_DIG                      PokemonMove = 26
	PokemonMove_LOW_KICK                 PokemonMove = 27
	PokemonMove_CROSS_CHOP               PokemonMove = 28
	PokemonMove_PSYCHO_CUT               PokemonMove = 29
	PokemonMove_PSYBEAM                  PokemonMove = 30
	PokemonMove_EARTHQUAKE               PokemonMove = 31
	PokemonMove_STONE_EDGE               PokemonMove = 32
	PokemonMove_ICE_PUNCH                PokemonMove = 33
	PokemonMove_HEART_STAMP              PokemonMove = 34
	PokemonMove_DISCHARGE                PokemonMove = 35
	PokemonMove_FLASH_CANNON             PokemonMove = 36
	PokemonMove_PECK                     PokemonMove = 37
	PokemonMove_DRILL_PECK               PokemonMove = 38
	PokemonMove_ICE_BEAM                 PokemonMove = 39
	PokemonMove_BLIZZARD                 PokemonMove = 40
	PokemonMove_AIR_SLASH                PokemonMove = 41
	PokemonMove_HEAT_WAVE                PokemonMove = 42
	PokemonMove_TWINEEDLE                PokemonMove = 43
	PokemonMove_POISON_JAB               PokemonMove = 44
	PokemonMove_AERIAL_ACE               PokemonMove = 45
	PokemonMove_DRILL_RUN                PokemonMove = 46
	PokemonMove_PETAL_BLIZZARD           PokemonMove = 47
	PokemonMove_MEGA_DRAIN               PokemonMove = 48
	PokemonMove_BUG_BUZZ                 PokemonMove = 49
	PokemonMove_POISON_FANG              PokemonMove = 50
	PokemonMove_NIGHT_SLASH              PokemonMove = 51
	PokemonMove_SLASH                    PokemonMove = 52
	PokemonMove_BUBBLE_BEAM              PokemonMove = 53
	PokemonMove_SUBMISSION               PokemonMove = 54
	PokemonMove_KARATE_CHOP              PokemonMove = 55
	PokemonMove_LOW_SWEEP                PokemonMove = 56
	PokemonMove_AQUA_JET                 PokemonMove = 57
	PokemonMove_AQUA_TAIL                PokemonMove = 58
	PokemonMove_SEED_BOMB                PokemonMove = 59
	PokemonMove_PSYSHOCK                 PokemonMove = 60
	PokemonMove_ROCK_THROW               PokemonMove = 61
	PokemonMove_ANCIENT_POWER            PokemonMove = 62
	PokemonMove_ROCK_TOMB                PokemonMove = 63
	PokemonMove_ROCK_SLIDE               PokemonMove = 64
	PokemonMove_POWER_GEM                PokemonMove = 65
	PokemonMove_SHADOW_SNEAK             PokemonMove = 66
	PokemonMove_SHADOW_PUNCH             PokemonMove = 67
	PokemonMove_SHADOW_CLAW              PokemonMove = 68
	PokemonMove_OMINOUS_WIND             PokemonMove = 69
	PokemonMove_SHADOW_BALL              PokemonMove = 70
	PokemonMove_BULLET_PUNCH             PokemonMove = 71
	PokemonMove_MAGNET_BOMB              PokemonMove = 72
	PokemonMove_STEEL_WING               PokemonMove = 73
	PokemonMove_IRON_HEAD                PokemonMove = 74
	PokemonMove_PARABOLIC_CHARGE         PokemonMove = 75
	PokemonMove_SPARK                    PokemonMove = 76
	PokemonMove_THUNDER_PUNCH            PokemonMove = 77
	PokemonMove_THUNDER                  PokemonMove = 78
	PokemonMove_THUNDERBOLT              PokemonMove = 79
	PokemonMove_TWISTER                  PokemonMove = 80
	PokemonMove_DRAGON_BREATH            PokemonMove = 81
	PokemonMove_DRAGON_PULSE             PokemonMove = 82
	PokemonMove_DRAGON_CLAW              PokemonMove = 83
	PokemonMove_DISARMING_VOICE          PokemonMove = 84
	PokemonMove_DRAINING_KISS            PokemonMove = 85
	PokemonMove_DAZZLING_GLEAM           PokemonMove = 86
	PokemonMove_MOONBLAST                PokemonMove = 87
	PokemonMove_PLAY_ROUGH               PokemonMove = 88
	PokemonMove_CROSS_POISON             PokemonMove = 89
	PokemonMove_SLUDGE_BOMB              PokemonMove = 90
	PokemonMove_SLUDGE_WAVE              PokemonMove = 91
	PokemonMove_GUNK_SHOT                PokemonMove = 92
	PokemonMove_MUD_SHOT                 PokemonMove = 93
	PokemonMove_BONE_CLUB                PokemonMove = 94
	PokemonMove_BULLDOZE                 PokemonMove = 95
	PokemonMove_MUD_BOMB                 PokemonMove = 96
	PokemonMove_FURY_CUTTER              PokemonMove = 97
	PokemonMove_BUG_BITE                 PokemonMove = 98
	PokemonMove_SIGNAL_BEAM              PokemonMove = 99
	PokemonMove_X_SCISSOR                PokemonMove = 100
	PokemonMove_FLAME_CHARGE             PokemonMove = 101
	PokemonMove_FLAME_BURST              PokemonMove = 102
	PokemonMove_FIRE_BLAST               PokemonMove = 103
	PokemonMove_BRINE                    PokemonMove = 104
	PokemonMove_WATER_PULSE              PokemonMove = 105
	PokemonMove_SCALD                    PokemonMove = 106
	PokemonMove_HYDRO_PUMP               PokemonMove = 107
	PokemonMove_PSYCHIC                  PokemonMove = 108
	PokemonMove_PSYSTRIKE                PokemonMove = 109
	PokemonMove_ICE_SHARD                PokemonMove = 110
	PokemonMove_ICY_WIND                 PokemonMove = 111
	PokemonMove_FROST_BREATH             PokemonMove = 112
	PokemonMove_ABSORB                   PokemonMove = 113
	PokemonMove_GIGA_DRAIN               PokemonMove = 114
	PokemonMove_FIRE_PUNCH               PokemonMove = 115
	PokemonMove_SOLAR_BEAM               PokemonMove = 116
	PokemonMove_LEAF_BLADE               PokemonMove = 117
	PokemonMove_POWER_WHIP               PokemonMove = 118
	PokemonMove_SPLASH                   PokemonMove = 119
	PokemonMove_ACID                     PokemonMove = 120
	PokemonMove_AIR_CUTTER               PokemonMove = 121
	PokemonMove_HURRICANE                PokemonMove = 122
	PokemonMove_BRICK_BREAK              PokemonMove = 123
	PokemonMove_CUT                      PokemonMove = 124
	PokemonMove_SWIFT                    PokemonMove = 125
	PokemonMove_HORN_ATTACK              PokemonMove = 126
	PokemonMove_STOMP                    PokemonMove = 127
	PokemonMove_HEADBUTT                 PokemonMove = 128
	PokemonMove_HYPER_FANG               PokemonMove = 129
	PokemonMove_SLAM                     PokemonMove = 130
	PokemonMove_BODY_SLAM                PokemonMove = 131
	PokemonMove_REST                     PokemonMove = 132
	PokemonMove_STRUGGLE                 PokemonMove = 133
	PokemonMove_SCALD_BLASTOISE          PokemonMove = 134
	PokemonMove_HYDRO_PUMP_BLASTOISE     PokemonMove = 135
	PokemonMove_WRAP_GREEN               PokemonMove = 136
	PokemonMove_WRAP_PINK                PokemonMove = 137
	PokemonMove_FURY_CUTTER_FAST         PokemonMove = 200
	PokemonMove_BUG_BITE_FAST            PokemonMove = 201
	PokemonMove_BITE_FAST                PokemonMove = 202
	PokemonMove_SUCKER_PUNCH_FAST        PokemonMove = 203
	PokemonMove_DRAGON_BREATH_FAST       PokemonMove = 204
	PokemonMove_THUNDER_SHOCK_FAST       PokemonMove = 205
	PokemonMove_SPARK_FAST               PokemonMove = 206
	PokemonMove_LOW_KICK_FAST            PokemonMove = 207
	PokemonMove_KARATE_CHOP_FAST         PokemonMove = 208
	PokemonMove_EMBER_FAST               PokemonMove = 209
	PokemonMove_WING_ATTACK_FAST         PokemonMove = 210
	PokemonMove_PECK_FAST                PokemonMove = 211
	PokemonMove_LICK_FAST                PokemonMove = 212
	PokemonMove_SHADOW_CLAW_FAST         PokemonMove = 213
	PokemonMove_VINE_WHIP_FAST           PokemonMove = 214
	PokemonMove_RAZOR_LEAF_FAST          PokemonMove = 215
	PokemonMove_MUD_SHOT_FAST            PokemonMove = 216
	PokemonMove_ICE_SHARD_FAST           PokemonMove = 217
	PokemonMove_FROST_BREATH_FAST        PokemonMove = 218
	PokemonMove_QUICK_ATTACK_FAST        PokemonMove = 219
	PokemonMove_SCRATCH_FAST             PokemonMove = 220
	PokemonMove_TACKLE_FAST              PokemonMove = 221
	PokemonMove_POUND_FAST               PokemonMove = 222
	PokemonMove_CUT_FAST                 PokemonMove = 223
	PokemonMove_POISON_JAB_FAST          PokemonMove = 224
	PokemonMove_ACID_FAST                PokemonMove = 225
	PokemonMove_PSYCHO_CUT_FAST          PokemonMove = 226
	PokemonMove_ROCK_THROW_FAST          PokemonMove = 227
	PokemonMove_METAL_CLAW_FAST          PokemonMove = 228
	PokemonMove_BULLET_PUNCH_FAST        PokemonMove = 229
	PokemonMove_WATER_GUN_FAST           PokemonMove = 230
	PokemonMove_SPLASH_FAST              PokemonMove = 231
	PokemonMove_WATER_GUN_FAST_BLASTOISE PokemonMove = 232
	PokemonMove_MUD_SLAP_FAST            PokemonMove = 233
	PokemonMove_ZEN_HEADBUTT_FAST        PokemonMove = 234
	PokemonMove_CONFUSION_FAST           PokemonMove = 235
	PokemonMove_POISON_STING_FAST        PokemonMove = 236
	PokemonMove_BUBBLE_FAST              PokemonMove = 237
	PokemonMove_FEINT_ATTACK_FAST        PokemonMove = 238
	PokemonMove_STEEL_WING_FAST          PokemonMove = 239
	PokemonMove_FIRE_FANG_FAST           PokemonMove = 240
	PokemonMove_ROCK_SMASH_FAST          PokemonMove = 241
)

var PokemonMove_name = map[int32]string{
	0:   "MOVE_UNSET",
	1:   "THUNDER_SHOCK",
	2:   "QUICK_ATTACK",
	3:   "SCRATCH",
	4:   "EMBER",
	5:   "VINE_WHIP",
	6:   "TACKLE",
	7:   "RAZOR_LEAF",
	8:   "TAKE_DOWN",
	9:   "WATER_GUN",
	10:  "BITE",
	11:  "POUND",
	12:  "DOUBLE_SLAP",
	13:  "WRAP",
	14:  "HYPER_BEAM",
	15:  "LICK",
	16:  "DARK_PULSE",
	17:  "SMOG",
	18:  "SLUDGE",
	19:  "METAL_CLAW",
	20:  "VICE_GRIP",
	21:  "FLAME_WHEEL",
	22:  "MEGAHORN",
	23:  "WING_ATTACK",
	24:  "FLAMETHROWER",
	25:  "SUCKER_PUNCH",
	26:  "DIG",
	27:  "LOW_KICK",
	28:  "CROSS_CHOP",
	29:  "PSYCHO_CUT",
	30:  "PSYBEAM",
	31:  "EARTHQUAKE",
	32:  "STONE_EDGE",
	33:  "ICE_PUNCH",
	34:  "HEART_STAMP",
	35:  "DISCHARGE",
	36:  "FLASH_CANNON",
	37:  "PECK",
	38:  "DRILL_PECK",
	39:  "ICE_BEAM",
	40:  "BLIZZARD",
	41:  "AIR_SLASH",
	42:  "HEAT_WAVE",
	43:  "TWINEEDLE",
	44:  "POISON_JAB",
	45:  "AERIAL_ACE",
	46:  "DRILL_RUN",
	47:  "PETAL_BLIZZARD",
	48:  "MEGA_DRAIN",
	49:  "BUG_BUZZ",
	50:  "POISON_FANG",
	51:  "NIGHT_SLASH",
	52:  "SLASH",
	53:  "BUBBLE_BEAM",
	54:  "SUBMISSION",
	55:  "KARATE_CHOP",
	56:  "LOW_SWEEP",
	57:  "AQUA_JET",
	58:  "AQUA_TAIL",
	59:  "SEED_BOMB",
	60:  "PSYSHOCK",
	61:  "ROCK_THROW",
	62:  "ANCIENT_POWER",
	63:  "ROCK_TOMB",
	64:  "ROCK_SLIDE",
	65:  "POWER_GEM",
	66:  "SHADOW_SNEAK",
	67:  "SHADOW_PUNCH",
	68:  "SHADOW_CLAW",
	69:  "OMINOUS_WIND",
	70:  "SHADOW_BALL",
	71:  "BULLET_PUNCH",
	72:  "MAGNET_BOMB",
	73:  "STEEL_WING",
	74:  "IRON_HEAD",
	75:  "PARABOLIC_CHARGE",
	76:  "SPARK",
	77:  "THUNDER_PUNCH",
	78:  "THUNDER",
	79:  "THUNDERBOLT",
	80:  "TWISTER",
	81:  "DRAGON_BREATH",
	82:  "DRAGON_PULSE",
	83:  "DRAGON_CLAW",
	84:  "DISARMING_VOICE",
	85:  "DRAINING_KISS",
	86:  "DAZZLING_GLEAM",
	87:  "MOONBLAST",
	88:  "PLAY_ROUGH",
	89:  "CROSS_POISON",
	90:  "SLUDGE_BOMB",
	91:  "SLUDGE_WAVE",
	92:  "GUNK_SHOT",
	93:  "MUD_SHOT",
	94:  "BONE_CLUB",
	95:  "BULLDOZE",
	96:  "MUD_BOMB",
	97:  "FURY_CUTTER",
	98:  "BUG_BITE",
	99:  "SIGNAL_BEAM",
	100: "X_SCISSOR",
	101: "FLAME_CHARGE",
	102: "FLAME_BURST",
	103: "FIRE_BLAST",
	104: "BRINE",
	105: "WATER_PULSE",
	106: "SCALD",
	107: "HYDRO_PUMP",
	108: "PSYCHIC",
	109: "PSYSTRIKE",
	110: "ICE_SHARD",
	111: "ICY_WIND",
	112: "FROST_BREATH",
	113: "ABSORB",
	114: "GIGA_DRAIN",
	115: "FIRE_PUNCH",
	116: "SOLAR_BEAM",
	117: "LEAF_BLADE",
	118: "POWER_WHIP",
	119: "SPLASH",
	120: "ACID",
	121: "AIR_CUTTER",
	122: "HURRICANE",
	123: "BRICK_BREAK",
	124: "CUT",
	125: "SWIFT",
	126: "HORN_ATTACK",
	127: "STOMP",
	128: "HEADBUTT",
	129: "HYPER_FANG",
	130: "SLAM",
	131: "BODY_SLAM",
	132: "REST",
	133: "STRUGGLE",
	134: "SCALD_BLASTOISE",
	135: "HYDRO_PUMP_BLASTOISE",
	136: "WRAP_GREEN",
	137: "WRAP_PINK",
	200: "FURY_CUTTER_FAST",
	201: "BUG_BITE_FAST",
	202: "BITE_FAST",
	203: "SUCKER_PUNCH_FAST",
	204: "DRAGON_BREATH_FAST",
	205: "THUNDER_SHOCK_FAST",
	206: "SPARK_FAST",
	207: "LOW_KICK_FAST",
	208: "KARATE_CHOP_FAST",
	209: "EMBER_FAST",
	210: "WING_ATTACK_FAST",
	211: "PECK_FAST",
	212: "LICK_FAST",
	213: "SHADOW_CLAW_FAST",
	214: "VINE_WHIP_FAST",
	215: "RAZOR_LEAF_FAST",
	216: "MUD_SHOT_FAST",
	217: "ICE_SHARD_FAST",
	218: "FROST_BREATH_FAST",
	219: "QUICK_ATTACK_FAST",
	220: "SCRATCH_FAST",
	221: "TACKLE_FAST",
	222: "POUND_FAST",
	223: "CUT_FAST",
	224: "POISON_JAB_FAST",
	225: "ACID_FAST",
	226: "PSYCHO_CUT_FAST",
	227: "ROCK_THROW_FAST",
	228: "METAL_CLAW_FAST",
	229: "BULLET_PUNCH_FAST",
	230: "WATER_GUN_FAST",
	231: "SPLASH_FAST",
	232: "WATER_GUN_FAST_BLASTOISE",
	233: "MUD_SLAP_FAST",
	234: "ZEN_HEADBUTT_FAST",
	235: "CONFUSION_FAST",
	236: "POISON_STING_FAST",
	237: "BUBBLE_FAST",
	238: "FEINT_ATTACK_FAST",
	239: "STEEL_WING_FAST",
	240: "FIRE_FANG_FAST",
	241: "ROCK_SMASH_FAST",
}
var PokemonMove_value = map[string]int32{
	"MOVE_UNSET":               0,
	"THUNDER_SHOCK":            1,
	"QUICK_ATTACK":             2,
	"SCRATCH":                  3,
	"EMBER":                    4,
	"VINE_WHIP":                5,
	"TACKLE":                   6,
	"RAZOR_LEAF":               7,
	"TAKE_DOWN":                8,
	"WATER_GUN":                9,
	"BITE":                     10,
	"POUND":                    11,
	"DOUBLE_SLAP":              12,
	"WRAP":                     13,
	"HYPER_BEAM":               14,
	"LICK":                     15,
	"DARK_PULSE":               16,
	"SMOG":                     17,
	"SLUDGE":                   18,
	"METAL_CLAW":               19,
	"VICE_GRIP":                20,
	"FLAME_WHEEL":              21,
	"MEGAHORN":                 22,
	"WING_ATTACK":              23,
	"FLAMETHROWER":             24,
	"SUCKER_PUNCH":             25,
	"DIG":                      26,
	"LOW_KICK":                 27,
	"CROSS_CHOP":               28,
	"PSYCHO_CUT":               29,
	"PSYBEAM":                  30,
	"EARTHQUAKE":               31,
	"STONE_EDGE":               32,
	"ICE_PUNCH":                33,
	"HEART_STAMP":              34,
	"DISCHARGE":                35,
	"FLASH_CANNON":             36,
	"PECK":                     37,
	"DRILL_PECK":               38,
	"ICE_BEAM":                 39,
	"BLIZZARD":                 40,
	"AIR_SLASH":                41,
	"HEAT_WAVE":                42,
	"TWINEEDLE":                43,
	"POISON_JAB":               44,
	"AERIAL_ACE":               45,
	"DRILL_RUN":                46,
	"PETAL_BLIZZARD":           47,
	"MEGA_DRAIN":               48,
	"BUG_BUZZ":                 49,
	"POISON_FANG":              50,
	"NIGHT_SLASH":              51,
	"SLASH":                    52,
	"BUBBLE_BEAM":              53,
	"SUBMISSION":               54,
	"KARATE_CHOP":              55,
	"LOW_SWEEP":                56,
	"AQUA_JET":                 57,
	"AQUA_TAIL":                58,
	"SEED_BOMB":                59,
	"PSYSHOCK":                 60,
	"ROCK_THROW":               61,
	"ANCIENT_POWER":            62,
	"ROCK_TOMB":                63,
	"ROCK_SLIDE":               64,
	"POWER_GEM":                65,
	"SHADOW_SNEAK":             66,
	"SHADOW_PUNCH":             67,
	"SHADOW_CLAW":              68,
	"OMINOUS_WIND":             69,
	"SHADOW_BALL":              70,
	"BULLET_PUNCH":             71,
	"MAGNET_BOMB":              72,
	"STEEL_WING":               73,
	"IRON_HEAD":                74,
	"PARABOLIC_CHARGE":         75,
	"SPARK":                    76,
	"THUNDER_PUNCH":            77,
	"THUNDER":                  78,
	"THUNDERBOLT":              79,
	"TWISTER":                  80,
	"DRAGON_BREATH":            81,
	"DRAGON_PULSE":             82,
	"DRAGON_CLAW":              83,
	"DISARMING_VOICE":          84,
	"DRAINING_KISS":            85,
	"DAZZLING_GLEAM":           86,
	"MOONBLAST":                87,
	"PLAY_ROUGH":               88,
	"CROSS_POISON":             89,
	"SLUDGE_BOMB":              90,
	"SLUDGE_WAVE":              91,
	"GUNK_SHOT":                92,
	"MUD_SHOT":                 93,
	"BONE_CLUB":                94,
	"BULLDOZE":                 95,
	"MUD_BOMB":                 96,
	"FURY_CUTTER":              97,
	"BUG_BITE":                 98,
	"SIGNAL_BEAM":              99,
	"X_SCISSOR":                100,
	"FLAME_CHARGE":             101,
	"FLAME_BURST":              102,
	"FIRE_BLAST":               103,
	"BRINE":                    104,
	"WATER_PULSE":              105,
	"SCALD":                    106,
	"HYDRO_PUMP":               107,
	"PSYCHIC":                  108,
	"PSYSTRIKE":                109,
	"ICE_SHARD":                110,
	"ICY_WIND":                 111,
	"FROST_BREATH":             112,
	"ABSORB":                   113,
	"GIGA_DRAIN":               114,
	"FIRE_PUNCH":               115,
	"SOLAR_BEAM":               116,
	"LEAF_BLADE":               117,
	"POWER_WHIP":               118,
	"SPLASH":                   119,
	"ACID":                     120,
	"AIR_CUTTER":               121,
	"HURRICANE":                122,
	"BRICK_BREAK":              123,
	"CUT":                      124,
	"SWIFT":                    125,
	"HORN_ATTACK":              126,
	"STOMP":                    127,
	"HEADBUTT":                 128,
	"HYPER_FANG":               129,
	"SLAM":                     130,
	"BODY_SLAM":                131,
	"REST":                     132,
	"STRUGGLE":                 133,
	"SCALD_BLASTOISE":          134,
	"HYDRO_PUMP_BLASTOISE":     135,
	"WRAP_GREEN":               136,
	"WRAP_PINK":                137,
	"FURY_CUTTER_FAST":         200,
	"BUG_BITE_FAST":            201,
	"BITE_FAST":                202,
	"SUCKER_PUNCH_FAST":        203,
	"DRAGON_BREATH_FAST":       204,
	"THUNDER_SHOCK_FAST":       205,
	"SPARK_FAST":               206,
	"LOW_KICK_FAST":            207,
	"KARATE_CHOP_FAST":         208,
	"EMBER_FAST":               209,
	"WING_ATTACK_FAST":         210,
	"PECK_FAST":                211,
	"LICK_FAST":                212,
	"SHADOW_CLAW_FAST":         213,
	"VINE_WHIP_FAST":           214,
	"RAZOR_LEAF_FAST":          215,
	"MUD_SHOT_FAST":            216,
	"ICE_SHARD_FAST":           217,
	"FROST_BREATH_FAST":        218,
	"QUICK_ATTACK_FAST":        219,
	"SCRATCH_FAST":             220,
	"TACKLE_FAST":              221,
	"POUND_FAST":               222,
	"CUT_FAST":                 223,
	"POISON_JAB_FAST":          224,
	"ACID_FAST":                225,
	"PSYCHO_CUT_FAST":          226,
	"ROCK_THROW_FAST":          227,
	"METAL_CLAW_FAST":          228,
	"BULLET_PUNCH_FAST":        229,
	"WATER_GUN_FAST":           230,
	"SPLASH_FAST":              231,
	"WATER_GUN_FAST_BLASTOISE": 232,
	"MUD_SLAP_FAST":            233,
	"ZEN_HEADBUTT_FAST":        234,
	"CONFUSION_FAST":           235,
	"POISON_STING_FAST":        236,
	"BUBBLE_FAST":              237,
	"FEINT_ATTACK_FAST":        238,
	"STEEL_WING_FAST":          239,
	"FIRE_FANG_FAST":           240,
	"ROCK_SMASH_FAST":          241,
}

func (x PokemonMove) Enum() *PokemonMove {
	p := new(PokemonMove)
	*p = x
	return p
}
func (x PokemonMove) String() string {
	return proto.EnumName(PokemonMove_name, int32(x))
}
func (x *PokemonMove) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PokemonMove_value, data, "PokemonMove")
	if err != nil {
		return err
	}
	*x = PokemonMove(value)
	return nil
}
func (PokemonMove) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type ItemType int32

const (
	ItemType_ITEM_UNKNOWN                   ItemType = 0
	ItemType_ITEM_POKE_BALL                 ItemType = 1
	ItemType_ITEM_GREAT_BALL                ItemType = 2
	ItemType_ITEM_ULTRA_BALL                ItemType = 3
	ItemType_ITEM_MASTER_BALL               ItemType = 4
	ItemType_ITEM_POTION                    ItemType = 101
	ItemType_ITEM_SUPER_POTION              ItemType = 102
	ItemType_ITEM_HYPER_POTION              ItemType = 103
	ItemType_ITEM_MAX_POTION                ItemType = 104
	ItemType_ITEM_REVIVE                    ItemType = 201
	ItemType_ITEM_MAX_REVIVE                ItemType = 202
	ItemType_ITEM_LUCKY_EGG                 ItemType = 301
	ItemType_ITEM_INCENSE_ORDINARY          ItemType = 401
	ItemType_ITEM_INCENSE_SPICY             ItemType = 402
	ItemType_ITEM_INCENSE_COOL              ItemType = 403
	ItemType_ITEM_INCENSE_FLORAL            ItemType = 404
	ItemType_ITEM_TROY_DISK                 ItemType = 501
	ItemType_ITEM_X_ATTACK                  ItemType = 602
	ItemType_ITEM_X_DEFENSE                 ItemType = 603
	ItemType_ITEM_X_MIRACLE                 ItemType = 604
	ItemType_ITEM_RAZZ_BERRY                ItemType = 701
	ItemType_ITEM_BLUK_BERRY                ItemType = 702
	ItemType_ITEM_NANAB_BERRY               ItemType = 703
	ItemType_ITEM_WEPAR_BERRY               ItemType = 704
	ItemType_ITEM_PINAP_BERRY               ItemType = 705
	ItemType_ITEM_SPECIAL_CAMERA            ItemType = 801
	ItemType_ITEM_INCUBATOR_BASIC_UNLIMITED ItemType = 901
	ItemType_ITEM_INCUBATOR_BASIC           ItemType = 902
	ItemType_ITEM_POKEMON_STORAGE_UPGRADE   ItemType = 1001
	ItemType_ITEM_ITEM_STORAGE_UPGRADE      ItemType = 1002
)

var ItemType_name = map[int32]string{
	0:    "ITEM_UNKNOWN",
	1:    "ITEM_POKE_BALL",
	2:    "ITEM_GREAT_BALL",
	3:    "ITEM_ULTRA_BALL",
	4:    "ITEM_MASTER_BALL",
	101:  "ITEM_POTION",
	102:  "ITEM_SUPER_POTION",
	103:  "ITEM_HYPER_POTION",
	104:  "ITEM_MAX_POTION",
	201:  "ITEM_REVIVE",
	202:  "ITEM_MAX_REVIVE",
	301:  "ITEM_LUCKY_EGG",
	401:  "ITEM_INCENSE_ORDINARY",
	402:  "ITEM_INCENSE_SPICY",
	403:  "ITEM_INCENSE_COOL",
	404:  "ITEM_INCENSE_FLORAL",
	501:  "ITEM_TROY_DISK",
	602:  "ITEM_X_ATTACK",
	603:  "ITEM_X_DEFENSE",
	604:  "ITEM_X_MIRACLE",
	701:  "ITEM_RAZZ_BERRY",
	702:  "ITEM_BLUK_BERRY",
	703:  "ITEM_NANAB_BERRY",
	704:  "ITEM_WEPAR_BERRY",
	705:  "ITEM_PINAP_BERRY",
	801:  "ITEM_SPECIAL_CAMERA",
	901:  "ITEM_INCUBATOR_BASIC_UNLIMITED",
	902:  "ITEM_INCUBATOR_BASIC",
	1001: "ITEM_POKEMON_STORAGE_UPGRADE",
	1002: "ITEM_ITEM_STORAGE_UPGRADE",
}
var ItemType_value = map[string]int32{
	"ITEM_UNKNOWN":                   0,
	"ITEM_POKE_BALL":                 1,
	"ITEM_GREAT_BALL":                2,
	"ITEM_ULTRA_BALL":                3,
	"ITEM_MASTER_BALL":               4,
	"ITEM_POTION":                    101,
	"ITEM_SUPER_POTION":              102,
	"ITEM_HYPER_POTION":              103,
	"ITEM_MAX_POTION":                104,
	"ITEM_REVIVE":                    201,
	"ITEM_MAX_REVIVE":                202,
	"ITEM_LUCKY_EGG":                 301,
	"ITEM_INCENSE_ORDINARY":          401,
	"ITEM_INCENSE_SPICY":             402,
	"ITEM_INCENSE_COOL":              403,
	"ITEM_INCENSE_FLORAL":            404,
	"ITEM_TROY_DISK":                 501,
	"ITEM_X_ATTACK":                  602,
	"ITEM_X_DEFENSE":                 603,
	"ITEM_X_MIRACLE":                 604,
	"ITEM_RAZZ_BERRY":                701,
	"ITEM_BLUK_BERRY":                702,
	"ITEM_NANAB_BERRY":               703,
	"ITEM_WEPAR_BERRY":               704,
	"ITEM_PINAP_BERRY":               705,
	"ITEM_SPECIAL_CAMERA":            801,
	"ITEM_INCUBATOR_BASIC_UNLIMITED": 901,
	"ITEM_INCUBATOR_BASIC":           902,
	"ITEM_POKEMON_STORAGE_UPGRADE":   1001,
	"ITEM_ITEM_STORAGE_UPGRADE":      1002,
}

func (x ItemType) Enum() *ItemType {
	p := new(ItemType)
	*p = x
	return p
}
func (x ItemType) String() string {
	return proto.EnumName(ItemType_name, int32(x))
}
func (x *ItemType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ItemType_value, data, "ItemType")
	if err != nil {
		return err
	}
	*x = ItemType(value)
	return nil
}
func (ItemType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

type InventoryUpgradeType int32

const (
	InventoryUpgradeType_UPGRADE_UNSET            InventoryUpgradeType = 0
	InventoryUpgradeType_INCREASE_ITEM_STORAGE    InventoryUpgradeType = 1
	InventoryUpgradeType_INCREASE_POKEMON_STORAGE InventoryUpgradeType = 2
)

var InventoryUpgradeType_name = map[int32]string{
	0: "UPGRADE_UNSET",
	1: "INCREASE_ITEM_STORAGE",
	2: "INCREASE_POKEMON_STORAGE",
}
var InventoryUpgradeType_value = map[string]int32{
	"UPGRADE_UNSET":            0,
	"INCREASE_ITEM_STORAGE":    1,
	"INCREASE_POKEMON_STORAGE": 2,
}

func (x InventoryUpgradeType) Enum() *InventoryUpgradeType {
	p := new(InventoryUpgradeType)
	*p = x
	return p
}
func (x InventoryUpgradeType) String() string {
	return proto.EnumName(InventoryUpgradeType_name, int32(x))
}
func (x *InventoryUpgradeType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(InventoryUpgradeType_value, data, "InventoryUpgradeType")
	if err != nil {
		return err
	}
	*x = InventoryUpgradeType(value)
	return nil
}
func (InventoryUpgradeType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

type ItemTypeCategory int32

const (
	ItemTypeCategory_ITEM_TYPE_NONE              ItemTypeCategory = 0
	ItemTypeCategory_ITEM_TYPE_POKEBALL          ItemTypeCategory = 1
	ItemTypeCategory_ITEM_TYPE_POTION            ItemTypeCategory = 2
	ItemTypeCategory_ITEM_TYPE_REVIVE            ItemTypeCategory = 3
	ItemTypeCategory_ITEM_TYPE_MAP               ItemTypeCategory = 4
	ItemTypeCategory_ITEM_TYPE_BATTLE            ItemTypeCategory = 5
	ItemTypeCategory_ITEM_TYPE_FOOD              ItemTypeCategory = 6
	ItemTypeCategory_ITEM_TYPE_CAMERA            ItemTypeCategory = 7
	ItemTypeCategory_ITEM_TYPE_DISK              ItemTypeCategory = 8
	ItemTypeCategory_ITEM_TYPE_INCUBATOR         ItemTypeCategory = 9
	ItemTypeCategory_ITEM_TYPE_INCENSE           ItemTypeCategory = 10
	ItemTypeCategory_ITEM_TYPE_XP_BOOST          ItemTypeCategory = 11
	ItemTypeCategory_ITEM_TYPE_INVENTORY_UPGRADE ItemTypeCategory = 12
)

var ItemTypeCategory_name = map[int32]string{
	0:  "ITEM_TYPE_NONE",
	1:  "ITEM_TYPE_POKEBALL",
	2:  "ITEM_TYPE_POTION",
	3:  "ITEM_TYPE_REVIVE",
	4:  "ITEM_TYPE_MAP",
	5:  "ITEM_TYPE_BATTLE",
	6:  "ITEM_TYPE_FOOD",
	7:  "ITEM_TYPE_CAMERA",
	8:  "ITEM_TYPE_DISK",
	9:  "ITEM_TYPE_INCUBATOR",
	10: "ITEM_TYPE_INCENSE",
	11: "ITEM_TYPE_XP_BOOST",
	12: "ITEM_TYPE_INVENTORY_UPGRADE",
}
var ItemTypeCategory_value = map[string]int32{
	"ITEM_TYPE_NONE":              0,
	"ITEM_TYPE_POKEBALL":          1,
	"ITEM_TYPE_POTION":            2,
	"ITEM_TYPE_REVIVE":            3,
	"ITEM_TYPE_MAP":               4,
	"ITEM_TYPE_BATTLE":            5,
	"ITEM_TYPE_FOOD":              6,
	"ITEM_TYPE_CAMERA":            7,
	"ITEM_TYPE_DISK":              8,
	"ITEM_TYPE_INCUBATOR":         9,
	"ITEM_TYPE_INCENSE":           10,
	"ITEM_TYPE_XP_BOOST":          11,
	"ITEM_TYPE_INVENTORY_UPGRADE": 12,
}

func (x ItemTypeCategory) Enum() *ItemTypeCategory {
	p := new(ItemTypeCategory)
	*p = x
	return p
}
func (x ItemTypeCategory) String() string {
	return proto.EnumName(ItemTypeCategory_name, int32(x))
}
func (x *ItemTypeCategory) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ItemTypeCategory_value, data, "ItemTypeCategory")
	if err != nil {
		return err
	}
	*x = ItemTypeCategory(value)
	return nil
}
func (ItemTypeCategory) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

type EggIncubatorType int32

const (
	EggIncubatorType_INCUBATOR_UNSET    EggIncubatorType = 0
	EggIncubatorType_INCUBATOR_DISTANCE EggIncubatorType = 1
)

var EggIncubatorType_name = map[int32]string{
	0: "INCUBATOR_UNSET",
	1: "INCUBATOR_DISTANCE",
}
var EggIncubatorType_value = map[string]int32{
	"INCUBATOR_UNSET":    0,
	"INCUBATOR_DISTANCE": 1,
}

func (x EggIncubatorType) Enum() *EggIncubatorType {
	p := new(EggIncubatorType)
	*p = x
	return p
}
func (x EggIncubatorType) String() string {
	return proto.EnumName(EggIncubatorType_name, int32(x))
}
func (x *EggIncubatorType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EggIncubatorType_value, data, "EggIncubatorType")
	if err != nil {
		return err
	}
	*x = EggIncubatorType(value)
	return nil
}
func (EggIncubatorType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

type PokemonFamilyId int32

const (
	PokemonFamilyId_FAMILY_UNSET      PokemonFamilyId = 0
	PokemonFamilyId_FAMILY_BULBASAUR  PokemonFamilyId = 1
	PokemonFamilyId_FAMILY_CHARMANDER PokemonFamilyId = 4
	PokemonFamilyId_FAMILY_SQUIRTLE   PokemonFamilyId = 7
	PokemonFamilyId_FAMILY_CATERPIE   PokemonFamilyId = 10
	PokemonFamilyId_FAMILY_WEEDLE     PokemonFamilyId = 13
	PokemonFamilyId_FAMILY_PIDGEY     PokemonFamilyId = 16
	PokemonFamilyId_FAMILY_RATTATA    PokemonFamilyId = 19
	PokemonFamilyId_FAMILY_SPEAROW    PokemonFamilyId = 21
	PokemonFamilyId_FAMILY_EKANS      PokemonFamilyId = 23
	PokemonFamilyId_FAMILY_PIKACHU    PokemonFamilyId = 25
	PokemonFamilyId_FAMILY_SANDSHREW  PokemonFamilyId = 27
	PokemonFamilyId_FAMILY_NIDORAN    PokemonFamilyId = 29
	PokemonFamilyId_FAMILY_NIDORAN2   PokemonFamilyId = 32
	PokemonFamilyId_FAMILY_CLEFAIRY   PokemonFamilyId = 35
	PokemonFamilyId_FAMILY_VULPIX     PokemonFamilyId = 37
	PokemonFamilyId_FAMILY_JIGGLYPUFF PokemonFamilyId = 39
	PokemonFamilyId_FAMILY_ZUBAT      PokemonFamilyId = 41
	PokemonFamilyId_FAMILY_ODDISH     PokemonFamilyId = 43
	PokemonFamilyId_FAMILY_PARAS      PokemonFamilyId = 46
	PokemonFamilyId_FAMILY_VENONAT    PokemonFamilyId = 48
	PokemonFamilyId_FAMILY_DIGLETT    PokemonFamilyId = 50
	PokemonFamilyId_FAMILY_MEOWTH     PokemonFamilyId = 52
	PokemonFamilyId_FAMILY_PSYDUCK    PokemonFamilyId = 54
	PokemonFamilyId_FAMILY_MANKEY     PokemonFamilyId = 56
	PokemonFamilyId_FAMILY_GROWLITHE  PokemonFamilyId = 58
	PokemonFamilyId_FAMILY_POLIWAG    PokemonFamilyId = 60
	PokemonFamilyId_FAMILY_ABRA       PokemonFamilyId = 63
	PokemonFamilyId_FAMILY_MACHOP     PokemonFamilyId = 66
	PokemonFamilyId_FAMILY_BELLSPROUT PokemonFamilyId = 69
	PokemonFamilyId_FAMILY_TENTACOOL  PokemonFamilyId = 72
	PokemonFamilyId_FAMILY_GEODUDE    PokemonFamilyId = 74
	PokemonFamilyId_FAMILY_PONYTA     PokemonFamilyId = 77
	PokemonFamilyId_FAMILY_SLOWPOKE   PokemonFamilyId = 79
	PokemonFamilyId_FAMILY_MAGNEMITE  PokemonFamilyId = 81
	PokemonFamilyId_FAMILY_FARFETCHD  PokemonFamilyId = 83
	PokemonFamilyId_FAMILY_DODUO      PokemonFamilyId = 84
	PokemonFamilyId_FAMILY_SEEL       PokemonFamilyId = 86
	PokemonFamilyId_FAMILY_GRIMER     PokemonFamilyId = 88
	PokemonFamilyId_FAMILY_SHELLDER   PokemonFamilyId = 90
	PokemonFamilyId_FAMILY_GASTLY     PokemonFamilyId = 92
	PokemonFamilyId_FAMILY_ONIX       PokemonFamilyId = 95
	PokemonFamilyId_FAMILY_DROWZEE    PokemonFamilyId = 96
	PokemonFamilyId_FAMILY_KRABBY     PokemonFamilyId = 98
	PokemonFamilyId_FAMILY_VOLTORB    PokemonFamilyId = 100
	PokemonFamilyId_FAMILY_EXEGGCUTE  PokemonFamilyId = 102
	PokemonFamilyId_FAMILY_CUBONE     PokemonFamilyId = 104
	PokemonFamilyId_FAMILY_HITMONLEE  PokemonFamilyId = 106
	PokemonFamilyId_FAMILY_HITMONCHAN PokemonFamilyId = 107
	PokemonFamilyId_FAMILY_LICKITUNG  PokemonFamilyId = 108
	PokemonFamilyId_FAMILY_KOFFING    PokemonFamilyId = 109
	PokemonFamilyId_FAMILY_RHYHORN    PokemonFamilyId = 111
	PokemonFamilyId_FAMILY_CHANSEY    PokemonFamilyId = 113
	PokemonFamilyId_FAMILY_TANGELA    PokemonFamilyId = 114
	PokemonFamilyId_FAMILY_KANGASKHAN PokemonFamilyId = 115
	PokemonFamilyId_FAMILY_HORSEA     PokemonFamilyId = 116
	PokemonFamilyId_FAMILY_GOLDEEN    PokemonFamilyId = 118
	PokemonFamilyId_FAMILY_STARYU     PokemonFamilyId = 120
	PokemonFamilyId_FAMILY_MR_MIME    PokemonFamilyId = 122
	PokemonFamilyId_FAMILY_SCYTHER    PokemonFamilyId = 123
	PokemonFamilyId_FAMILY_JYNX       PokemonFamilyId = 124
	PokemonFamilyId_FAMILY_ELECTABUZZ PokemonFamilyId = 125
	PokemonFamilyId_FAMILY_MAGMAR     PokemonFamilyId = 126
	PokemonFamilyId_FAMILY_PINSIR     PokemonFamilyId = 127
	PokemonFamilyId_FAMILY_TAUROS     PokemonFamilyId = 128
	PokemonFamilyId_FAMILY_MAGIKARP   PokemonFamilyId = 129
	PokemonFamilyId_FAMILY_LAPRAS     PokemonFamilyId = 131
	PokemonFamilyId_FAMILY_DITTO      PokemonFamilyId = 132
	PokemonFamilyId_FAMILY_EEVEE      PokemonFamilyId = 133
	PokemonFamilyId_FAMILY_PORYGON    PokemonFamilyId = 137
	PokemonFamilyId_FAMILY_OMANYTE    PokemonFamilyId = 138
	PokemonFamilyId_FAMILY_KABUTO     PokemonFamilyId = 140
	PokemonFamilyId_FAMILY_AERODACTYL PokemonFamilyId = 142
	PokemonFamilyId_FAMILY_SNORLAX    PokemonFamilyId = 143
	PokemonFamilyId_FAMILY_ARTICUNO   PokemonFamilyId = 144
	PokemonFamilyId_FAMILY_ZAPDOS     PokemonFamilyId = 145
	PokemonFamilyId_FAMILY_MOLTRES    PokemonFamilyId = 146
	PokemonFamilyId_FAMILY_DRATINI    PokemonFamilyId = 147
	PokemonFamilyId_FAMILY_MEWTWO     PokemonFamilyId = 150
	PokemonFamilyId_FAMILY_MEW        PokemonFamilyId = 151
)

var PokemonFamilyId_name = map[int32]string{
	0:   "FAMILY_UNSET",
	1:   "FAMILY_BULBASAUR",
	4:   "FAMILY_CHARMANDER",
	7:   "FAMILY_SQUIRTLE",
	10:  "FAMILY_CATERPIE",
	13:  "FAMILY_WEEDLE",
	16:  "FAMILY_PIDGEY",
	19:  "FAMILY_RATTATA",
	21:  "FAMILY_SPEAROW",
	23:  "FAMILY_EKANS",
	25:  "FAMILY_PIKACHU",
	27:  "FAMILY_SANDSHREW",
	29:  "FAMILY_NIDORAN",
	32:  "FAMILY_NIDORAN2",
	35:  "FAMILY_CLEFAIRY",
	37:  "FAMILY_VULPIX",
	39:  "FAMILY_JIGGLYPUFF",
	41:  "FAMILY_ZUBAT",
	43:  "FAMILY_ODDISH",
	46:  "FAMILY_PARAS",
	48:  "FAMILY_VENONAT",
	50:  "FAMILY_DIGLETT",
	52:  "FAMILY_MEOWTH",
	54:  "FAMILY_PSYDUCK",
	56:  "FAMILY_MANKEY",
	58:  "FAMILY_GROWLITHE",
	60:  "FAMILY_POLIWAG",
	63:  "FAMILY_ABRA",
	66:  "FAMILY_MACHOP",
	69:  "FAMILY_BELLSPROUT",
	72:  "FAMILY_TENTACOOL",
	74:  "FAMILY_GEODUDE",
	77:  "FAMILY_PONYTA",
	79:  "FAMILY_SLOWPOKE",
	81:  "FAMILY_MAGNEMITE",
	83:  "FAMILY_FARFETCHD",
	84:  "FAMILY_DODUO",
	86:  "FAMILY_SEEL",
	88:  "FAMILY_GRIMER",
	90:  "FAMILY_SHELLDER",
	92:  "FAMILY_GASTLY",
	95:  "FAMILY_ONIX",
	96:  "FAMILY_DROWZEE",
	98:  "FAMILY_KRABBY",
	100: "FAMILY_VOLTORB",
	102: "FAMILY_EXEGGCUTE",
	104: "FAMILY_CUBONE",
	106: "FAMILY_HITMONLEE",
	107: "FAMILY_HITMONCHAN",
	108: "FAMILY_LICKITUNG",
	109: "FAMILY_KOFFING",
	111: "FAMILY_RHYHORN",
	113: "FAMILY_CHANSEY",
	114: "FAMILY_TANGELA",
	115: "FAMILY_KANGASKHAN",
	116: "FAMILY_HORSEA",
	118: "FAMILY_GOLDEEN",
	120: "FAMILY_STARYU",
	122: "FAMILY_MR_MIME",
	123: "FAMILY_SCYTHER",
	124: "FAMILY_JYNX",
	125: "FAMILY_ELECTABUZZ",
	126: "FAMILY_MAGMAR",
	127: "FAMILY_PINSIR",
	128: "FAMILY_TAUROS",
	129: "FAMILY_MAGIKARP",
	131: "FAMILY_LAPRAS",
	132: "FAMILY_DITTO",
	133: "FAMILY_EEVEE",
	137: "FAMILY_PORYGON",
	138: "FAMILY_OMANYTE",
	140: "FAMILY_KABUTO",
	142: "FAMILY_AERODACTYL",
	143: "FAMILY_SNORLAX",
	144: "FAMILY_ARTICUNO",
	145: "FAMILY_ZAPDOS",
	146: "FAMILY_MOLTRES",
	147: "FAMILY_DRATINI",
	150: "FAMILY_MEWTWO",
	151: "FAMILY_MEW",
}
var PokemonFamilyId_value = map[string]int32{
	"FAMILY_UNSET":      0,
	"FAMILY_BULBASAUR":  1,
	"FAMILY_CHARMANDER": 4,
	"FAMILY_SQUIRTLE":   7,
	"FAMILY_CATERPIE":   10,
	"FAMILY_WEEDLE":     13,
	"FAMILY_PIDGEY":     16,
	"FAMILY_RATTATA":    19,
	"FAMILY_SPEAROW":    21,
	"FAMILY_EKANS":      23,
	"FAMILY_PIKACHU":    25,
	"FAMILY_SANDSHREW":  27,
	"FAMILY_NIDORAN":    29,
	"FAMILY_NIDORAN2":   32,
	"FAMILY_CLEFAIRY":   35,
	"FAMILY_VULPIX":     37,
	"FAMILY_JIGGLYPUFF": 39,
	"FAMILY_ZUBAT":      41,
	"FAMILY_ODDISH":     43,
	"FAMILY_PARAS":      46,
	"FAMILY_VENONAT":    48,
	"FAMILY_DIGLETT":    50,
	"FAMILY_MEOWTH":     52,
	"FAMILY_PSYDUCK":    54,
	"FAMILY_MANKEY":     56,
	"FAMILY_GROWLITHE":  58,
	"FAMILY_POLIWAG":    60,
	"FAMILY_ABRA":       63,
	"FAMILY_MACHOP":     66,
	"FAMILY_BELLSPROUT": 69,
	"FAMILY_TENTACOOL":  72,
	"FAMILY_GEODUDE":    74,
	"FAMILY_PONYTA":     77,
	"FAMILY_SLOWPOKE":   79,
	"FAMILY_MAGNEMITE":  81,
	"FAMILY_FARFETCHD":  83,
	"FAMILY_DODUO":      84,
	"FAMILY_SEEL":       86,
	"FAMILY_GRIMER":     88,
	"FAMILY_SHELLDER":   90,
	"FAMILY_GASTLY":     92,
	"FAMILY_ONIX":       95,
	"FAMILY_DROWZEE":    96,
	"FAMILY_KRABBY":     98,
	"FAMILY_VOLTORB":    100,
	"FAMILY_EXEGGCUTE":  102,
	"FAMILY_CUBONE":     104,
	"FAMILY_HITMONLEE":  106,
	"FAMILY_HITMONCHAN": 107,
	"FAMILY_LICKITUNG":  108,
	"FAMILY_KOFFING":    109,
	"FAMILY_RHYHORN":    111,
	"FAMILY_CHANSEY":    113,
	"FAMILY_TANGELA":    114,
	"FAMILY_KANGASKHAN": 115,
	"FAMILY_HORSEA":     116,
	"FAMILY_GOLDEEN":    118,
	"FAMILY_STARYU":     120,
	"FAMILY_MR_MIME":    122,
	"FAMILY_SCYTHER":    123,
	"FAMILY_JYNX":       124,
	"FAMILY_ELECTABUZZ": 125,
	"FAMILY_MAGMAR":     126,
	"FAMILY_PINSIR":     127,
	"FAMILY_TAUROS":     128,
	"FAMILY_MAGIKARP":   129,
	"FAMILY_LAPRAS":     131,
	"FAMILY_DITTO":      132,
	"FAMILY_EEVEE":      133,
	"FAMILY_PORYGON":    137,
	"FAMILY_OMANYTE":    138,
	"FAMILY_KABUTO":     140,
	"FAMILY_AERODACTYL": 142,
	"FAMILY_SNORLAX":    143,
	"FAMILY_ARTICUNO":   144,
	"FAMILY_ZAPDOS":     145,
	"FAMILY_MOLTRES":    146,
	"FAMILY_DRATINI":    147,
	"FAMILY_MEWTWO":     150,
	"FAMILY_MEW":        151,
}

func (x PokemonFamilyId) Enum() *PokemonFamilyId {
	p := new(PokemonFamilyId)
	*p = x
	return p
}
func (x PokemonFamilyId) String() string {
	return proto.EnumName(PokemonFamilyId_name, int32(x))
}
func (x *PokemonFamilyId) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PokemonFamilyId_value, data, "PokemonFamilyId")
	if err != nil {
		return err
	}
	*x = PokemonFamilyId(value)
	return nil
}
func (PokemonFamilyId) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

type MapObjectsStatus int32

const (
	MapObjectsStatus_UNSET_STATUS   MapObjectsStatus = 0
	MapObjectsStatus_SUCCESS        MapObjectsStatus = 1
	MapObjectsStatus_LOCATION_UNSET MapObjectsStatus = 2
)

var MapObjectsStatus_name = map[int32]string{
	0: "UNSET_STATUS",
	1: "SUCCESS",
	2: "LOCATION_UNSET",
}
var MapObjectsStatus_value = map[string]int32{
	"UNSET_STATUS":   0,
	"SUCCESS":        1,
	"LOCATION_UNSET": 2,
}

func (x MapObjectsStatus) Enum() *MapObjectsStatus {
	p := new(MapObjectsStatus)
	*p = x
	return p
}
func (x MapObjectsStatus) String() string {
	return proto.EnumName(MapObjectsStatus_name, int32(x))
}
func (x *MapObjectsStatus) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(MapObjectsStatus_value, data, "MapObjectsStatus")
	if err != nil {
		return err
	}
	*x = MapObjectsStatus(value)
	return nil
}
func (MapObjectsStatus) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

type FortType int32

const (
	FortType_GYM        FortType = 0
	FortType_CHECKPOINT FortType = 1
)

var FortType_name = map[int32]string{
	0: "GYM",
	1: "CHECKPOINT",
}
var FortType_value = map[string]int32{
	"GYM":        0,
	"CHECKPOINT": 1,
}

func (x FortType) Enum() *FortType {
	p := new(FortType)
	*p = x
	return p
}
func (x FortType) String() string {
	return proto.EnumName(FortType_name, int32(x))
}
func (x *FortType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(FortType_value, data, "FortType")
	if err != nil {
		return err
	}
	*x = FortType(value)
	return nil
}
func (FortType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

type PokemonId int32

const (
	PokemonId_MISSINGNO      PokemonId = 0
	PokemonId_BULBASAUR      PokemonId = 1
	PokemonId_IVYSAUR        PokemonId = 2
	PokemonId_VENUSAUR       PokemonId = 3
	PokemonId_CHARMENDER     PokemonId = 4
	PokemonId_CHARMELEON     PokemonId = 5
	PokemonId_CHARIZARD      PokemonId = 6
	PokemonId_SQUIRTLE       PokemonId = 7
	PokemonId_WARTORTLE      PokemonId = 8
	PokemonId_BLASTOISE      PokemonId = 9
	PokemonId_CATERPIE       PokemonId = 10
	PokemonId_METAPOD        PokemonId = 11
	PokemonId_BUTTERFREE     PokemonId = 12
	PokemonId_WEEDLE         PokemonId = 13
	PokemonId_KAKUNA         PokemonId = 14
	PokemonId_BEEDRILL       PokemonId = 15
	PokemonId_PIDGEY         PokemonId = 16
	PokemonId_PIDGEOTTO      PokemonId = 17
	PokemonId_PIDGEOT        PokemonId = 18
	PokemonId_RATTATA        PokemonId = 19
	PokemonId_RATICATE       PokemonId = 20
	PokemonId_SPEAROW        PokemonId = 21
	PokemonId_FEAROW         PokemonId = 22
	PokemonId_EKANS          PokemonId = 23
	PokemonId_ARBOK          PokemonId = 24
	PokemonId_PIKACHU        PokemonId = 25
	PokemonId_RAICHU         PokemonId = 26
	PokemonId_SANDSHREW      PokemonId = 27
	PokemonId_SANDLASH       PokemonId = 28
	PokemonId_NIDORAN_FEMALE PokemonId = 29
	PokemonId_NIDORINA       PokemonId = 30
	PokemonId_NIDOQUEEN      PokemonId = 31
	PokemonId_NIDORAN_MALE   PokemonId = 32
	PokemonId_NIDORINO       PokemonId = 33
	PokemonId_NIDOKING       PokemonId = 34
	PokemonId_CLEFARY        PokemonId = 35
	PokemonId_CLEFABLE       PokemonId = 36
	PokemonId_VULPIX         PokemonId = 37
	PokemonId_NINETALES      PokemonId = 38
	PokemonId_JIGGLYPUFF     PokemonId = 39
	PokemonId_WIGGLYTUFF     PokemonId = 40
	PokemonId_ZUBAT          PokemonId = 41
	PokemonId_GOLBAT         PokemonId = 42
	PokemonId_ODDISH         PokemonId = 43
	PokemonId_GLOOM          PokemonId = 44
	PokemonId_VILEPLUME      PokemonId = 45
	PokemonId_PARAS          PokemonId = 46
	PokemonId_PARASECT       PokemonId = 47
	PokemonId_VENONAT        PokemonId = 48
	PokemonId_VENOMOTH       PokemonId = 49
	PokemonId_DIGLETT        PokemonId = 50
	PokemonId_DUGTRIO        PokemonId = 51
	PokemonId_MEOWTH         PokemonId = 52
	PokemonId_PERSIAN        PokemonId = 53
	PokemonId_PSYDUCK        PokemonId = 54
	PokemonId_GOLDUCK        PokemonId = 55
	PokemonId_MANKEY         PokemonId = 56
	PokemonId_PRIMEAPE       PokemonId = 57
	PokemonId_GROWLITHE      PokemonId = 58
	PokemonId_ARCANINE       PokemonId = 59
	PokemonId_POLIWAG        PokemonId = 60
	PokemonId_POLIWHIRL      PokemonId = 61
	PokemonId_POLIWRATH      PokemonId = 62
	PokemonId_ABRA           PokemonId = 63
	PokemonId_KADABRA        PokemonId = 64
	PokemonId_ALAKHAZAM      PokemonId = 65
	PokemonId_MACHOP         PokemonId = 66
	PokemonId_MACHOKE        PokemonId = 67
	PokemonId_MACHAMP        PokemonId = 68
	PokemonId_BELLSPROUT     PokemonId = 69
	PokemonId_WEEPINBELL     PokemonId = 70
	PokemonId_VICTREEBELL    PokemonId = 71
	PokemonId_TENTACOOL      PokemonId = 72
	PokemonId_TENTACRUEL     PokemonId = 73
	PokemonId_GEODUGE        PokemonId = 74
	PokemonId_GRAVELER       PokemonId = 75
	PokemonId_GOLEM          PokemonId = 76
	PokemonId_PONYTA         PokemonId = 77
	PokemonId_RAPIDASH       PokemonId = 78
	PokemonId_SLOWPOKE       PokemonId = 79
	PokemonId_SLOWBRO        PokemonId = 80
	PokemonId_MAGNEMITE      PokemonId = 81
	PokemonId_MAGNETON       PokemonId = 82
	PokemonId_FARFETCHD      PokemonId = 83
	PokemonId_DODUO          PokemonId = 84
	PokemonId_DODRIO         PokemonId = 85
	PokemonId_SEEL           PokemonId = 86
	PokemonId_DEWGONG        PokemonId = 87
	PokemonId_GRIMER         PokemonId = 88
	PokemonId_MUK            PokemonId = 89
	PokemonId_SHELLDER       PokemonId = 90
	PokemonId_CLOYSTER       PokemonId = 91
	PokemonId_GASTLY         PokemonId = 92
	PokemonId_HAUNTER        PokemonId = 93
	PokemonId_GENGAR         PokemonId = 94
	PokemonId_ONIX           PokemonId = 95
	PokemonId_DROWZEE        PokemonId = 96
	PokemonId_HYPNO          PokemonId = 97
	PokemonId_KRABBY         PokemonId = 98
	PokemonId_KINGLER        PokemonId = 99
	PokemonId_VOLTORB        PokemonId = 100
	PokemonId_ELECTRODE      PokemonId = 101
	PokemonId_EXEGGCUTE      PokemonId = 102
	PokemonId_EXEGGUTOR      PokemonId = 103
	PokemonId_CUBONE         PokemonId = 104
	PokemonId_MAROWAK        PokemonId = 105
	PokemonId_HITMONLEE      PokemonId = 106
	PokemonId_HITMONCHAN     PokemonId = 107
	PokemonId_LICKITUNG      PokemonId = 108
	PokemonId_KOFFING        PokemonId = 109
	PokemonId_WEEZING        PokemonId = 110
	PokemonId_RHYHORN        PokemonId = 111
	PokemonId_RHYDON         PokemonId = 112
	PokemonId_CHANSEY        PokemonId = 113
	PokemonId_TANGELA        PokemonId = 114
	PokemonId_KANGASKHAN     PokemonId = 115
	PokemonId_HORSEA         PokemonId = 116
	PokemonId_SEADRA         PokemonId = 117
	PokemonId_GOLDEEN        PokemonId = 118
	PokemonId_SEAKING        PokemonId = 119
	PokemonId_STARYU         PokemonId = 120
	PokemonId_STARMIE        PokemonId = 121
	PokemonId_MR_MIME        PokemonId = 122
	PokemonId_SCYTHER        PokemonId = 123
	PokemonId_JYNX           PokemonId = 124
	PokemonId_ELECTABUZZ     PokemonId = 125
	PokemonId_MAGMAR         PokemonId = 126
	PokemonId_PINSIR         PokemonId = 127
	PokemonId_TAUROS         PokemonId = 128
	PokemonId_MAGIKARP       PokemonId = 129
	PokemonId_GYARADOS       PokemonId = 130
	PokemonId_LAPRAS         PokemonId = 131
	PokemonId_DITTO          PokemonId = 132
	PokemonId_EEVEE          PokemonId = 133
	PokemonId_VAPOREON       PokemonId = 134
	PokemonId_JOLTEON        PokemonId = 135
	PokemonId_FLAREON        PokemonId = 136
	PokemonId_PORYGON        PokemonId = 137
	PokemonId_OMANYTE        PokemonId = 138
	PokemonId_OMASTAR        PokemonId = 139
	PokemonId_KABUTO         PokemonId = 140
	PokemonId_KABUTOPS       PokemonId = 141
	PokemonId_AERODACTYL     PokemonId = 142
	PokemonId_SNORLAX        PokemonId = 143
	PokemonId_ARTICUNO       PokemonId = 144
	PokemonId_ZAPDOS         PokemonId = 145
	PokemonId_MOLTRES        PokemonId = 146
	PokemonId_DRATINI        PokemonId = 147
	PokemonId_DRAGONAIR      PokemonId = 148
	PokemonId_DRAGONITE      PokemonId = 149
	PokemonId_MEWTWO         PokemonId = 150
	PokemonId_MEW            PokemonId = 151
)

var PokemonId_name = map[int32]string{
	0:   "MISSINGNO",
	1:   "BULBASAUR",
	2:   "IVYSAUR",
	3:   "VENUSAUR",
	4:   "CHARMENDER",
	5:   "CHARMELEON",
	6:   "CHARIZARD",
	7:   "SQUIRTLE",
	8:   "WARTORTLE",
	9:   "BLASTOISE",
	10:  "CATERPIE",
	11:  "METAPOD",
	12:  "BUTTERFREE",
	13:  "WEEDLE",
	14:  "KAKUNA",
	15:  "BEEDRILL",
	16:  "PIDGEY",
	17:  "PIDGEOTTO",
	18:  "PIDGEOT",
	19:  "RATTATA",
	20:  "RATICATE",
	21:  "SPEAROW",
	22:  "FEAROW",
	23:  "EKANS",
	24:  "ARBOK",
	25:  "PIKACHU",
	26:  "RAICHU",
	27:  "SANDSHREW",
	28:  "SANDLASH",
	29:  "NIDORAN_FEMALE",
	30:  "NIDORINA",
	31:  "NIDOQUEEN",
	32:  "NIDORAN_MALE",
	33:  "NIDORINO",
	34:  "NIDOKING",
	35:  "CLEFARY",
	36:  "CLEFABLE",
	37:  "VULPIX",
	38:  "NINETALES",
	39:  "JIGGLYPUFF",
	40:  "WIGGLYTUFF",
	41:  "ZUBAT",
	42:  "GOLBAT",
	43:  "ODDISH",
	44:  "GLOOM",
	45:  "VILEPLUME",
	46:  "PARAS",
	47:  "PARASECT",
	48:  "VENONAT",
	49:  "VENOMOTH",
	50:  "DIGLETT",
	51:  "DUGTRIO",
	52:  "MEOWTH",
	53:  "PERSIAN",
	54:  "PSYDUCK",
	55:  "GOLDUCK",
	56:  "MANKEY",
	57:  "PRIMEAPE",
	58:  "GROWLITHE",
	59:  "ARCANINE",
	60:  "POLIWAG",
	61:  "POLIWHIRL",
	62:  "POLIWRATH",
	63:  "ABRA",
	64:  "KADABRA",
	65:  "ALAKHAZAM",
	66:  "MACHOP",
	67:  "MACHOKE",
	68:  "MACHAMP",
	69:  "BELLSPROUT",
	70:  "WEEPINBELL",
	71:  "VICTREEBELL",
	72:  "TENTACOOL",
	73:  "TENTACRUEL",
	74:  "GEODUGE",
	75:  "GRAVELER",
	76:  "GOLEM",
	77:  "PONYTA",
	78:  "RAPIDASH",
	79:  "SLOWPOKE",
	80:  "SLOWBRO",
	81:  "MAGNEMITE",
	82:  "MAGNETON",
	83:  "FARFETCHD",
	84:  "DODUO",
	85:  "DODRIO",
	86:  "SEEL",
	87:  "DEWGONG",
	88:  "GRIMER",
	89:  "MUK",
	90:  "SHELLDER",
	91:  "CLOYSTER",
	92:  "GASTLY",
	93:  "HAUNTER",
	94:  "GENGAR",
	95:  "ONIX",
	96:  "DROWZEE",
	97:  "HYPNO",
	98:  "KRABBY",
	99:  "KINGLER",
	100: "VOLTORB",
	101: "ELECTRODE",
	102: "EXEGGCUTE",
	103: "EXEGGUTOR",
	104: "CUBONE",
	105: "MAROWAK",
	106: "HITMONLEE",
	107: "HITMONCHAN",
	108: "LICKITUNG",
	109: "KOFFING",
	110: "WEEZING",
	111: "RHYHORN",
	112: "RHYDON",
	113: "CHANSEY",
	114: "TANGELA",
	115: "KANGASKHAN",
	116: "HORSEA",
	117: "SEADRA",
	118: "GOLDEEN",
	119: "SEAKING",
	120: "STARYU",
	121: "STARMIE",
	122: "MR_MIME",
	123: "SCYTHER",
	124: "JYNX",
	125: "ELECTABUZZ",
	126: "MAGMAR",
	127: "PINSIR",
	128: "TAUROS",
	129: "MAGIKARP",
	130: "GYARADOS",
	131: "LAPRAS",
	132: "DITTO",
	133: "EEVEE",
	134: "VAPOREON",
	135: "JOLTEON",
	136: "FLAREON",
	137: "PORYGON",
	138: "OMANYTE",
	139: "OMASTAR",
	140: "KABUTO",
	141: "KABUTOPS",
	142: "AERODACTYL",
	143: "SNORLAX",
	144: "ARTICUNO",
	145: "ZAPDOS",
	146: "MOLTRES",
	147: "DRATINI",
	148: "DRAGONAIR",
	149: "DRAGONITE",
	150: "MEWTWO",
	151: "MEW",
}
var PokemonId_value = map[string]int32{
	"MISSINGNO":      0,
	"BULBASAUR":      1,
	"IVYSAUR":        2,
	"VENUSAUR":       3,
	"CHARMENDER":     4,
	"CHARMELEON":     5,
	"CHARIZARD":      6,
	"SQUIRTLE":       7,
	"WARTORTLE":      8,
	"BLASTOISE":      9,
	"CATERPIE":       10,
	"METAPOD":        11,
	"BUTTERFREE":     12,
	"WEEDLE":         13,
	"KAKUNA":         14,
	"BEEDRILL":       15,
	"PIDGEY":         16,
	"PIDGEOTTO":      17,
	"PIDGEOT":        18,
	"RATTATA":        19,
	"RATICATE":       20,
	"SPEAROW":        21,
	"FEAROW":         22,
	"EKANS":          23,
	"ARBOK":          24,
	"PIKACHU":        25,
	"RAICHU":         26,
	"SANDSHREW":      27,
	"SANDLASH":       28,
	"NIDORAN_FEMALE": 29,
	"NIDORINA":       30,
	"NIDOQUEEN":      31,
	"NIDORAN_MALE":   32,
	"NIDORINO":       33,
	"NIDOKING":       34,
	"CLEFARY":        35,
	"CLEFABLE":       36,
	"VULPIX":         37,
	"NINETALES":      38,
	"JIGGLYPUFF":     39,
	"WIGGLYTUFF":     40,
	"ZUBAT":          41,
	"GOLBAT":         42,
	"ODDISH":         43,
	"GLOOM":          44,
	"VILEPLUME":      45,
	"PARAS":          46,
	"PARASECT":       47,
	"VENONAT":        48,
	"VENOMOTH":       49,
	"DIGLETT":        50,
	"DUGTRIO":        51,
	"MEOWTH":         52,
	"PERSIAN":        53,
	"PSYDUCK":        54,
	"GOLDUCK":        55,
	"MANKEY":         56,
	"PRIMEAPE":       57,
	"GROWLITHE":      58,
	"ARCANINE":       59,
	"POLIWAG":        60,
	"POLIWHIRL":      61,
	"POLIWRATH":      62,
	"ABRA":           63,
	"KADABRA":        64,
	"ALAKHAZAM":      65,
	"MACHOP":         66,
	"MACHOKE":        67,
	"MACHAMP":        68,
	"BELLSPROUT":     69,
	"WEEPINBELL":     70,
	"VICTREEBELL":    71,
	"TENTACOOL":      72,
	"TENTACRUEL":     73,
	"GEODUGE":        74,
	"GRAVELER":       75,
	"GOLEM":          76,
	"PONYTA":         77,
	"RAPIDASH":       78,
	"SLOWPOKE":       79,
	"SLOWBRO":        80,
	"MAGNEMITE":      81,
	"MAGNETON":       82,
	"FARFETCHD":      83,
	"DODUO":          84,
	"DODRIO":         85,
	"SEEL":           86,
	"DEWGONG":        87,
	"GRIMER":         88,
	"MUK":            89,
	"SHELLDER":       90,
	"CLOYSTER":       91,
	"GASTLY":         92,
	"HAUNTER":        93,
	"GENGAR":         94,
	"ONIX":           95,
	"DROWZEE":        96,
	"HYPNO":          97,
	"KRABBY":         98,
	"KINGLER":        99,
	"VOLTORB":        100,
	"ELECTRODE":      101,
	"EXEGGCUTE":      102,
	"EXEGGUTOR":      103,
	"CUBONE":         104,
	"MAROWAK":        105,
	"HITMONLEE":      106,
	"HITMONCHAN":     107,
	"LICKITUNG":      108,
	"KOFFING":        109,
	"WEEZING":        110,
	"RHYHORN":        111,
	"RHYDON":         112,
	"CHANSEY":        113,
	"TANGELA":        114,
	"KANGASKHAN":     115,
	"HORSEA":         116,
	"SEADRA":         117,
	"GOLDEEN":        118,
	"SEAKING":        119,
	"STARYU":         120,
	"STARMIE":        121,
	"MR_MIME":        122,
	"SCYTHER":        123,
	"JYNX":           124,
	"ELECTABUZZ":     125,
	"MAGMAR":         126,
	"PINSIR":         127,
	"TAUROS":         128,
	"MAGIKARP":       129,
	"GYARADOS":       130,
	"LAPRAS":         131,
	"DITTO":          132,
	"EEVEE":          133,
	"VAPOREON":       134,
	"JOLTEON":        135,
	"FLAREON":        136,
	"PORYGON":        137,
	"OMANYTE":        138,
	"OMASTAR":        139,
	"KABUTO":         140,
	"KABUTOPS":       141,
	"AERODACTYL":     142,
	"SNORLAX":        143,
	"ARTICUNO":       144,
	"ZAPDOS":         145,
	"MOLTRES":        146,
	"DRATINI":        147,
	"DRAGONAIR":      148,
	"DRAGONITE":      149,
	"MEWTWO":         150,
	"MEW":            151,
}

func (x PokemonId) Enum() *PokemonId {
	p := new(PokemonId)
	*p = x
	return p
}
func (x PokemonId) String() string {
	return proto.EnumName(PokemonId_name, int32(x))
}
func (x *PokemonId) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PokemonId_value, data, "PokemonId")
	if err != nil {
		return err
	}
	*x = PokemonId(value)
	return nil
}
func (PokemonId) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

type FortSponsor int32

const (
	FortSponsor_UNSET_SPONSOR FortSponsor = 0
	FortSponsor_MCDONALDS     FortSponsor = 1
	FortSponsor_POKEMON_STORE FortSponsor = 2
)

var FortSponsor_name = map[int32]string{
	0: "UNSET_SPONSOR",
	1: "MCDONALDS",
	2: "POKEMON_STORE",
}
var FortSponsor_value = map[string]int32{
	"UNSET_SPONSOR": 0,
	"MCDONALDS":     1,
	"POKEMON_STORE": 2,
}

func (x FortSponsor) Enum() *FortSponsor {
	p := new(FortSponsor)
	*p = x
	return p
}
func (x FortSponsor) String() string {
	return proto.EnumName(FortSponsor_name, int32(x))
}
func (x *FortSponsor) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(FortSponsor_value, data, "FortSponsor")
	if err != nil {
		return err
	}
	*x = FortSponsor(value)
	return nil
}
func (FortSponsor) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

type FortRenderingType int32

const (
	FortRenderingType_DEFAULT       FortRenderingType = 0
	FortRenderingType_INTERNAL_TEST FortRenderingType = 1
)

var FortRenderingType_name = map[int32]string{
	0: "DEFAULT",
	1: "INTERNAL_TEST",
}
var FortRenderingType_value = map[string]int32{
	"DEFAULT":       0,
	"INTERNAL_TEST": 1,
}

func (x FortRenderingType) Enum() *FortRenderingType {
	p := new(FortRenderingType)
	*p = x
	return p
}
func (x FortRenderingType) String() string {
	return proto.EnumName(FortRenderingType_name, int32(x))
}
func (x *FortRenderingType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(FortRenderingType_value, data, "FortRenderingType")
	if err != nil {
		return err
	}
	*x = FortRenderingType(value)
	return nil
}
func (FortRenderingType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func init() {
	proto.RegisterEnum("enum.RpcDirection", RpcDirection_name, RpcDirection_value)
	proto.RegisterEnum("enum.TeamColor", TeamColor_name, TeamColor_value)
	proto.RegisterEnum("enum.RequestMethod", RequestMethod_name, RequestMethod_value)
	proto.RegisterEnum("enum.PokemonMove", PokemonMove_name, PokemonMove_value)
	proto.RegisterEnum("enum.ItemType", ItemType_name, ItemType_value)
	proto.RegisterEnum("enum.InventoryUpgradeType", InventoryUpgradeType_name, InventoryUpgradeType_value)
	proto.RegisterEnum("enum.ItemTypeCategory", ItemTypeCategory_name, ItemTypeCategory_value)
	proto.RegisterEnum("enum.EggIncubatorType", EggIncubatorType_name, EggIncubatorType_value)
	proto.RegisterEnum("enum.PokemonFamilyId", PokemonFamilyId_name, PokemonFamilyId_value)
	proto.RegisterEnum("enum.MapObjectsStatus", MapObjectsStatus_name, MapObjectsStatus_value)
	proto.RegisterEnum("enum.FortType", FortType_name, FortType_value)
	proto.RegisterEnum("enum.PokemonId", PokemonId_name, PokemonId_value)
	proto.RegisterEnum("enum.FortSponsor", FortSponsor_name, FortSponsor_value)
	proto.RegisterEnum("enum.FortRenderingType", FortRenderingType_name, FortRenderingType_value)
}

func init() { proto.RegisterFile("enum.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 4776 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x6c, 0x5a, 0xe9, 0x97, 0x1d, 0xc7,
	0x55, 0xf7, 0x9b, 0x91, 0x66, 0xa4, 0xd6, 0x8c, 0x54, 0x7a, 0xb2, 0xe5, 0xdd, 0x8e, 0xed, 0x10,
	0xc2, 0x10, 0xb2, 0xd8, 0x24, 0x0e, 0x84, 0xc4, 0xd4, 0xeb, 0xae, 0xf7, 0x5e, 0xeb, 0x75, 0x77,
	0xb5, 0xab, 0xbb, 0xe7, 0xe9, 0x4d, 0x48, 0x1e, 0xb2, 0x3c, 0x96, 0xe5, 0x58, 0x33, 0xb2, 0x34,
	0xb2, 0x51, 0x48, 0x02, 0x24, 0xc4, 0x09, 0x21, 0x2c, 0x8e, 0xed, 0xe4, 0x1c, 0x3e, 0xb1, 0x7f,
	0x82, 0x7f, 0x80, 0xc3, 0x7a, 0xf8, 0x82, 0x03, 0x84, 0x7d, 0xcb, 0xc2, 0xbe, 0x25, 0xec, 0xe7,
	0xc0, 0x77, 0x7e, 0xbf, 0x5b, 0xbd, 0x4d, 0x4e, 0x3e, 0xcc, 0x39, 0xaf, 0x6e, 0x55, 0x57, 0xdd,
	0xba, 0xeb, 0xef, 0xde, 0x9a, 0x20, 0xd8, 0xdd, 0xbb, 0x71, 0xe5, 0xcd, 0x57, 0xaf, 0xed, 0x1f,
	0xec, 0x0f, 0x8f, 0xf0, 0xf7, 0xd6, 0x3b, 0x82, 0x0d, 0x77, 0xf5, 0x62, 0x74, 0xf9, 0xda, 0xee,
	0xc5, 0x83, 0xcb, 0xfb, 0x7b, 0xc3, 0x13, 0xc1, 0x7a, 0x95, 0xcd, 0x32, 0x3b, 0xcf, 0xd4, 0x2d,
	0xc3, 0x8d, 0xe0, 0x98, 0x33, 0x45, 0x6e, 0xb3, 0xc2, 0xa8, 0x01, 0xa7, 0x9c, 0x79, 0xbc, 0x32,
	0x45, 0xa9, 0x56, 0xb6, 0x1e, 0x0d, 0x8e, 0x97, 0xbb, 0x17, 0xae, 0x84, 0xfb, 0xcf, 0xee, 0x5f,
	0xe3, 0x4c, 0x66, 0xaa, 0xd2, 0xe9, 0x04, 0x1f, 0x1d, 0x0b, 0x8e, 0x8c, 0x92, 0x8a, 0x1f, 0xac,
	0x07, 0xab, 0xce, 0x44, 0x6a, 0x65, 0x18, 0x04, 0x6b, 0x0b, 0x93, 0x24, 0x76, 0xae, 0x56, 0xb7,
	0x7e, 0x7b, 0x23, 0xd8, 0x74, 0xbb, 0xcf, 0xdd, 0xd8, 0xbd, 0x7e, 0x90, 0xee, 0x1e, 0x3c, 0xbd,
	0xff, 0xe4, 0x50, 0x05, 0x1b, 0xa9, 0x29, 0xa7, 0x36, 0x5a, 0x56, 0x38, 0xa8, 0xc4, 0x16, 0xa7,
	0x83, 0xcd, 0x3c, 0xd1, 0x0b, 0xe3, 0x96, 0x55, 0x1e, 0xe9, 0x92, 0x7b, 0x9d, 0x0c, 0x82, 0x89,
	0x29, 0x97, 0x9e, 0x8c, 0x2d, 0xb1, 0x84, 0xe3, 0x38, 0xdb, 0x36, 0x59, 0x69, 0xdd, 0x42, 0x1d,
	0x19, 0xde, 0x16, 0x9c, 0x8e, 0xc0, 0x77, 0x62, 0x75, 0xb4, 0xc4, 0x3e, 0x65, 0x9c, 0x4d, 0x0a,
	0x75, 0x74, 0x78, 0x77, 0x70, 0x7b, 0x4b, 0x8e, 0x4b, 0x93, 0x2e, 0xf1, 0x87, 0x6d, 0x4a, 0x53,
	0xa8, 0xb5, 0xe1, 0x83, 0xc1, 0x7d, 0xed, 0xa4, 0x33, 0xa9, 0x2d, 0xcd, 0x32, 0xb4, 0xd9, 0x38,
	0x9e, 0x2c, 0xb7, 0x8d, 0x2b, 0x62, 0x9b, 0xa9, 0xf5, 0xe1, 0xa9, 0xe0, 0xc4, 0xd8, 0xba, 0x12,
	0x7b, 0x6a, 0x17, 0x4e, 0xd5, 0xee, 0x70, 0x33, 0x38, 0x6e, 0xb2, 0xd0, 0x56, 0x59, 0x09, 0x56,
	0x9e, 0x22, 0x2b, 0xa1, 0x2e, 0xc3, 0xe9, 0x32, 0xb7, 0x33, 0x6c, 0x91, 0xa9, 0x4b, 0xbc, 0x92,
	0x7c, 0x12, 0x99, 0x52, 0xc7, 0x49, 0xa1, 0x9e, 0xa6, 0x28, 0xe5, 0xf0, 0x0a, 0xa2, 0xbc, 0x3c,
	0x3c, 0x13, 0x9c, 0x22, 0xf7, 0xa9, 0xce, 0x97, 0x76, 0x74, 0xce, 0x84, 0x65, 0xa1, 0x9e, 0x19,
	0xde, 0x1e, 0x9c, 0xa9, 0x3f, 0xca, 0x13, 0xbb, 0x68, 0x77, 0xdb, 0x6b, 0x27, 0x9c, 0x09, 0x75,
	0x92, 0xb4, 0x13, 0xfb, 0xdc, 0xc6, 0x99, 0xc4, 0xe8, 0xc2, 0xb4, 0xc4, 0xab, 0x24, 0xe2, 0x10,
	0x7f, 0xd5, 0xdc, 0x96, 0xbc, 0xc3, 0x73, 0xc3, 0x5b, 0x03, 0xd5, 0x12, 0x43, 0x9d, 0x97, 0x95,
	0x33, 0xea, 0x1a, 0x39, 0x6f, 0xa9, 0xe3, 0xc4, 0x18, 0x75, 0xfd, 0xd0, 0xd7, 0xce, 0x6c, 0xc7,
	0xdb, 0x46, 0x1d, 0xf0, 0x3a, 0x50, 0x6e, 0x64, 0x1a, 0x11, 0xdc, 0xa0, 0x4c, 0x3c, 0xc5, 0x8e,
	0xc7, 0x10, 0xc2, 0xf3, 0xc3, 0x61, 0x70, 0xd2, 0x13, 0x5a, 0x83, 0x79, 0xa1, 0xfb, 0x0c, 0xb4,
	0x2a, 0x29, 0xd5, 0xf7, 0x0d, 0xcf, 0x06, 0xc3, 0x4e, 0x8b, 0xcb, 0xdc, 0xd9, 0x71, 0x9c, 0x18,
	0x75, 0xb3, 0xd5, 0xa6, 0xf0, 0xac, 0xc3, 0x99, 0xfa, 0x20, 0x49, 0xa3, 0x6a, 0xd1, 0x23, 0x7d,
	0x3f, 0xf7, 0x23, 0x69, 0xd2, 0x50, 0x3e, 0xc4, 0x53, 0xcd, 0xb6, 0x4d, 0xb6, 0xbb, 0xfb, 0x7f,
	0x98, 0x57, 0xe5, 0x5e, 0x53, 0xaa, 0xc4, 0x44, 0x4b, 0x33, 0x81, 0x15, 0x7c, 0x64, 0x78, 0x7f,
	0x70, 0x77, 0xab, 0xb3, 0x65, 0x59, 0xc1, 0x64, 0x62, 0x9d, 0x40, 0xd7, 0x30, 0x05, 0x03, 0x03,
	0xfb, 0x01, 0x58, 0x8f, 0x4a, 0xcc, 0xb6, 0x49, 0x60, 0x72, 0xe0, 0x77, 0xae, 0x5d, 0x54, 0xa8,
	0x1f, 0x1c, 0x0c, 0xef, 0x0c, 0x6e, 0xc5, 0x36, 0xe1, 0x6c, 0xa9, 0x49, 0xc2, 0x7e, 0x23, 0x1d,
	0x4d, 0x60, 0x3a, 0x3f, 0x34, 0x00, 0x87, 0x1b, 0xad, 0xa8, 0x26, 0x8b, 0x54, 0x7d, 0x7c, 0x80,
	0xb3, 0x45, 0xaf, 0x18, 0xb5, 0xaa, 0x7f, 0x71, 0xc0, 0xad, 0x8b, 0x52, 0x3b, 0x4f, 0x1f, 0xe9,
	0xb2, 0xc4, 0x9d, 0x3f, 0x31, 0x80, 0x0c, 0x03, 0xfc, 0xc6, 0x45, 0xe4, 0xeb, 0x4f, 0x0e, 0x60,
	0xa9, 0x67, 0xa1, 0xe2, 0x45, 0x98, 0x98, 0xce, 0xae, 0x65, 0x7b, 0xf5, 0x23, 0x83, 0xe1, 0x1d,
	0xc1, 0x99, 0xd0, 0x26, 0x09, 0x6c, 0x65, 0x19, 0x61, 0xe3, 0xc5, 0x72, 0x64, 0xb3, 0xaa, 0x50,
	0x9f, 0x1a, 0x40, 0xa8, 0xa7, 0x5b, 0x3e, 0xce, 0xe7, 0xa0, 0x5b, 0x78, 0xe8, 0x8f, 0xca, 0x76,
	0x2d, 0x1d, 0x52, 0xc0, 0x9e, 0x61, 0x85, 0xd3, 0xad, 0x53, 0x9f, 0x1e, 0x40, 0x96, 0x27, 0x64,
	0x32, 0x0b, 0x0d, 0x95, 0xf5, 0x63, 0x72, 0x80, 0xf7, 0x28, 0xa1, 0xb4, 0x02, 0xfd, 0x71, 0x39,
	0xa0, 0xa1, 0x76, 0x76, 0xff, 0x13, 0x42, 0xd7, 0x51, 0xb4, 0x14, 0xdb, 0x4c, 0x6d, 0x14, 0x8f,
	0x63, 0xd0, 0x7f, 0x72, 0x00, 0x1b, 0x3a, 0x19, 0xc5, 0xc5, 0xac, 0xb7, 0xf8, 0xa5, 0xc1, 0xf0,
	0x81, 0xe0, 0x9e, 0xc3, 0xfc, 0x47, 0x66, 0x6c, 0xb2, 0x08, 0xda, 0xf0, 0x17, 0xf9, 0x8c, 0x48,
	0xaf, 0xca, 0x27, 0x62, 0x31, 0xcd, 0xe9, 0x2f, 0x8b, 0x06, 0xe0, 0xcd, 0xcb, 0xb1, 0xde, 0x86,
	0xce, 0xca, 0x6e, 0xea, 0x15, 0x11, 0x6c, 0x16, 0x87, 0xb3, 0x4c, 0xa7, 0x1d, 0xf9, 0x55, 0xb9,
	0x1b, 0xe2, 0x54, 0x9c, 0x7b, 0x5d, 0xa9, 0xcf, 0xb6, 0x7b, 0xc0, 0xb5, 0x21, 0xef, 0xb2, 0x8b,
	0x0e, 0x9f, 0x93, 0x3d, 0x78, 0x6d, 0x5d, 0x70, 0x41, 0x14, 0x4f, 0x18, 0xde, 0x7e, 0x69, 0x85,
	0x77, 0x23, 0xb9, 0x0d, 0x0e, 0x95, 0x83, 0x2e, 0x7f, 0x79, 0x65, 0x78, 0x4f, 0x70, 0x3b, 0xe9,
	0x45, 0x35, 0xe1, 0x4a, 0xd8, 0x43, 0x68, 0x23, 0x43, 0x06, 0x0a, 0xf5, 0xd2, 0xea, 0xf0, 0xde,
	0xe0, 0x0e, 0x6f, 0x2d, 0x0d, 0x75, 0xa9, 0xb7, 0x71, 0x59, 0x3d, 0x82, 0xc6, 0x3f, 0xb3, 0x4a,
	0xc1, 0x84, 0x89, 0x8e, 0xd3, 0x76, 0x5a, 0xbd, 0xbc, 0x4a, 0x33, 0xe0, 0xd1, 0x58, 0x08, 0x1b,
	0x51, 0xaf, 0xac, 0x52, 0x0c, 0x45, 0xe7, 0x24, 0xa5, 0xd1, 0xa9, 0x7a, 0x75, 0x95, 0xda, 0x4c,
	0xb5, 0x9b, 0x7d, 0x03, 0xdb, 0xfd, 0xec, 0x2a, 0xb9, 0xf5, 0x61, 0x2f, 0xd7, 0xf3, 0x0c, 0xa2,
	0x88, 0x33, 0x44, 0x94, 0xff, 0x5d, 0x1d, 0x1e, 0x0f, 0x8e, 0x98, 0x70, 0x6a, 0xd5, 0x4f, 0x31,
	0x0c, 0x9e, 0x8d, 0xcc, 0xa8, 0x9a, 0xd4, 0x21, 0xb5, 0x17, 0x39, 0x7f, 0xf5, 0x28, 0x75, 0xef,
	0x27, 0x23, 0xc3, 0x2d, 0x9b, 0x30, 0xfb, 0x6b, 0x47, 0x11, 0x7b, 0x86, 0xc5, 0x38, 0x8e, 0x34,
	0x7c, 0x62, 0x12, 0x17, 0x70, 0x67, 0x09, 0x28, 0x3f, 0xbd, 0x26, 0x46, 0x2d, 0x13, 0x10, 0x28,
	0x48, 0xcb, 0xc4, 0x4e, 0xd4, 0xcf, 0xac, 0x71, 0x27, 0x4f, 0x0e, 0x8d, 0x2b, 0x61, 0x11, 0xa1,
	0xff, 0xe0, 0x67, 0xd7, 0xe8, 0x2e, 0x7e, 0xa6, 0x8e, 0xe9, 0x3f, 0xd7, 0x23, 0xf9, 0x3d, 0xd4,
	0xcf, 0xf7, 0x48, 0x90, 0x7c, 0x01, 0x16, 0x7e, 0x61, 0x0d, 0x4e, 0xbe, 0x59, 0x6f, 0x59, 0x07,
	0xae, 0x5f, 0x5c, 0xdb, 0xfa, 0xc2, 0xed, 0xc1, 0x89, 0x7c, 0xff, 0x03, 0xbb, 0x57, 0xf6, 0xf7,
	0xd2, 0xfd, 0xe7, 0x77, 0x99, 0x1e, 0x52, 0x8b, 0x30, 0xd0, 0xcb, 0x20, 0xe5, 0xb4, 0x12, 0xf3,
	0x2a, 0xa6, 0x16, 0xb1, 0x82, 0x56, 0xb1, 0x01, 0xa3, 0xa0, 0x27, 0x8b, 0xd3, 0x21, 0x87, 0x20,
	0x6d, 0x15, 0xa1, 0x63, 0x9c, 0x50, 0x14, 0xd5, 0x51, 0x93, 0x8e, 0x70, 0xe2, 0x11, 0xc6, 0xf7,
	0xed, 0x38, 0x33, 0xcb, 0xf9, 0x34, 0xce, 0x91, 0x40, 0x90, 0xbd, 0xf8, 0x01, 0x54, 0xb8, 0xc6,
	0x73, 0x9c, 0xde, 0xb1, 0x6e, 0x89, 0xa8, 0x3b, 0x46, 0x6e, 0xc0, 0xd2, 0x52, 0xcf, 0x8c, 0xd8,
	0x89, 0x3a, 0xc6, 0xe1, 0x5c, 0x33, 0xc2, 0x4c, 0xaa, 0x4c, 0x1d, 0x97, 0x54, 0x08, 0x93, 0x55,
	0x01, 0x77, 0xcf, 0xe1, 0x0b, 0x91, 0x3a, 0xc1, 0xd0, 0x19, 0xd9, 0x0a, 0x16, 0xb1, 0x2c, 0x12,
	0x9d, 0xab, 0x0d, 0xae, 0x9a, 0x3b, 0xfc, 0xda, 0xe4, 0xee, 0xd3, 0x45, 0x4e, 0x97, 0xa0, 0xd2,
	0x4f, 0x72, 0x26, 0x01, 0xc7, 0xea, 0x14, 0x67, 0x22, 0x6a, 0x3f, 0xaf, 0x12, 0x78, 0xab, 0xe2,
	0x4c, 0x91, 0x42, 0xe2, 0xa7, 0xc9, 0x5d, 0x91, 0x54, 0xb4, 0xf3, 0xa1, 0x48, 0x01, 0x61, 0x07,
	0xb6, 0x91, 0xe8, 0xb9, 0x3a, 0xe3, 0x2f, 0x12, 0x9a, 0xe5, 0xc4, 0xe1, 0x22, 0xb7, 0x4a, 0x22,
	0x4b, 0x68, 0x94, 0xf3, 0xa9, 0x31, 0x89, 0xba, 0x8d, 0x49, 0x29, 0x35, 0x13, 0x3d, 0xb5, 0x2e,
	0x53, 0x67, 0x39, 0x3d, 0x87, 0x57, 0x34, 0xf2, 0xb9, 0x5d, 0xb2, 0x18, 0xd7, 0x97, 0x53, 0x67,
	0xe7, 0x90, 0xcc, 0x1d, 0xa4, 0x14, 0x55, 0x38, 0x63, 0xec, 0xae, 0x32, 0x88, 0xed, 0x4e, 0xe6,
	0x78, 0x38, 0x8d, 0xba, 0x8b, 0x7b, 0x21, 0xc1, 0x2f, 0x67, 0xe4, 0xf7, 0x6e, 0x72, 0x12, 0x3a,
	0x5b, 0x14, 0x4b, 0x58, 0x5f, 0xae, 0xee, 0xe1, 0x38, 0x2f, 0x16, 0x18, 0x2c, 0xc3, 0xaa, 0x54,
	0xf7, 0x52, 0xf4, 0x18, 0xcb, 0x35, 0xef, 0xe3, 0x24, 0xf2, 0x4a, 0x39, 0x7d, 0xbc, 0x82, 0x28,
	0xd5, 0xfd, 0x1c, 0x17, 0xa5, 0x85, 0x02, 0x0c, 0xaf, 0xf5, 0x3a, 0x5e, 0x83, 0xb7, 0xf0, 0x47,
	0x3e, 0x40, 0x3e, 0xa7, 0x5c, 0xbf, 0x44, 0x50, 0x4d, 0x73, 0xf5, 0x20, 0xe7, 0x11, 0x6f, 0xc2,
	0xa9, 0x76, 0x58, 0xfe, 0x50, 0xcd, 0x76, 0x31, 0x85, 0xbd, 0x64, 0x19, 0xac, 0xea, 0xf5, 0x94,
	0x56, 0x0e, 0xaf, 0x54, 0xdf, 0x24, 0x72, 0x74, 0x31, 0x93, 0x28, 0xc7, 0x6f, 0x90, 0xb4, 0x8c,
	0xad, 0x85, 0x91, 0x6f, 0xe6, 0x68, 0x94, 0xc4, 0x3b, 0x3b, 0x88, 0xf4, 0xea, 0x8d, 0xdc, 0x56,
	0xc7, 0x8e, 0x5a, 0x2a, 0xa6, 0xea, 0x5b, 0x38, 0xc4, 0xb1, 0xe5, 0x72, 0xae, 0x91, 0x13, 0xb7,
	0x44, 0xf3, 0x10, 0x97, 0x31, 0x11, 0x0c, 0xe3, 0x5b, 0xe5, 0x82, 0x36, 0x2e, 0xe0, 0x08, 0xe7,
	0xf4, 0x48, 0xbd, 0x89, 0x63, 0x6d, 0xc4, 0x4f, 0x75, 0x68, 0xd4, 0xb7, 0x09, 0x8f, 0x72, 0xb0,
	0x83, 0x65, 0xbc, 0x99, 0x89, 0x2b, 0x17, 0x4d, 0xb5, 0xe7, 0xbd, 0xc5, 0x6b, 0x6f, 0x02, 0xcb,
	0x77, 0x3a, 0xce, 0xd4, 0x5b, 0x85, 0x1b, 0xb8, 0xe4, 0xa8, 0xda, 0xd9, 0x51, 0x6f, 0xe3, 0xad,
	0xeb, 0x03, 0xc6, 0x3a, 0x9b, 0xa8, 0x87, 0x49, 0xc8, 0xe2, 0xc9, 0xb4, 0xac, 0x19, 0x7c, 0x84,
	0x36, 0xe6, 0x7f, 0x7e, 0x3b, 0xe7, 0x46, 0xd5, 0x88, 0x36, 0x26, 0x37, 0x7b, 0xbb, 0x88, 0xb4,
	0x1a, 0xa5, 0x71, 0x21, 0x98, 0xe6, 0x1d, 0x5c, 0x30, 0xd3, 0x8e, 0x71, 0x40, 0x14, 0xf4, 0x28,
	0xf9, 0xa3, 0xfa, 0x8a, 0xb9, 0x31, 0xb9, 0x7a, 0x27, 0xcf, 0xd6, 0x50, 0xc7, 0xf2, 0x1c, 0xbc,
	0xe9, 0x3b, 0x44, 0x12, 0x1c, 0x31, 0xa3, 0xa9, 0xef, 0xe4, 0xb0, 0x30, 0x4c, 0x85, 0x36, 0x1d,
	0xa9, 0x77, 0x71, 0x2d, 0x74, 0xe9, 0xdd, 0xec, 0xbb, 0xc4, 0x43, 0xf0, 0x6b, 0x29, 0x46, 0xa3,
	0xde, 0x4d, 0x4f, 0xd4, 0x59, 0x18, 0x23, 0xd6, 0x20, 0x2e, 0xd1, 0x8a, 0xde, 0xc3, 0xef, 0xfd,
	0x12, 0x7e, 0xff, 0x58, 0xfb, 0x45, 0x91, 0xc4, 0x91, 0x51, 0xdf, 0xcd, 0x69, 0x59, 0xc9, 0x44,
	0xaf, 0xb4, 0xd8, 0xdc, 0x54, 0x47, 0x64, 0x2e, 0x33, 0x7a, 0xa6, 0x46, 0x3d, 0x8a, 0x37, 0x89,
	0x90, 0xd7, 0xa9, 0x29, 0x62, 0xf9, 0x11, 0x97, 0xd8, 0x34, 0xce, 0x6c, 0x55, 0x2c, 0xa1, 0xa4,
	0x48, 0x99, 0xde, 0x92, 0x11, 0x40, 0x94, 0x1a, 0x7b, 0x34, 0x81, 0x84, 0x54, 0xd6, 0xbb, 0x4c,
	0xb8, 0x24, 0xd5, 0x93, 0x0c, 0x14, 0xb9, 0xd9, 0xd4, 0x1b, 0x22, 0x5c, 0x85, 0x7b, 0x4c, 0x54,
	0x2c, 0x86, 0xe8, 0xa0, 0x01, 0xd8, 0x41, 0xa4, 0xce, 0x11, 0x69, 0xe4, 0x10, 0xe2, 0xc8, 0xc2,
	0x49, 0x97, 0xb5, 0xf9, 0xcd, 0x44, 0x0d, 0x20, 0xcf, 0x54, 0xd2, 0x8f, 0x42, 0xfe, 0x8c, 0x94,
	0x86, 0x5f, 0x93, 0x54, 0x26, 0x28, 0xca, 0x0f, 0xb0, 0x47, 0xa9, 0xac, 0xcc, 0xce, 0x11, 0x66,
	0x31, 0x9b, 0xf3, 0x6b, 0x98, 0xc2, 0x04, 0xe7, 0x8d, 0x1c, 0x0c, 0x6f, 0xaa, 0x1e, 0x27, 0xcf,
	0x35, 0xc9, 0x07, 0x02, 0x27, 0xd1, 0xc4, 0x53, 0xe4, 0xe6, 0x05, 0x01, 0x1c, 0x9c, 0x41, 0xbb,
	0x94, 0xae, 0xbc, 0x6d, 0x61, 0xdd, 0xaa, 0xac, 0xb7, 0x8a, 0x33, 0xd2, 0x66, 0x30, 0x02, 0x55,
	0xd1, 0x02, 0x23, 0xbd, 0xb3, 0x93, 0x90, 0x34, 0x49, 0x68, 0x25, 0xdb, 0xbc, 0x5f, 0x6a, 0x6d,
	0x36, 0x82, 0x15, 0x95, 0x6a, 0x2e, 0x36, 0x8d, 0x44, 0xb0, 0x74, 0xb6, 0x9a, 0x4c, 0xd5, 0x79,
	0x9e, 0xee, 0x9d, 0xda, 0x1b, 0xa2, 0x5a, 0x88, 0x50, 0x25, 0xf8, 0x78, 0x89, 0xed, 0xf4, 0x08,
	0xe2, 0x26, 0xef, 0xe5, 0x96, 0x88, 0x85, 0x33, 0x46, 0xe1, 0x52, 0x7d, 0x8f, 0x44, 0x9c, 0x2a,
	0xf2, 0xa3, 0xf7, 0x71, 0x72, 0x44, 0x3f, 0x0f, 0x93, 0x6a, 0xa4, 0xde, 0xef, 0x0d, 0x3e, 0x49,
	0x22, 0xbb, 0x63, 0xd4, 0xb2, 0x59, 0x2a, 0x1b, 0x7f, 0xaf, 0xc4, 0xae, 0x0a, 0x70, 0x08, 0xe1,
	0x83, 0xd2, 0xb9, 0xd0, 0x7a, 0x07, 0xe3, 0xeb, 0x13, 0x72, 0x6e, 0x3c, 0xc9, 0xe8, 0x50, 0xbc,
	0xca, 0x45, 0x6e, 0x7d, 0x7e, 0x59, 0x84, 0xb8, 0x2b, 0xf0, 0xce, 0x93, 0x6d, 0x28, 0x6b, 0xd4,
	0xb4, 0xdb, 0x05, 0xc3, 0x51, 0xe5, 0x70, 0xdb, 0xa7, 0x78, 0xdb, 0x71, 0xec, 0x30, 0x96, 0xdb,
	0x5f, 0xa2, 0x1e, 0x47, 0x0e, 0x0e, 0x0e, 0xf0, 0xce, 0xc8, 0x28, 0x61, 0xdd, 0x4b, 0xfd, 0xb2,
	0xe8, 0x18, 0x58, 0x3c, 0x02, 0x6a, 0x97, 0x98, 0x1d, 0x39, 0x8b, 0x39, 0x04, 0xa3, 0x0f, 0xd4,
	0x91, 0x2d, 0x9c, 0xc6, 0xa1, 0x7a, 0x56, 0x4c, 0x19, 0xae, 0x51, 0xba, 0x18, 0x81, 0xed, 0x4a,
	0x13, 0xc8, 0x60, 0x87, 0x70, 0xf8, 0x3d, 0x1f, 0x7c, 0x16, 0xde, 0x40, 0xf7, 0x85, 0x45, 0x48,
	0xb7, 0x6c, 0xb4, 0x7d, 0x95, 0xa1, 0x5d, 0x8f, 0xc0, 0xff, 0x08, 0x00, 0x9e, 0xf5, 0x4f, 0xdc,
	0x06, 0x87, 0x6b, 0x2d, 0xb7, 0xde, 0xae, 0xae, 0x8b, 0xa9, 0xda, 0x44, 0xd7, 0xa9, 0xe3, 0x80,
	0x63, 0xa6, 0x28, 0xde, 0x06, 0x4e, 0x75, 0xc3, 0xc7, 0x27, 0x3a, 0x95, 0x24, 0xb5, 0xe7, 0x25,
	0x6d, 0xe4, 0x12, 0x2d, 0x5e, 0x60, 0x78, 0xd4, 0x61, 0x1c, 0x01, 0x9f, 0x33, 0x6a, 0x21, 0xe4,
	0xd5, 0x42, 0xbe, 0x29, 0x31, 0xaf, 0x72, 0x0e, 0x59, 0x1c, 0x72, 0xf8, 0xa0, 0x84, 0x15, 0xc7,
	0x14, 0x4a, 0x16, 0x89, 0xc8, 0x11, 0xfd, 0x19, 0xcf, 0x3f, 0x24, 0x02, 0x99, 0xc7, 0xe3, 0x12,
	0xf8, 0x9b, 0xe1, 0x19, 0x09, 0xa5, 0x49, 0x23, 0x1f, 0x91, 0x39, 0xb8, 0x7a, 0x0e, 0x90, 0xbd,
	0x19, 0x1c, 0xa3, 0xef, 0x8c, 0xb0, 0x3f, 0xc1, 0xf5, 0xa9, 0x26, 0xdf, 0x49, 0x48, 0x03, 0xa4,
	0x06, 0x5e, 0x41, 0x08, 0x4b, 0xd5, 0x47, 0x59, 0xf0, 0xc1, 0x36, 0xa2, 0xc5, 0x52, 0xc6, 0x1f,
	0x93, 0x29, 0x47, 0x6c, 0xf6, 0xc3, 0x03, 0xee, 0x02, 0x91, 0x02, 0x81, 0x21, 0xf2, 0x7a, 0xd0,
	0x2d, 0xca, 0xf0, 0x9a, 0x83, 0x69, 0x1a, 0x82, 0x6e, 0x40, 0xbe, 0x4e, 0x2f, 0xbd, 0x29, 0x0f,
	0xbc, 0x99, 0x70, 0x91, 0x16, 0x8d, 0xc9, 0x08, 0xbc, 0x71, 0x96, 0x10, 0xf2, 0x38, 0x9b, 0x11,
	0x6b, 0x03, 0xdb, 0xf4, 0x8c, 0x0d, 0xdc, 0xe1, 0xdc, 0xdf, 0x19, 0x10, 0x88, 0x34, 0x26, 0xe7,
	0x69, 0xaf, 0x79, 0x36, 0xdb, 0xf1, 0xe7, 0x05, 0x13, 0xf7, 0x33, 0xa4, 0xa7, 0xff, 0xee, 0x80,
	0x38, 0xea, 0x90, 0x33, 0xfb, 0x89, 0xdf, 0x93, 0x89, 0x43, 0x48, 0xc5, 0x4f, 0xfc, 0xbe, 0x70,
	0x29, 0x71, 0xc4, 0x13, 0xbe, 0x20, 0xc7, 0x37, 0x19, 0xd6, 0xd3, 0xfe, 0x40, 0x38, 0xed, 0xc5,
	0x71, 0x4f, 0xfe, 0x43, 0xf9, 0x56, 0xc0, 0x8c, 0x27, 0xfc, 0x91, 0xac, 0xeb, 0xe5, 0x76, 0x4f,
	0xfe, 0x63, 0xe1, 0x9e, 0x89, 0xd0, 0x8f, 0xff, 0x44, 0xc6, 0x49, 0xbb, 0xfd, 0x9f, 0xfa, 0xca,
	0xa5, 0x8b, 0xab, 0x9e, 0xfc, 0x67, 0x02, 0xf0, 0x5b, 0x80, 0xe4, 0x89, 0x7f, 0x2e, 0x6a, 0xe8,
	0xa0, 0x91, 0xa7, 0xfe, 0x85, 0x30, 0xdd, 0x38, 0xbc, 0xa7, 0xfd, 0xa5, 0x7c, 0xde, 0xba, 0x81,
	0x27, 0xfe, 0x95, 0x08, 0xae, 0x6f, 0xfe, 0x9e, 0xfe, 0x45, 0xa1, 0xf7, 0x61, 0x9b, 0xa7, 0x7f,
	0x49, 0xaa, 0xaf, 0x1a, 0xbc, 0x79, 0xd2, 0x97, 0x05, 0xf7, 0x7b, 0xa0, 0xe6, 0x29, 0x5f, 0x11,
	0x39, 0x08, 0xec, 0xf2, 0x84, 0xbf, 0x16, 0xd3, 0x81, 0x52, 0xfd, 0xf0, 0x6f, 0x84, 0xe7, 0x2e,
	0x6b, 0x7b, 0xea, 0xdf, 0x8a, 0x14, 0xe8, 0x0f, 0x7e, 0xfc, 0x77, 0x7e, 0x55, 0x0b, 0x5e, 0x3c,
	0xf5, 0xef, 0xfd, 0x7d, 0xdb, 0x44, 0xe7, 0xa9, 0xff, 0x20, 0xd4, 0x0e, 0x82, 0x79, 0xea, 0x3f,
	0xca, 0x25, 0xfa, 0xb9, 0xc6, 0xd3, 0xff, 0x49, 0x24, 0xd1, 0xe2, 0x45, 0x4f, 0xfc, 0x67, 0xb9,
	0x86, 0x77, 0x4d, 0x4f, 0xf9, 0x97, 0x01, 0xcb, 0x8a, 0xc3, 0xcb, 0x7a, 0xf6, 0xfc, 0xaf, 0x9d,
	0x8c, 0x01, 0x27, 0xfd, 0x27, 0x5f, 0x95, 0x13, 0x77, 0x8c, 0xcf, 0x54, 0xf4, 0x36, 0x4f, 0xff,
	0x9a, 0x9c, 0xc8, 0x06, 0x47, 0x45, 0x1c, 0xe0, 0x89, 0xff, 0x26, 0x8b, 0x6b, 0x31, 0x14, 0xac,
	0x8b, 0x3c, 0xfd, 0xdf, 0x85, 0x93, 0x1a, 0x46, 0x08, 0xe5, 0x3f, 0xbc, 0x96, 0x0c, 0xaa, 0x8b,
	0x43, 0xda, 0xf8, 0x4f, 0xef, 0x83, 0x6d, 0xa6, 0xf4, 0xd4, 0xff, 0x92, 0xc3, 0x24, 0x48, 0xd1,
	0xbd, 0x3d, 0xf1, 0xbf, 0x3b, 0xb9, 0x15, 0x69, 0x7b, 0xc5, 0xff, 0x19, 0x6c, 0xbd, 0x76, 0x14,
	0xc1, 0xf0, 0x60, 0xf7, 0x4a, 0x79, 0xf3, 0xea, 0x2e, 0x43, 0xa1, 0x6f, 0x96, 0xb4, 0x9d, 0x28,
	0x64, 0xab, 0xba, 0xa1, 0x01, 0xb0, 0x2d, 0x09, 0x9c, 0xbb, 0x9f, 0xf2, 0xb5, 0x37, 0x0d, 0xc6,
	0x13, 0x57, 0x5a, 0x62, 0x95, 0xa0, 0x56, 0xf1, 0x44, 0x56, 0x54, 0x4a, 0x88, 0x38, 0x91, 0x52,
	0x14, 0xea, 0x11, 0x06, 0xaa, 0x7e, 0x93, 0x64, 0x97, 0x0d, 0x24, 0x21, 0x14, 0x15, 0x63, 0x52,
	0x4d, 0x7e, 0xaa, 0x25, 0xfb, 0x50, 0x55, 0x93, 0x2f, 0xb5, 0x27, 0xa5, 0xfa, 0x7c, 0x43, 0x7c,
	0x9a, 0x12, 0xeb, 0xb7, 0x4e, 0x5e, 0x93, 0xeb, 0xb6, 0xcb, 0x6a, 0xea, 0xe7, 0xbd, 0x0b, 0x90,
	0x9a, 0x20, 0x56, 0x2c, 0x58, 0x9d, 0xb3, 0xb6, 0xbc, 0x2b, 0xb8, 0x4d, 0x88, 0x4d, 0xb1, 0x6d,
	0x5d, 0x14, 0x67, 0x1a, 0x15, 0x1a, 0x2a, 0x4b, 0x84, 0x89, 0x43, 0x73, 0x45, 0x8e, 0xd4, 0xc1,
	0x9a, 0xf2, 0x6c, 0xcd, 0x5d, 0x33, 0x11, 0x5a, 0x9b, 0xb0, 0xac, 0x44, 0x21, 0x76, 0x88, 0x3e,
	0x4e, 0x2c, 0xfb, 0x73, 0xaf, 0xac, 0xb6, 0x67, 0x97, 0xce, 0xa2, 0x0a, 0x47, 0xa1, 0xae, 0xfe,
	0x6f, 0x95, 0x36, 0xe4, 0x1b, 0x08, 0x4d, 0xdc, 0xfe, 0xe2, 0x91, 0x76, 0xe1, 0x79, 0x5f, 0xab,
	0xc3, 0xd8, 0xbe, 0xd4, 0x27, 0xa6, 0xb1, 0xd3, 0x21, 0x42, 0xf0, 0x97, 0x8f, 0xb4, 0x97, 0x44,
	0x00, 0xd8, 0x41, 0x06, 0x72, 0xe0, 0x19, 0xb5, 0x63, 0x43, 0x1d, 0x25, 0xd5, 0xac, 0xa6, 0xfe,
	0xfa, 0x51, 0xc6, 0x14, 0xa1, 0x66, 0x3a, 0x83, 0xcf, 0x79, 0xf2, 0x6f, 0x74, 0xe4, 0xb9, 0xc9,
	0x25, 0x8b, 0x91, 0xfc, 0x9b, 0x1d, 0x19, 0xa1, 0x19, 0xd6, 0xed, 0xc9, 0xbf, 0x75, 0xb4, 0xbd,
	0x5d, 0x81, 0xf0, 0x25, 0xc5, 0x30, 0x32, 0xb9, 0xd3, 0x2c, 0x40, 0x1f, 0x0a, 0xee, 0x6b, 0xee,
	0xed, 0xbb, 0x1d, 0x50, 0x77, 0x01, 0x7c, 0x56, 0x65, 0x49, 0x9c, 0x62, 0x26, 0x52, 0x1f, 0x5f,
	0x67, 0x72, 0xf8, 0x46, 0x8b, 0xd4, 0x8b, 0xeb, 0xec, 0x53, 0xb4, 0x96, 0x96, 0x8a, 0x47, 0x40,
	0x6e, 0xc0, 0x33, 0x75, 0x67, 0x42, 0x7d, 0x75, 0x7d, 0x78, 0x5f, 0x70, 0xa7, 0xff, 0x5a, 0x38,
	0xf8, 0xba, 0xf9, 0xaf, 0xad, 0x6f, 0x3d, 0x81, 0xdd, 0xf7, 0x9e, 0xdf, 0xdd, 0x3b, 0xd8, 0xbf,
	0x76, 0xb3, 0xba, 0x7a, 0xe9, 0xda, 0x85, 0x27, 0x77, 0xc5, 0xac, 0xd9, 0x6e, 0xab, 0xfb, 0x1b,
	0x4d, 0x9d, 0x7a, 0x27, 0x54, 0x9e, 0x85, 0x4e, 0x5a, 0x78, 0xfd, 0xed, 0x60, 0xde, 0xf7, 0x04,
	0x77, 0xb4, 0x53, 0x5f, 0xc7, 0x8c, 0x5a, 0xd9, 0xfa, 0x95, 0x15, 0x08, 0xa6, 0xf6, 0x97, 0xf0,
	0xc2, 0xc1, 0xee, 0x25, 0x9c, 0xd5, 0x7a, 0x49, 0x09, 0x4b, 0x5d, 0xa2, 0xf4, 0x31, 0x38, 0xe1,
	0x6c, 0x6d, 0x38, 0x42, 0xe3, 0x3e, 0xb5, 0xf7, 0x34, 0x3e, 0x51, 0xd3, 0xc5, 0x7e, 0x57, 0x0e,
	0x53, 0x6b, 0x73, 0x5d, 0x25, 0xe3, 0x1d, 0x35, 0x45, 0xa9, 0x7a, 0xe4, 0xf0, 0xc2, 0xba, 0xa7,
	0x75, 0xf4, 0x30, 0x03, 0x63, 0x6b, 0x23, 0x94, 0xcc, 0x87, 0x56, 0xd6, 0x7a, 0x5a, 0x3f, 0xbc,
	0x52, 0x8c, 0xf0, 0x18, 0xfb, 0x9c, 0x1d, 0xad, 0xeb, 0x56, 0x1d, 0x6f, 0x3d, 0xb0, 0x99, 0x10,
	0x5b, 0x0c, 0x0e, 0x5f, 0xad, 0xed, 0x7c, 0x9d, 0x60, 0xaf, 0xaf, 0xbf, 0xbc, 0xe9, 0xa4, 0x35,
	0x1a, 0xda, 0xd8, 0x7a, 0x2c, 0x50, 0xe6, 0xd2, 0xa5, 0x78, 0xef, 0xe2, 0x8d, 0x27, 0x2e, 0x40,
	0x49, 0xa2, 0x1c, 0xba, 0x73, 0x6b, 0x0d, 0x8d, 0x7a, 0x78, 0x42, 0x4b, 0x04, 0x97, 0x25, 0x4a,
	0x19, 0xe8, 0x66, 0xeb, 0x2b, 0x1b, 0x48, 0x09, 0xbe, 0xfd, 0x30, 0xbe, 0x70, 0xe5, 0xf2, 0xb3,
	0x37, 0x63, 0x0f, 0x31, 0x75, 0xca, 0xce, 0x56, 0xf3, 0x35, 0x6e, 0x5e, 0x53, 0x10, 0xfc, 0x61,
	0x60, 0xba, 0x72, 0x8a, 0x39, 0xf5, 0x74, 0x4d, 0x25, 0x16, 0x4d, 0xb5, 0xd4, 0x02, 0xf4, 0xab,
	0x53, 0x35, 0xb9, 0x40, 0xbe, 0x73, 0x94, 0xe7, 0x7a, 0x8f, 0x18, 0x32, 0xfe, 0xe7, 0x31, 0xaf,
	0x0d, 0x6d, 0xd4, 0xc4, 0xb9, 0xaf, 0x3e, 0x37, 0x7b, 0xa4, 0x3c, 0x06, 0xf8, 0x5e, 0x28, 0x45,
	0x01, 0xd7, 0x24, 0x47, 0x8f, 0x2e, 0xb5, 0x3a, 0xd3, 0xa3, 0xc1, 0x6f, 0x34, 0xeb, 0xb3, 0xdb,
	0x7a, 0x6c, 0x9b, 0x99, 0xce, 0x0a, 0x94, 0xfd, 0xdd, 0xaa, 0x3c, 0x9e, 0xe9, 0x70, 0x5a, 0xa1,
	0xcc, 0xef, 0xae, 0x52, 0x80, 0xe1, 0x62, 0xea, 0xcc, 0x1c, 0x55, 0x7e, 0xb7, 0x32, 0x8b, 0x23,
	0x58, 0x66, 0x86, 0xca, 0xbe, 0x63, 0xb9, 0xa6, 0x3d, 0x8c, 0x0a, 0xbe, 0x77, 0x8f, 0xc4, 0x8c,
	0x01, 0x31, 0x17, 0xa8, 0xd3, 0x3b, 0xa6, 0xb7, 0xab, 0x24, 0x8f, 0xcf, 0xa3, 0x3c, 0xef, 0x64,
	0x73, 0x2e, 0x06, 0xbc, 0x5b, 0xe4, 0xd5, 0x78, 0x8c, 0xba, 0xbc, 0xe3, 0x71, 0x87, 0xba, 0x40,
	0x31, 0xde, 0x7d, 0x6b, 0x23, 0xe8, 0x65, 0x8a, 0x0a, 0xbc, 0x5b, 0xc4, 0xa2, 0xac, 0xf0, 0x45,
	0x76, 0x73, 0x80, 0x81, 0x37, 0xe0, 0xc3, 0xb7, 0xf6, 0x68, 0x51, 0x0c, 0xfc, 0x08, 0x1c, 0xfa,
	0x70, 0x6f, 0xb3, 0xd4, 0xd8, 0x79, 0xc9, 0x02, 0xba, 0x27, 0x83, 0x62, 0x11, 0x21, 0x48, 0xa3,
	0x66, 0xee, 0x2d, 0xd3, 0xd9, 0x0c, 0x42, 0x7e, 0x67, 0x4f, 0x2c, 0x13, 0x48, 0x33, 0x89, 0xcb,
	0xa9, 0x41, 0x7d, 0xdc, 0xfb, 0x18, 0xa5, 0xe1, 0x5c, 0x4f, 0x50, 0x16, 0xb3, 0xdc, 0xf0, 0x34,
	0x3d, 0x82, 0x03, 0x3c, 0x76, 0x68, 0x37, 0xa9, 0xc1, 0x47, 0xbd, 0xdb, 0x8f, 0x4c, 0x92, 0x14,
	0x39, 0xea, 0xae, 0x12, 0x95, 0x6b, 0x77, 0x48, 0x69, 0xd8, 0xbf, 0x64, 0x80, 0x9f, 0xf6, 0x0e,
	0x99, 0x18, 0x1b, 0x55, 0xb0, 0xeb, 0x73, 0x7d, 0x33, 0xb0, 0xd9, 0x02, 0x2a, 0x4f, 0xfb, 0x66,
	0x05, 0xf0, 0x48, 0xff, 0x47, 0x99, 0xd9, 0xed, 0x28, 0xf5, 0x2e, 0xc3, 0x22, 0x8a, 0xcb, 0x8e,
	0x3a, 0xd6, 0x6e, 0x6c, 0x80, 0xac, 0x22, 0xd4, 0x93, 0x9d, 0x58, 0x23, 0x1c, 0x63, 0x51, 0x4c,
	0x76, 0x57, 0x29, 0xd8, 0x46, 0xda, 0xee, 0x1d, 0x3b, 0x71, 0x31, 0xfc, 0x1b, 0xa5, 0x62, 0xef,
	0xd8, 0x29, 0xee, 0x42, 0x13, 0xdf, 0xe9, 0xaf, 0x43, 0x22, 0x4e, 0x16, 0xa8, 0x07, 0xbb, 0xbd,
	0x6c, 0x06, 0x0b, 0x58, 0xf6, 0xf5, 0x03, 0x89, 0xee, 0x18, 0x83, 0xda, 0xaf, 0xfb, 0x6e, 0x86,
	0x6a, 0x7b, 0xb4, 0x40, 0xbd, 0xd7, 0x53, 0x2d, 0x2a, 0x67, 0x96, 0x48, 0x4f, 0xf6, 0xf8, 0x37,
	0xe7, 0x91, 0x51, 0x81, 0xd5, 0x8c, 0x7f, 0x9d, 0x69, 0x4c, 0xaf, 0x62, 0xb1, 0x89, 0x24, 0xdd,
	0x2d, 0x9c, 0xc6, 0x25, 0xc2, 0x2a, 0x5f, 0x3e, 0x9e, 0xe9, 0x49, 0xdf, 0x53, 0xe1, 0x9d, 0x19,
	0xea, 0xb9, 0x6e, 0x31, 0x91, 0x71, 0x5c, 0x56, 0xa8, 0x54, 0x9e, 0xed, 0x9d, 0x3f, 0xb3, 0xe3,
	0x31, 0xbb, 0x03, 0x57, 0xfa, 0x1e, 0x37, 0x5d, 0x48, 0x4f, 0x6d, 0xbf, 0x47, 0xe3, 0x76, 0x05,
	0x8c, 0xe6, 0xb9, 0x1e, 0x0d, 0xe1, 0x64, 0x62, 0x12, 0x8d, 0x72, 0xae, 0x3b, 0x1c, 0x4e, 0x08,
	0xe9, 0xcc, 0x78, 0xf8, 0xf5, 0x1e, 0xf3, 0xd8, 0xaf, 0x30, 0x1a, 0x85, 0x5d, 0x4f, 0xef, 0x16,
	0x72, 0x45, 0x01, 0xf3, 0x7c, 0x6f, 0x19, 0xdf, 0x19, 0x16, 0x15, 0x2a, 0xb9, 0x6e, 0x59, 0xea,
	0x90, 0xa9, 0x53, 0x96, 0x6f, 0x3d, 0xf7, 0x0f, 0x17, 0x30, 0x55, 0x87, 0x0a, 0xae, 0x53, 0xc0,
	0xb9, 0x45, 0x76, 0x1e, 0x95, 0x5c, 0xc7, 0x89, 0x61, 0xb3, 0x5e, 0x4b, 0xfb, 0xe9, 0xc3, 0x87,
	0xcc, 0x75, 0x92, 0x6a, 0x87, 0xba, 0xae, 0x1f, 0x74, 0xb2, 0x22, 0x76, 0xa8, 0xef, 0x86, 0x2d,
	0xa9, 0x44, 0xb0, 0xb3, 0xf2, 0x82, 0x72, 0x6b, 0x6b, 0x0a, 0xf8, 0x12, 0x01, 0xc5, 0xe5, 0xac,
	0xf4, 0xba, 0x95, 0x40, 0xad, 0x74, 0xd7, 0x8f, 0x09, 0xa4, 0x6f, 0x7d, 0xb3, 0x2c, 0x2d, 0x4b,
	0xbd, 0x8e, 0x64, 0xcc, 0xb6, 0x91, 0x72, 0xef, 0x4c, 0xcf, 0xbb, 0xdc, 0x02, 0x15, 0x15, 0x2b,
	0xb6, 0x8e, 0x68, 0xe1, 0x9c, 0x0b, 0x68, 0xfe, 0x53, 0xfd, 0x33, 0x66, 0xb8, 0x06, 0x36, 0xfc,
	0xb4, 0x07, 0xb0, 0xb5, 0x1f, 0x1a, 0x67, 0x23, 0x1d, 0x96, 0x8b, 0x84, 0x6f, 0x1c, 0xdd, 0x06,
	0x45, 0x66, 0x5d, 0xa2, 0xcf, 0xf3, 0x81, 0xa3, 0x63, 0x5d, 0xbb, 0x32, 0x0e, 0xab, 0xcc, 0xf2,
	0x79, 0xa3, 0xdb, 0x76, 0x47, 0xe7, 0x11, 0x2e, 0xf9, 0x52, 0xff, 0xf3, 0x14, 0xf6, 0x88, 0x42,
	0x95, 0xef, 0x19, 0x67, 0x7a, 0xb6, 0xac, 0x01, 0xac, 0x63, 0x3e, 0x67, 0x0c, 0x7b, 0xc1, 0x66,
	0x5e, 0xce, 0x2d, 0x9f, 0x27, 0x50, 0xa6, 0x74, 0x34, 0xf5, 0xb9, 0xc1, 0x96, 0x09, 0x54, 0x7a,
	0xe1, 0xaa, 0x7d, 0xe2, 0x99, 0xdd, 0x8b, 0x07, 0xd7, 0x8b, 0x83, 0x0b, 0x07, 0x37, 0xae, 0xd3,
	0x11, 0x25, 0xb1, 0x50, 0xc7, 0x65, 0x55, 0x20, 0xbf, 0xb0, 0x7f, 0x5d, 0x85, 0xa1, 0x29, 0x0a,
	0xc5, 0x7d, 0x4f, 0x26, 0xd6, 0x77, 0xdb, 0xeb, 0x04, 0xb4, 0xb2, 0xf5, 0x50, 0x70, 0x6c, 0xbc,
	0x7f, 0xed, 0x40, 0xf2, 0x1b, 0x4a, 0x75, 0x3e, 0x33, 0xdd, 0x22, 0xad, 0x59, 0xbe, 0x51, 0xc8,
	0x2b, 0x01, 0x72, 0xd9, 0xcb, 0x0a, 0x45, 0xa0, 0xcf, 0x65, 0xc8, 0x62, 0x6c, 0x01, 0xb1, 0x4b,
	0x98, 0x4d, 0x70, 0xd9, 0x5b, 0xa4, 0x43, 0xd3, 0xcb, 0x5d, 0x38, 0x31, 0xde, 0x5e, 0xc8, 0x60,
	0x85, 0xed, 0x0b, 0xc4, 0xd5, 0x4a, 0x46, 0xab, 0x7e, 0x5b, 0xe4, 0x33, 0x53, 0xe7, 0xb3, 0x76,
	0x9c, 0x18, 0xa8, 0xe8, 0x28, 0x77, 0xe2, 0x38, 0x96, 0x66, 0xe7, 0x1a, 0x3f, 0xee, 0xe5, 0x39,
	0xe9, 0x9b, 0x3b, 0xf8, 0x31, 0x87, 0xd2, 0x46, 0xef, 0x0a, 0x9c, 0xe3, 0x5c, 0xdb, 0x4b, 0x7f,
	0xe0, 0x81, 0x15, 0x56, 0x6e, 0xd9, 0x4c, 0xc7, 0x29, 0x23, 0x29, 0xd2, 0xc7, 0xa8, 0xe5, 0xd5,
	0x06, 0xdb, 0x1a, 0x6d, 0x52, 0xc4, 0xef, 0x99, 0x9e, 0x55, 0x99, 0x56, 0x27, 0xa5, 0x5b, 0x04,
	0x3a, 0x3b, 0xb0, 0xea, 0x14, 0x67, 0xda, 0x3c, 0xc9, 0x16, 0x0d, 0x7f, 0x5b, 0x5a, 0xdc, 0x69,
	0x69, 0xdf, 0xf8, 0x21, 0x52, 0x28, 0x5f, 0xbc, 0xdb, 0xe4, 0xc9, 0xc7, 0x70, 0x88, 0x97, 0x9c,
	0xa8, 0x5b, 0x45, 0xf6, 0x6d, 0x0e, 0xc5, 0x7e, 0x63, 0xff, 0xfb, 0xac, 0xbc, 0x23, 0xd4, 0x89,
	0x14, 0x3f, 0xb5, 0x1b, 0xd9, 0x99, 0xba, 0xc3, 0x6f, 0xdb, 0x24, 0x53, 0x2c, 0x77, 0x3a, 0xe6,
	0xef, 0xbb, 0xa4, 0x97, 0xda, 0xcb, 0xa8, 0x14, 0x0b, 0x86, 0xd2, 0x98, 0xb9, 0x87, 0x3a, 0xad,
	0x93, 0xe8, 0x72, 0x6c, 0x52, 0x8d, 0x5b, 0xdd, 0xcb, 0x15, 0x42, 0x03, 0x1e, 0x56, 0xf7, 0xf1,
	0x73, 0x8e, 0x1e, 0xaf, 0x18, 0x08, 0xee, 0xa7, 0x8d, 0x34, 0x1f, 0xc8, 0xf2, 0xd7, 0xf5, 0x96,
	0x5b, 0xf5, 0x40, 0x33, 0x9a, 0x31, 0x60, 0x3d, 0x48, 0xa6, 0x24, 0x1d, 0x4b, 0x36, 0xa6, 0x90,
	0x39, 0xe0, 0x53, 0xd5, 0xeb, 0xc9, 0x62, 0x9b, 0x94, 0xe5, 0x8c, 0x8c, 0x45, 0x2d, 0xcc, 0xfa,
	0x0d, 0x14, 0xf9, 0xa1, 0xe4, 0x8c, 0xf1, 0x5c, 0xc6, 0x25, 0xc7, 0x6f, 0xe4, 0xad, 0x9b, 0x2c,
	0x8d, 0x5d, 0x10, 0xa4, 0xf8, 0x7b, 0x8b, 0xbf, 0xdb, 0x54, 0x8d, 0x25, 0x93, 0xc4, 0xda, 0x54,
	0xbd, 0xc9, 0x3f, 0x51, 0x24, 0x26, 0x4f, 0xaa, 0x94, 0x6d, 0x72, 0xbe, 0x93, 0xd4, 0xd9, 0x9b,
	0x6d, 0x65, 0xfe, 0x44, 0x10, 0x52, 0x6f, 0x21, 0xaf, 0x5d, 0x12, 0xf7, 0x96, 0x67, 0x53, 0x8b,
	0x5c, 0xfd, 0x36, 0x4e, 0x75, 0xb9, 0x9c, 0x83, 0x6a, 0x52, 0xba, 0xd8, 0xaa, 0x47, 0x78, 0x66,
	0x9b, 0xd1, 0xa9, 0x01, 0x3e, 0xe9, 0x23, 0xae, 0xbe, 0xbd, 0x6e, 0xd2, 0xd5, 0x79, 0x1d, 0x03,
	0x86, 0x52, 0x0e, 0x1e, 0x95, 0x4f, 0x9a, 0xec, 0x4e, 0x0e, 0x98, 0xd0, 0x74, 0x6e, 0x7c, 0x13,
	0xbc, 0x9f, 0xe4, 0xd9, 0x21, 0x77, 0xa1, 0xa6, 0x64, 0xd4, 0xbb, 0x64, 0xc3, 0x36, 0xd7, 0x4b,
	0x03, 0x1b, 0x83, 0x69, 0xec, 0x12, 0xf5, 0xee, 0x76, 0xe8, 0xd8, 0xd5, 0x7b, 0x8f, 0x74, 0xdb,
	0x3c, 0x04, 0xc0, 0x47, 0x33, 0x1d, 0xc9, 0x40, 0xba, 0xde, 0x3a, 0xd1, 0x88, 0xfb, 0x3b, 0x9a,
	0x5d, 0x6f, 0xe1, 0xa3, 0xc6, 0x05, 0xb4, 0x78, 0xfe, 0x46, 0xee, 0x0e, 0x9b, 0x01, 0x5f, 0x3e,
	0x22, 0x31, 0xff, 0x3e, 0x54, 0xa0, 0x2e, 0x8c, 0x41, 0x38, 0x26, 0x55, 0x8d, 0x19, 0xdd, 0xb7,
	0xe3, 0x10, 0xf1, 0xc8, 0x08, 0x61, 0x22, 0xaf, 0x16, 0x3d, 0x10, 0x81, 0xf5, 0x7e, 0xe8, 0x2a,
	0x64, 0xf2, 0x58, 0x44, 0x41, 0x34, 0x31, 0x21, 0x9a, 0xc0, 0x0d, 0x01, 0x98, 0xb7, 0xe1, 0xc0,
	0xce, 0xb7, 0xb5, 0x21, 0x25, 0x93, 0xaa, 0x44, 0xdc, 0xa7, 0xc1, 0x17, 0xe2, 0x15, 0xf0, 0x18,
	0x1a, 0x6c, 0x26, 0xe6, 0xdb, 0xc1, 0x0c, 0xfa, 0x08, 0x46, 0x23, 0x67, 0x55, 0x2e, 0x81, 0xa5,
	0x07, 0x36, 0xd8, 0xdd, 0x95, 0x5e, 0x3b, 0x82, 0x83, 0xe3, 0x64, 0x1f, 0x73, 0xe0, 0xac, 0x06,
	0x6c, 0xe0, 0x2c, 0xfc, 0xa4, 0x3a, 0x2b, 0x79, 0xf4, 0xf2, 0x88, 0x83, 0x5a, 0x36, 0x73, 0xc4,
	0xfe, 0x89, 0x9a, 0x8b, 0x95, 0x35, 0xb8, 0x03, 0x51, 0x2e, 0xad, 0x66, 0x6a, 0x21, 0x9c, 0x74,
	0xc8, 0x43, 0x8c, 0xdb, 0x2e, 0xa4, 0xb1, 0xfe, 0x5e, 0xf9, 0xa0, 0x01, 0x20, 0xd8, 0x69, 0xaa,
	0xfd, 0x23, 0xf5, 0xfb, 0x64, 0xc2, 0x20, 0xfd, 0x3a, 0xf5, 0x7e, 0x1e, 0x56, 0x43, 0x12, 0x1e,
	0xd6, 0x62, 0x11, 0xb0, 0x36, 0x5d, 0xe4, 0x70, 0xa6, 0x0b, 0x12, 0x5f, 0x1a, 0x3c, 0x42, 0x55,
	0xc2, 0xa9, 0x28, 0xaa, 0x8b, 0x62, 0xab, 0x2d, 0x2a, 0xe1, 0x3f, 0x8b, 0x30, 0x91, 0x22, 0xd9,
	0x98, 0xfa, 0x7f, 0x47, 0x7a, 0xe8, 0xa4, 0x19, 0xf2, 0x51, 0x57, 0x5d, 0xe2, 0x96, 0x2d, 0x4a,
	0x11, 0x45, 0xe3, 0x5c, 0x3d, 0x53, 0x97, 0xa5, 0x11, 0xdb, 0xc3, 0x2a, 0x6c, 0x3a, 0xf7, 0x41,
	0xca, 0xa6, 0xef, 0xdb, 0x35, 0xe8, 0x84, 0xdc, 0xb4, 0xb0, 0x04, 0x03, 0xd8, 0xc4, 0x0e, 0x07,
	0xf2, 0xef, 0x3d, 0x1d, 0x38, 0x61, 0x1c, 0x9a, 0x2e, 0x22, 0xf9, 0xaf, 0x11, 0xc6, 0x82, 0x16,
	0xa1, 0xf0, 0x19, 0xa2, 0x85, 0x26, 0x38, 0xeb, 0x10, 0x26, 0xc1, 0x57, 0x2d, 0x18, 0x61, 0x17,
	0xd9, 0x68, 0x64, 0x37, 0x75, 0xa3, 0x71, 0x23, 0x8f, 0x48, 0xa8, 0x7a, 0xa3, 0x25, 0xce, 0xbc,
	0x20, 0xab, 0x1a, 0x5c, 0xc2, 0x89, 0x92, 0xaf, 0x13, 0xfc, 0xb7, 0x0f, 0x5e, 0xb1, 0x45, 0x27,
	0xf2, 0x1a, 0xdb, 0xc0, 0x12, 0x48, 0xbf, 0xc6, 0x23, 0x7c, 0x1c, 0xec, 0x03, 0x11, 0x71, 0x8c,
	0x1a, 0x81, 0x48, 0x1c, 0xaf, 0xa1, 0xc7, 0x09, 0xbe, 0xd2, 0x36, 0x98, 0x63, 0x53, 0xac, 0xab,
	0x05, 0x1b, 0x18, 0x4e, 0x16, 0x88, 0x25, 0x4c, 0xd6, 0x1f, 0x65, 0x16, 0x5b, 0xeb, 0x40, 0x47,
	0x00, 0x5b, 0x6b, 0xd0, 0x06, 0x7e, 0xb7, 0x30, 0x03, 0xdf, 0x6c, 0x23, 0xc9, 0x38, 0x66, 0xaf,
	0x17, 0x07, 0xb0, 0xa0, 0xf5, 0x73, 0xd0, 0x29, 0x47, 0x9f, 0x90, 0xd1, 0x38, 0xd1, 0x32, 0xf7,
	0x49, 0x19, 0xf5, 0xa0, 0x08, 0x46, 0x3d, 0x0c, 0xe2, 0x47, 0xbc, 0x32, 0xff, 0x25, 0xe3, 0x04,
	0x53, 0x52, 0x03, 0x45, 0x70, 0x82, 0x1f, 0xe4, 0x05, 0xff, 0xff, 0xe2, 0x94, 0xbc, 0x18, 0xf6,
	0x20, 0x09, 0x3e, 0xed, 0x61, 0x91, 0x4d, 0xc6, 0x9b, 0x0e, 0x84, 0x60, 0xa7, 0x0e, 0x7d, 0x60,
	0x65, 0x0f, 0x76, 0x6c, 0xd0, 0x5e, 0x5b, 0xbc, 0x71, 0x92, 0x0f, 0x8f, 0x6c, 0x3c, 0xa3, 0xea,
	0xe2, 0xff, 0x4c, 0xb4, 0x63, 0xfa, 0xe1, 0xab, 0xb2, 0x51, 0x07, 0x44, 0x8e, 0xc1, 0x7d, 0x3c,
	0x02, 0x19, 0x01, 0x17, 0x02, 0x3a, 0x14, 0x57, 0xf7, 0xf7, 0xae, 0xef, 0xfb, 0xff, 0x14, 0xf2,
	0xe0, 0x83, 0xff, 0xdc, 0x03, 0x5b, 0x15, 0x68, 0x90, 0x86, 0x30, 0x1e, 0x9d, 0x44, 0xc4, 0x1f,
	0xfc, 0x9f, 0xad, 0x5e, 0x97, 0x82, 0x3d, 0x8a, 0x47, 0x80, 0xb5, 0xb0, 0x87, 0xdb, 0xdd, 0x7b,
	0x72, 0xf7, 0xda, 0xe5, 0xbd, 0x4b, 0x82, 0x43, 0xc4, 0x75, 0xc7, 0x9a, 0xff, 0x0f, 0x24, 0xcf,
	0xf4, 0x31, 0x7d, 0x8f, 0x0f, 0x37, 0x25, 0xbb, 0xfb, 0x83, 0xff, 0x0f, 0x00, 0x00, 0xff, 0xff,
	0x65, 0x98, 0xe4, 0x79, 0xa3, 0x26, 0x00, 0x00,
}
